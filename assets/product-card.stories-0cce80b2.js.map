{"version":3,"file":"product-card.stories-0cce80b2.js","sources":["../../src/design-system/components/molecules/product-card/product-card.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { getProductPicture } from '../../../../helpers/picture-helper'\nimport { IButton } from '../../atoms/button/button'\nimport { IProduct } from '../../../../types/product'\nimport { convertNumToStr } from '../../../../helpers/format-helper'\nimport fallbackProductImageUrl from '../../../../assets/fallback-images/defaultFallbackImage.svg'\nimport { ProductCardHorizontal } from '../product-card-horizontal/product-card-horizontal'\nimport { ProductCardVertical } from '../product-card-vertical/product-card-vertical'\n\nexport type TCardDisplayType = 'vertical' | 'horizontal'\nexport interface IProductCard extends IProduct {\n  product: IProduct\n  changePackagingButton: IButton\n  addToCartButton: IButton\n  addToCart: CallableFunction\n  onChangeQuantity?: CallableFunction\n  hideCartButton?: boolean\n  loading: boolean\n  linkComponent?: any\n  showLinkIcon?: boolean\n  cardDisplay?: TCardDisplayType\n  hideRemoveButton?: boolean\n  onRemoveProduct?: CallableFunction\n  productQuantityDisabled?: boolean\n  className?: string\n}\n\nfunction ProductCard({\n  cardDisplay = 'vertical',\n  product,\n  changePackagingButton,\n  addToCartButton,\n  addToCart,\n  hideCartButton,\n  onChangeQuantity,\n  onRemoveProduct,\n  hideRemoveButton,\n  productQuantityDisabled,\n  loading,\n  linkComponent: Link,\n  className,\n}: IProductCard) {\n  const { productId, productImageUrl, price, itemNumberPerSalesUnit, quantity } = product\n  const [variantsListOpen, setVariantsListOpen] = useState<boolean>(false)\n  const [myProduct, setProduct] = useState({\n    ...product,\n    productImage: getProductPicture(productId, productImageUrl),\n    quantity: quantity ? quantity : '1',\n    totalPrice: convertNumToStr(price * itemNumberPerSalesUnit * (quantity ? parseInt(quantity) : 1)),\n    selectedVariantId: productId,\n  })\n  const didMount = useRef<boolean>(false)\n\n  function handleOnChangeQuantity(productQuantity: number) {\n    setProduct((prevState) => ({\n      ...prevState,\n      quantity: productQuantity.toString(),\n      totalPrice: convertNumToStr(myProduct.price * myProduct.itemNumberPerSalesUnit * productQuantity),\n    }))\n  }\n\n  useEffect(() => {\n    if (!didMount.current) {\n      didMount.current = true\n      return\n    }\n    onChangeQuantity && onChangeQuantity(myProduct)\n  }, [myProduct.quantity])\n\n  function handleVariantsButtonClick() {\n    setVariantsListOpen(true)\n  }\n\n  function handleRemoveProduct(id: string) {\n    onRemoveProduct && onRemoveProduct(id)\n  }\n\n  function handlePackageChange(selectedVariant: any) {\n    const quantity = myProduct.productId === selectedVariant.variantId ? parseInt(myProduct.quantity) : 1\n    setProduct((prevState) => ({\n      ...prevState,\n      productId: selectedVariant.variantId,\n      productImage: getProductPicture(selectedVariant.variantId, selectedVariant.imageUrl ? selectedVariant.imageUrl : fallbackProductImageUrl),\n      country: selectedVariant.country,\n      packaging: selectedVariant.variantName,\n      priceStr: selectedVariant.listPricePerUnitString,\n      price: selectedVariant.price,\n      salesUnit: selectedVariant.salesUnit,\n      itemNumberPerSalesUnit: selectedVariant.itemNumberPerSalesUnit,\n      totalPrice: convertNumToStr(selectedVariant.price * selectedVariant.itemNumberPerSalesUnit * quantity),\n      quantity: quantity.toString(),\n      selectedVariantId: selectedVariant.variantId,\n    }))\n    setVariantsListOpen(false)\n  }\n\n  if (cardDisplay === 'horizontal') {\n    return (\n      <ProductCardHorizontal\n        loading={loading}\n        product={myProduct}\n        onChangeQuantity={handleOnChangeQuantity}\n        productQuantityDisabled={productQuantityDisabled}\n        addToCartButton={addToCartButton}\n        addToCart={addToCart}\n        onClickRemoveProduct={handleRemoveProduct}\n        linkComponent={Link}\n        hideRemoveButton={hideRemoveButton}\n        className={className}\n      />\n    )\n  }\n  return (\n    <ProductCardVertical\n      loading={loading}\n      product={myProduct}\n      productImage={myProduct.productImage}\n      onChangeQuantity={handleOnChangeQuantity}\n      productQuantityDisabled={productQuantityDisabled}\n      addToCartButton={addToCartButton}\n      addToCart={addToCart}\n      changePackagingButton={changePackagingButton}\n      onVariantsButtonClick={handleVariantsButtonClick}\n      variantsOpen={variantsListOpen}\n      selectedVariantId={myProduct.selectedVariantId}\n      handlePackageChange={handlePackageChange}\n      linkComponent={Link}\n      className={className}\n    />\n  )\n}\n\nexport { ProductCard }\n"],"names":["ProductCard","cardDisplay","product","changePackagingButton","addToCartButton","addToCart","hideCartButton","onChangeQuantity","onRemoveProduct","hideRemoveButton","productQuantityDisabled","loading","Link","productId","productImageUrl","price","itemNumberPerSalesUnit","quantity","variantsListOpen","setVariantsListOpen","useState","myProduct","setProduct","convertNumToStr","didMount","useRef","handleOnChangeQuantity","productQuantity","prevState","useEffect","handleVariantsButtonClick","handleRemoveProduct","id","handlePackageChange","selectedVariant","quantity2","variantId","country","variantName","listPricePerUnitString","salesUnit","_jsx","ProductCardHorizontal","className","ProductCardVertical","productImage","selectedVariantId"],"mappings":"oaA2BA,SAAAA,EAAA,CAAqB,YAAAC,EAAA,WACL,QAAAC,EACdA,sBAAAA,EACAC,gBAAAA,EACAC,UAAAA,EACAC,eAAAA,GACAC,iBAAAA,EACAC,gBAAAA,EACAC,iBAAAA,EACAC,wBAAAA,EACAC,QAAAA,EACAC,cAAAA,EACeC,UAAAA,CAEH,EAAA,CACZ,KAAA,CAAM,UAAAC,EAAEA,gBAAAA,EAAWC,MAAAA,EAAiBC,uBAAAA,EAAOC,SAAAA,CAAwBC,EAAAA,EACnE,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,WAAA,CAAyC,GAAAlB,EACpCA,aAAAA,EAAAA,EAAAA,CAAAA,EACuD,SAAAe,GAAA,IAC1B,WAAAM,EAAAR,EAAAC,GAAAC,EAAA,SAAAA,CAAA,EAAA,EAAA,EACgE,kBAAAJ,CAC7EA,CAAAA,EAErBW,EAAAC,SAAA,EAAA,EAEA,SAAAC,EAAAC,EAAA,CACEL,EAAAA,IAAAA,CAA2B,GAAAM,EACtBA,SAAAA,EAAAA,SAAAA,EACiC,WAAAL,EAAAF,EAAA,MAAAA,EAAA,uBAAAM,CAAA,CAC4D,EAAA,CAChG,CAGJE,EAAAA,UAAAA,IAAAA,CACE,GAAA,CAAAL,EAAA,QAAA,CACEA,EAAAA,QAAAA,GACA,OAEFjB,GAAAA,EAAAA,CAAAA,CAA8C,EAAA,CAAAc,EAAA,QAAA,CAAA,EAGhD,SAAAS,IAAA,CACEX,EAAAA,EAAAA,CAAwB,CAG1B,SAAAY,GAAAC,EAAA,CACExB,GAAAA,EAAAA,CAAAA,CAAqC,CAGvC,SAAAyB,GAAAC,EAAA,CACE,MAAAC,EAAAd,EAAA,YAAAa,EAAA,UAAA,SAAAb,EAAA,QAAA,EAAA,EACAC,EAAAA,KAAAA,CAA2B,GAAAM,GACtBA,UAAAA,EAAAA,UACwBQ,aAAAA,EAAAA,EAAAA,UAAAA,EAAAA,SAAAA,EAAAA,SAAAA,EAAAA,EAC6G,QAAAF,EAAA,QAC/GG,UAAAA,EAAAA,YACEC,SAAAA,EAAAA,uBACDC,MAAAA,EAAAA,MACHxB,UAAAA,EAAAA,UACIyB,uBAAAA,EAAAA,uBACaxB,WAAAA,EAAAA,EAAAA,MAAAA,EAAAA,uBAAAA,CAAAA,EAC6D,SAAAmB,EAAA,SAAA,EACxE,kBAAAD,EAAA,SACME,EAAAA,EAErCjB,EAAAA,EAAAA,CAAyB,CAG3B,OAAAlB,IAAA,aACEwC,EAAAC,GAAA,CACwB,QAAA/B,EACpBA,QAAAA,EACSU,iBAAAA,EACSK,wBAAAA,EAClBhB,gBAAAA,EACAN,UAAAA,EACAC,qBAAAA,GACsB0B,cAAAA,EACPnB,iBAAAA,EACfH,UAAAA,CACAkC,CAAAA,EAINF,EAAAG,GAAA,CACsB,QAAAjC,EAClBA,QAAAA,EACSU,aAAAA,EAAAA,aACewB,iBAAAA,EACNnB,wBAAAA,EAClBhB,gBAAAA,EACAN,UAAAA,EACAC,sBAAAA,EACAF,sBAAAA,GACuB2B,aAAAA,EACTZ,kBAAAA,EAAAA,kBACe4B,oBAAAA,GAC7Bb,cAAAA,EACerB,UAAAA,CACf+B,CAAAA,CAGN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}