{"version":3,"file":"admin-search.stories-64aa808f.js","sources":["../../src/design-system/components/atoms/admin-search/admin-search.tsx"],"sourcesContent":["import React, { useCallback, useRef } from 'react'\nimport styles from './admin-search.module.css'\nimport { useCloseOnEscape, useOnClickOutside } from '../../../hooks'\nimport { Icon } from '../icon/icon'\nimport { InputText } from '../inputs/input-text/input-text'\nimport cx from 'classnames'\nimport { Loader } from '../loader/loader'\n\nexport interface IResult {\n  name: string\n  companyName: string\n  email: string\n}\n\nexport interface IAdminSearch {\n  id: string\n  isOpen: boolean\n  isLoading?: boolean\n  setIsOpen: (isOpen: boolean) => void\n  query: string\n  setQuery: (query: string) => void\n  results: Array<IResult>\n  onClickSearchResult: CallableFunction\n  disabled?: boolean\n  noResultText: React.ReactNode | string\n  placeholder?: string\n  className?: string\n}\n\nfunction AdminSearch({ className, id, isLoading=false, isOpen, setIsOpen, query, setQuery, results, onClickSearchResult, disabled, noResultText, placeholder }: IAdminSearch) {\n  const searchWrapperElement = useRef<HTMLDivElement | null>(null)\n  const inputField = useRef<HTMLInputElement | null>(null)\n\n  const onClose = useCallback(() => {\n    setIsOpen(false)\n    return inputField?.current && inputField.current.blur()\n  }, [setIsOpen])\n\n  const onInputChange = useCallback(\n    (e: React.FocusEvent<HTMLInputElement>) => {\n      if (!isOpen) {\n        setIsOpen(true)\n      }\n      setQuery(e.target.value)\n    },\n    [isOpen, setIsOpen, setQuery]\n  )\n\n  function onClear() {\n    setQuery('')\n    return inputField?.current && inputField.current.focus()\n  }\n\n  function handleOnClickSearchResult(item: IResult){\n    onClickSearchResult(item)\n    onClose()\n    onClear()\n  }\n\n  useOnClickOutside({ ref: searchWrapperElement, onClose })\n  useCloseOnEscape({ onClose, isOpen })\n\n  return (\n    <div ref={searchWrapperElement} className={cx(styles.search, className)}>\n      <div className={styles.searchBar}>\n        <div className={styles.searchIconWrapper}>\n          <Icon className={styles.searchIcon} icon={'icon-search'}></Icon>\n        </div>\n        <InputText\n          ref={inputField}\n          type=\"text\"\n          id={id}\n          onChange={onInputChange}\n          value={query}\n          other={{ autoComplete: 'off' }}\n          disabled={disabled}\n          placeholder={placeholder}\n          wrapperClassName={styles.searchInput}\n        />\n        {query && (\n          <button onClick={onClear} tabIndex={-1} type=\"button\" className={styles.clearBtn}>\n            <Icon icon=\"icon-x\" className=\"text-icon\" />\n          </button>\n        )}\n      </div>\n      {isOpen && query && (\n        <div className={styles.searchResultsContainer}>\n          {isLoading ?\n            <Loader visible={true} position='relative' color='orange' size='sm'/> :\n            (\n              <ul aria-labelledby={id}>\n                {results.map((li: IResult, i: number) => (\n                  <li key={`${id}_${i}`} className={styles.resultListItem}>\n                    <button key={`${id}_${i}`} onClick={() => handleOnClickSearchResult(li)} className={styles.resultListItemBtn}>\n                      <span className={styles.serchResultItemText}>{li.name}</span>\n                      <span className={styles.serchResultItemText}>{li.companyName}</span>\n                      <span className={styles.serchResultItemText}>{li.email}</span>\n                    </button>\n                  </li>\n                ))}\n                {results.length === 0 && query.length ? (\n                  <li key={`search_no_result_${id}`} className={styles.noResultListItem}>\n                    <span className={styles.serchResultItemText}>{noResultText}</span>\n                  </li>\n                ) : null}\n              </ul>\n            )\n          }\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport { AdminSearch }\n"],"names":["AdminSearch","className","id","isOpen","setIsOpen","query","setQuery","results","onClickSearchResult","disabled","noResultText","searchWrapperElement","useRef","inputField","onClose","useCallback","onInputChange","e","onClear","handleOnClickSearchResult","item","useOnClickOutside","useCloseOnEscape","_jsxs","styles","searchBar","searchIconWrapper","searchIcon","_jsx","InputText","placeholder","searchInput","clearBtn","searchResultsContainer","resultListItem","li","resultListItemBtn","serchResultItemText","name","companyName","email","i","noResultListItem"],"mappings":"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"}