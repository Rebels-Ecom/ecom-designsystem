import{r as o}from"./index-6f814c40.js";import{U as k}from"./ui-link-1bd4bf5e.js";import{j as _,a as t}from"./jsx-runtime-76c5c2e2.js";import{m as E}from"./motion-354a1bac.js";import{c as I}from"./index-74f03c09.js";import{F as f}from"./flex-container-40f63f0c.js";import{H as K}from"./heading-e5a679a5.js";import{E as D}from"./expandable-wrapper-911222ad.js";import{B as R}from"./button-df2f483d.js";const C="_form_ynv2s_1",P="_formDirectionRow_ynv2s_5",W="_formDirectionColumn_ynv2s_10",A="_formTitle_ynv2s_14",O="_field_ynv2s_18",j="_half_ynv2s_22",S="_full_ynv2s_26",U="_generalErrorMessage_ynv2s_33",d={form:C,formDirectionRow:P,formDirectionColumn:W,formTitle:A,field:O,half:j,full:S,generalErrorMessage:U},$="_inputField_c84eu_1",B="_label_c84eu_5",z="_errorWrapper_c84eu_9",G="_error_c84eu_9",J="_input_c84eu_1",c={inputField:$,label:B,errorWrapper:z,error:G,input:J},h=({onChange:e,onBlur:r,onControlledChange:s,...a})=>{const p=o.useCallback(l=>{l.persist(),e==null||e(l.target.value,a.name),s==null||s(l)},[a.name,e]),i=o.useCallback(l=>{l.persist(),r==null||r(l),s==null||s(l)},[r]);return _("div",{className:c.inputField,children:[a.label&&t("label",{className:c.label,children:a.label}),t("input",{"data-isinvalid":a.dirty&&!a.valid,type:a.type,name:a.name,inputMode:a.type==="number"?"decimal":void 0,placeholder:a.placeholder,className:c.input,step:"any",onChange:p,value:a.value??a.originalValue,min:a.min,max:a.max,disabled:a.disabled,readOnly:a.readonly,autoFocus:a.focusOnRender,onBlur:i}),t("div",{className:c.errorWrapper,children:t(E.label,{className:c.error,initial:{y:"-100%",opacity:0},animate:a.error&&!a.valid&&a.dirty?{y:0,opacity:1}:{y:"-100%",opacity:0},children:a.error})}),t("div",{className:c.linkWrapper,children:t(E.div,{className:c.error,initial:{y:"-100%",opacity:0},animate:a.action?{y:0,opacity:1}:{y:"-100%",opacity:0},children:a.action&&t(k,{...a.action})})})]})};try{h.displayName="InputField",h.__docgenInfo={description:"",displayName:"InputField",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:"HTMLInputTypeAttribute"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | number"}},originalValue:{defaultValue:null,description:"",name:"originalValue",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!1,type:{name:"string"}},min:{defaultValue:null,description:"",name:"min",required:!1,type:{name:"number"}},max:{defaultValue:null,description:"",name:"max",required:!1,type:{name:"number"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},readonly:{defaultValue:null,description:"",name:"readonly",required:!1,type:{name:"boolean"}},focusOnRender:{defaultValue:null,description:"",name:"focusOnRender",required:!1,type:{name:"boolean"}},maxWidth:{defaultValue:null,description:"opt out of errors component, which reserves space in the forms",name:"maxWidth",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"whether the input should start in a touched state",name:"onChange",required:!1,type:{name:"((newVal: string, name: string) => void)"}},onControlledChange:{defaultValue:null,description:"",name:"onControlledChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>) => void)"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((e?: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"FocusEventHandler<HTMLInputElement>"}},onInput:{defaultValue:null,description:"",name:"onInput",required:!1,type:{name:"((event: KeyboardEvent<HTMLInputElement>) => void)"}},onKeyPress:{defaultValue:null,description:"",name:"onKeyPress",required:!1,type:{name:"((event: KeyboardEvent<HTMLInputElement>) => void)"}},onKeyDown:{defaultValue:null,description:"",name:"onKeyDown",required:!1,type:{name:"((event: KeyboardEvent<HTMLInputElement>) => void)"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement, Element>) => void)"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},valid:{defaultValue:null,description:"",name:"valid",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}},dirty:{defaultValue:null,description:"",name:"dirty",required:!1,type:{name:"boolean"}},action:{defaultValue:null,description:"",name:"action",required:!1,type:{name:"IUILink"}}}}}catch{}const F=(e,r)=>{switch(e){case"email":return r&&b(r);case"password":return r&&g(r);default:return!0}},V=e=>e.required?e.pattern?!!F(e.pattern,e.value??e.originalValue)&&!!(e.value??e.originalValue):!!(e.value??e.originalValue):e.pattern?!!F(e.pattern,e.value??e.originalValue):!0,b=e=>e&&/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/.test(e),g=e=>e&&e!=="";try{V.displayName="validateField",V.__docgenInfo={description:"",displayName:"validateField",props:{error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}},type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:"HTMLInputTypeAttribute"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((e?: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>) => void)"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"FocusEventHandler<HTMLInputElement>"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!1,type:{name:"string"}},readonly:{defaultValue:null,description:"",name:"readonly",required:!1,type:{name:"boolean"}},min:{defaultValue:null,description:"",name:"min",required:!1,type:{name:"number"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement, Element>) => void)"}},action:{defaultValue:null,description:"",name:"action",required:!1,type:{name:"IUILink"}},originalValue:{defaultValue:null,description:"prefilled default value used to compare with the state controlled value in order to detect changes to the form",name:"originalValue",required:!1,type:{name:"string"}},max:{defaultValue:null,description:"",name:"max",required:!1,type:{name:"number"}},focusOnRender:{defaultValue:null,description:"",name:"focusOnRender",required:!1,type:{name:"boolean"}},maxWidth:{defaultValue:null,description:"opt out of errors component, which reserves space in the forms",name:"maxWidth",required:!1,type:{name:"string"}},onControlledChange:{defaultValue:null,description:"",name:"onControlledChange",required:!1,type:{name:"(((event: ChangeEvent<HTMLInputElement>) => void) & ((event: ChangeEvent<HTMLInputElement>) => void))"}},onInput:{defaultValue:null,description:"",name:"onInput",required:!1,type:{name:"((event: KeyboardEvent<HTMLInputElement>) => void)"}},onKeyPress:{defaultValue:null,description:"",name:"onKeyPress",required:!1,type:{name:"((event: KeyboardEvent<HTMLInputElement>) => void)"}},onKeyDown:{defaultValue:null,description:"",name:"onKeyDown",required:!1,type:{name:"((event: KeyboardEvent<HTMLInputElement>) => void)"}},valid:{defaultValue:null,description:"",name:"valid",required:!1,type:{name:"boolean"}},dirty:{defaultValue:null,description:"",name:"dirty",required:!1,type:{name:"boolean"}},fieldType:{defaultValue:null,description:"decides what type of form field to render and what value types to use",name:"fieldType",required:!0,type:{name:'"input"'}},value:{defaultValue:null,description:"value is a form template controlled property updated by internal form template state",name:"value",required:!1,type:{name:"string"}},subtitle:{defaultValue:null,description:`Subtitle to be displayed in mobile list view
@example A subtitle can be "No phone number added", while a placeholder should be "Add phone number".`,name:"subtitle",required:!1,type:{name:"string"}},pattern:{defaultValue:null,description:"",name:"pattern",required:!1,type:{name:"enum",value:[{value:'"email"'},{value:'"password"'},{value:'"phone"'}]}},size:{defaultValue:{value:"'half'"},description:"Decides if a field should span 50% or 100% of parent width",name:"size",required:!1,type:{name:"enum",value:[{value:'"half"'},{value:'"full"'}]}}}}}catch{}try{b.displayName="isEmail",b.__docgenInfo={description:"",displayName:"isEmail",props:{}}}catch{}try{g.displayName="isPassword",g.__docgenInfo={description:"",displayName:"isPassword",props:{}}}catch{}const T=({onSubmit:e,onControlledSubmit:r,formTitle:s,formSubtitle:a,loading:p,...i})=>{const[l,w]=o.useState(i.fields),[Q,M]=o.useState(!1),[N,x]=o.useState(!1),q=o.useRef(null);o.useEffect(()=>{if(!q.current)return;const n=!l.some(u=>u.required&&!u.valid);x(n)},[l]);const H=o.useCallback(n=>{n.preventDefault(),e==null||e(l),r==null||r(n),M(!0)},[l,e]),L=o.useCallback((n,u)=>{l.find(m=>m.name===u)&&w(m=>m.map(v=>v.name===u?{...v,dirty:!0,valid:V({...v,value:n}),value:n}:v))},[]);return _("form",{ref:q,className:I(d.form,i.buttonPosition==="row"?d.formDirectionRow:d.formDirectionColumn),onSubmit:H,children:[_(f,{children:[s&&t(K,{order:3,className:d.formTitle,children:s}),a&&t("p",{className:d.formSubtitle,children:a}),t(f,{wrap:!0,children:l==null?void 0:l.map((n,u)=>t("div",{className:I(d.field,d[n.size??"half"]),children:n.fieldType==="input"&&t(h,{...n,value:n.value??n.originalValue,onChange:(y,m)=>{L(y,m)},onControlledChange:y=>{var m;(m=n.onControlledChange)==null||m.call(n,y)},focusOnRender:u===0,readonly:n.blocked,disabled:p})},n.name))}),t(D,{open:!!i.generalErrorMessage,children:t(f,{alignItems:"center",justifyContent:"center",children:i.generalErrorMessage&&t("p",{className:d.generalErrorMessage,dangerouslySetInnerHTML:{__html:i.generalErrorMessage}})})})]}),i.actions&&t(f,{justifyContent:i.alignActions??"center",children:i.actions.map((n,u)=>t(R,{...n,disabled:n.type==="submit"?!N:p,loading:n.type==="submit"&&p},`${n.type}-${u}`))}),i.links&&t(f,{justifyContent:i.alignActions??"center",children:i.links.map((n,u)=>t("a",{className:d.link,href:n.href,target:"_blank",children:n.name},`${n.name}-${u}`))})]})};try{T.displayName="Form",T.__docgenInfo={description:"",displayName:"Form",props:{formTitle:{defaultValue:null,description:"descriptive title to display on top of form",name:"formTitle",required:!0,type:{name:"string"}},formSubtitle:{defaultValue:null,description:"descriptive subtitle to display under formTitle",name:"formSubtitle",required:!1,type:{name:"string"}},onSubmit:{defaultValue:null,description:"submit that requires the complete form data",name:"onSubmit",required:!1,type:{name:"((data: TFormFieldType[]) => void)"}},onControlledSubmit:{defaultValue:null,description:"submit that requires only the react form event",name:"onControlledSubmit",required:!1,type:{name:"((event: FormEvent<HTMLFormElement>) => void)"}},loading:{defaultValue:null,description:"loading state which is necessary in order to disable form while loading",name:"loading",required:!0,type:{name:"boolean"}},fields:{defaultValue:null,description:"all fields to be rendered inside the form",name:"fields",required:!0,type:{name:"TFormFieldType[]"}},actions:{defaultValue:null,description:"",name:"actions",required:!1,type:{name:"IButton[]"}},links:{defaultValue:null,description:"",name:"links",required:!1,type:{name:"{ name: string; href: string; }[]"}},alignActions:{defaultValue:null,description:"",name:"alignActions",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"flex-start"'},{value:'"flex-end"'}]}},buttonPosition:{defaultValue:null,description:"",name:"buttonPosition",required:!1,type:{name:"enum",value:[{value:'"row"'},{value:'"column"'}]}},generalErrorMessage:{defaultValue:null,description:"",name:"generalErrorMessage",required:!1,type:{name:"any"}}}}}catch{}export{T as F,V as v};
//# sourceMappingURL=form-e1c5a1f6.js.map
