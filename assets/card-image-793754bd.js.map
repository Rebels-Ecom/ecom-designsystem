{"version":3,"file":"card-image-793754bd.js","sources":["../../src/design-system/components/molecules/card-image/card-image.tsx"],"sourcesContent":["import styles from './card-image.module.css'\nimport { IPicture } from '../../atoms/picture/picture'\nimport { Picture } from '../../atoms'\nimport { DividerLines } from '../../atoms/divider-lines/divider-lines'\nimport { ITag, Tag } from '../../atoms/tag/tag'\n\nexport interface ICardImage {\n  className?: string\n  image: IPicture\n  heading: string\n  articleId: string\n  country: string\n  packaging: string\n  unitPriceStr: string\n  productTags: Array<ITag>\n}\n\nconst ProductTags = ({tagsList=[]} : {tagsList:Array<ITag>}) => {\n  return(\n    <ul className={styles.tagsList}>\n      {Array.isArray(tagsList) && tagsList.length>0 && tagsList.map((tag, index)=>(\n        <li key={index}>\n          <Tag {...tag} ></Tag>\n        </li>\n        ))\n      }\n    </ul>\n  )\n}\n\nconst CardImage = ({ className, image, productTags, heading, articleId, country, packaging, unitPriceStr }: ICardImage) => {\n  return (\n    <div className={`${styles.cardImageWrapper} ${className ? className : ''}`}>\n      {productTags && <ProductTags tagsList={productTags}/>}\n      <div className={styles.imageWrapper}><Picture {...image} classNamePicture={styles.cardPicture} classNameImg={`${styles.cardImage}`} /> </div>\n      <div className={`${styles.content}`}>\n        <p className={styles.heading}>{heading}</p>\n        <DividerLines/>\n        <p className={styles.textGray}>{`Art.nr. ${articleId} - ${country}`}</p>\n        <p className={styles.textPurple}>{`${packaging}: ${unitPriceStr} kr/st`}</p>\n      </div>\n    </div>\n  )\n}\n\nexport { CardImage }\n"],"names":["ProductTags","tagsList","_jsx","styles","Tag","tag","index","CardImage","className","image","productTags","heading","articleId","country","packaging","_jsxs","imageWrapper","cardPicture","cardImage","content","textGray","textPurple","unitPriceStr"],"mappings":"qjBAiBAA,EAAA,CAAA,CAAqB,SAAAC,EAAA,CAAA,CAAqC,IACxDC,EAAA,KAAA,CACE,UAAAC,EAAA,SAAsBF,SAAAA,MAAAA,QAAAA,CAAAA,GAAAA,EAAAA,OAAAA,GAAAA,EAAAA,IAAAA,CAAAA,EAAAA,IAAAA,EAAAA,KAAAA,CAElB,SAAAC,EAAAE,EAAA,CACM,GAAAC,CAAKA,CAAAA,CAAG,EAAAC,CAAA,CAAA,CAEb,CAAA,EAMTC,EAAA,CAAA,CAAmB,UAAAC,EAAEA,MAAAA,EAAWC,YAAAA,EAAOC,QAAAA,EAAaC,UAAAA,EAASC,QAAAA,EAAWC,UAAAA,EAASC,aAAAA,CAAoC,IACnHC,EAAA,MAAA,CACE,UAAA,GAAAZ,EAAA,oBAAAK,GAAA,KAAsE,SAAA,CAAAE,GAAAR,EAAAF,EAAA,CACxC,SAAAU,CAAWA,CAAAA,EAAAA,EAAAA,MAAAA,CACvC,UAAAP,EAAA,aAAuBa,SAAAA,CAAAA,EAAAA,EAAAA,CAAsB,GAAAP,EAAKA,iBAAAA,EAAAA,YAAgCQ,aAAAA,GAAAA,EAAAA,WAAqCC,CAAAA,EAAAA,GAAAA,CAAgB,CAAA,EAAAH,EAAA,MAAA,CACvI,UAAA,GAAAZ,EAAA,UAA0BgB,SAAAA,CAAAA,EAAAA,IAAAA,CACxB,UAAAhB,EAAA,QAAqBQ,SAAAA,CAAUA,CAAAA,EAAAA,EAAAA,EAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAE/B,UAAAR,EAAA,SAAqBiB,SAAAA,WAAAA,OAAAA,GAAqCP,CAAAA,EAAAA,EAAAA,IAAAA,CAC1D,UAAAV,EAAA,WAAqBkB,SAAAA,GAAAA,MAAAA,SAA8BC,CAAAA,CAAAA,CAAyB,CAAA,CAAA,CACxE,CAAA"}