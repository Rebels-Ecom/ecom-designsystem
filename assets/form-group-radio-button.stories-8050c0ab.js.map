{"version":3,"file":"form-group-radio-button.stories-8050c0ab.js","sources":["../../src/design-system/components/molecules/form-group/stories/form-group-radio-button.stories.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { FormGroup } from '../form-group';\nimport { useState } from 'react';\nimport { RadioButtonGroup } from '../..';\nimport { TypeInputs } from '../../radio-button-group/radio-button-group';\nimport { RadioButtonGroupStory } from '../../radio-button-group/radio-button-group.stories';\nexport default ({\n  title: 'Design System/Molecules/FormGroup/RadioButtonGroup',\n  component: FormGroup\n} as ComponentMeta<typeof FormGroup>);\nconst FormGroupStory: ComponentStory<typeof FormGroup> = (args, context) => {\n  const [radioButtons, setRadioButtons] = useState<Array<TypeInputs>>(RadioButtonGroupStory.args.inputs.map((radioBtn: any) => {\n    return {\n      ...radioBtn,\n      onChange: onChangeRadioGroupOne\n    };\n  }));\n  function onChangeRadioGroupOne(e: React.FormEvent<HTMLInputElement>) {\n    const value = e.currentTarget.value;\n    setRadioButtons((prevRadios: Array<TypeInputs>) => {\n      return prevRadios.map((radio: TypeInputs) => {\n        return {\n          ...radio,\n          checked: radio.value === value ? true : false\n        };\n      });\n    });\n  }\n  const disabled = context.story.includes('Disabled');\n  useEffect(() => {\n    if (disabled) {\n      setRadioButtons((prevRadios: Array<TypeInputs>) => {\n        return prevRadios.map((radio: TypeInputs) => {\n          return {\n            ...radio,\n            disabled: true\n          };\n        });\n      });\n    }\n    if (args.errorText) {\n      setRadioButtons((prevRadios: Array<TypeInputs>) => {\n        return prevRadios.map((radio: TypeInputs) => {\n          return {\n            ...radio,\n            isErroneous: true\n          };\n        });\n      });\n    }\n  }, [disabled, args.errorText]);\n  return <>\n      <div style={{\n      margin: '0 0 2rem 0',\n      maxWidth: '616px'\n    }}>\n        <FormGroup {...args} formElementId={radioButtons[0].id}>\n          {<RadioButtonGroup inputs={radioButtons} />}\n        </FormGroup>\n      </div>\n    </>;\n};\nconst formGroupArgs = {\n  label: 'Välj storlek på popkorn',\n  helperText: 'Välj en storlek som passar dig eller ditt sällskap',\n  requiredText: '(Obligatorisk)'\n};\nexport const FormGroupRadioButtonGroupStory = FormGroupStory.bind({});\nFormGroupRadioButtonGroupStory.storyName = 'Form Group with Radio Button Group';\nFormGroupRadioButtonGroupStory.args = {\n  ...formGroupArgs\n};\nexport const FormGroupRadioButtonGroupStoryError = FormGroupStory.bind({});\nFormGroupRadioButtonGroupStoryError.storyName = 'Form Group with Radio Button Group Error';\nFormGroupRadioButtonGroupStoryError.args = {\n  ...formGroupArgs,\n  errorText: 'Du behöver välja en storlek'\n};\nexport const FormGroupRadioButtonGroupStoryDisabled = FormGroupStory.bind({});\nFormGroupRadioButtonGroupStoryDisabled.storyName = 'Form Group with Radio Button Group Disabled';\nFormGroupRadioButtonGroupStoryDisabled.args = {\n  ...formGroupArgs\n};\nexport const FormGroupRadioButtonGroupStoryRightLabelText = FormGroupStory.bind({});\nFormGroupRadioButtonGroupStoryRightLabelText.storyName = 'Form Group with Radio Button Group Label Right Text';\nFormGroupRadioButtonGroupStoryRightLabelText.args = {\n  ...formGroupArgs,\n  requiredText: '',\n  labelRightText: <a href=\"/\">Se fler menyer</a>\n};\nFormGroupRadioButtonGroupStory.parameters = {\n  ...FormGroupRadioButtonGroupStory.parameters,\n  docs: {\n    ...FormGroupRadioButtonGroupStory.parameters?.docs,\n    source: {\n      originalSource: \"(args, context) => {\\n  const [radioButtons, setRadioButtons] = useState<Array<TypeInputs>>(RadioButtonGroupStory.args.inputs.map((radioBtn: any) => {\\n    return {\\n      ...radioBtn,\\n      onChange: onChangeRadioGroupOne\\n    };\\n  }));\\n  function onChangeRadioGroupOne(e: React.FormEvent<HTMLInputElement>) {\\n    const value = e.currentTarget.value;\\n    setRadioButtons((prevRadios: Array<TypeInputs>) => {\\n      return prevRadios.map((radio: TypeInputs) => {\\n        return {\\n          ...radio,\\n          checked: radio.value === value ? true : false\\n        };\\n      });\\n    });\\n  }\\n  const disabled = context.story.includes('Disabled');\\n  useEffect(() => {\\n    if (disabled) {\\n      setRadioButtons((prevRadios: Array<TypeInputs>) => {\\n        return prevRadios.map((radio: TypeInputs) => {\\n          return {\\n            ...radio,\\n            disabled: true\\n          };\\n        });\\n      });\\n    }\\n    if (args.errorText) {\\n      setRadioButtons((prevRadios: Array<TypeInputs>) => {\\n        return prevRadios.map((radio: TypeInputs) => {\\n          return {\\n            ...radio,\\n            isErroneous: true\\n          };\\n        });\\n      });\\n    }\\n  }, [disabled, args.errorText]);\\n  return <>\\n      <div style={{\\n      margin: '0 0 2rem 0',\\n      maxWidth: '616px'\\n    }}>\\n        <FormGroup {...args} formElementId={radioButtons[0].id}>\\n          {<RadioButtonGroup inputs={radioButtons} />}\\n        </FormGroup>\\n      </div>\\n    </>;\\n}\",\n      ...FormGroupRadioButtonGroupStory.parameters?.docs?.source\n    }\n  }\n};\nFormGroupRadioButtonGroupStoryError.parameters = {\n  ...FormGroupRadioButtonGroupStoryError.parameters,\n  docs: {\n    ...FormGroupRadioButtonGroupStoryError.parameters?.docs,\n    source: {\n      originalSource: \"(args, context) => {\\n  const [radioButtons, setRadioButtons] = useState<Array<TypeInputs>>(RadioButtonGroupStory.args.inputs.map((radioBtn: any) => {\\n    return {\\n      ...radioBtn,\\n      onChange: onChangeRadioGroupOne\\n    };\\n  }));\\n  function onChangeRadioGroupOne(e: React.FormEvent<HTMLInputElement>) {\\n    const value = e.currentTarget.value;\\n    setRadioButtons((prevRadios: Array<TypeInputs>) => {\\n      return prevRadios.map((radio: TypeInputs) => {\\n        return {\\n          ...radio,\\n          checked: radio.value === value ? true : false\\n        };\\n      });\\n    });\\n  }\\n  const disabled = context.story.includes('Disabled');\\n  useEffect(() => {\\n    if (disabled) {\\n      setRadioButtons((prevRadios: Array<TypeInputs>) => {\\n        return prevRadios.map((radio: TypeInputs) => {\\n          return {\\n            ...radio,\\n            disabled: true\\n          };\\n        });\\n      });\\n    }\\n    if (args.errorText) {\\n      setRadioButtons((prevRadios: Array<TypeInputs>) => {\\n        return prevRadios.map((radio: TypeInputs) => {\\n          return {\\n            ...radio,\\n            isErroneous: true\\n          };\\n        });\\n      });\\n    }\\n  }, [disabled, args.errorText]);\\n  return <>\\n      <div style={{\\n      margin: '0 0 2rem 0',\\n      maxWidth: '616px'\\n    }}>\\n        <FormGroup {...args} formElementId={radioButtons[0].id}>\\n          {<RadioButtonGroup inputs={radioButtons} />}\\n        </FormGroup>\\n      </div>\\n    </>;\\n}\",\n      ...FormGroupRadioButtonGroupStoryError.parameters?.docs?.source\n    }\n  }\n};\nFormGroupRadioButtonGroupStoryDisabled.parameters = {\n  ...FormGroupRadioButtonGroupStoryDisabled.parameters,\n  docs: {\n    ...FormGroupRadioButtonGroupStoryDisabled.parameters?.docs,\n    source: {\n      originalSource: \"(args, context) => {\\n  const [radioButtons, setRadioButtons] = useState<Array<TypeInputs>>(RadioButtonGroupStory.args.inputs.map((radioBtn: any) => {\\n    return {\\n      ...radioBtn,\\n      onChange: onChangeRadioGroupOne\\n    };\\n  }));\\n  function onChangeRadioGroupOne(e: React.FormEvent<HTMLInputElement>) {\\n    const value = e.currentTarget.value;\\n    setRadioButtons((prevRadios: Array<TypeInputs>) => {\\n      return prevRadios.map((radio: TypeInputs) => {\\n        return {\\n          ...radio,\\n          checked: radio.value === value ? true : false\\n        };\\n      });\\n    });\\n  }\\n  const disabled = context.story.includes('Disabled');\\n  useEffect(() => {\\n    if (disabled) {\\n      setRadioButtons((prevRadios: Array<TypeInputs>) => {\\n        return prevRadios.map((radio: TypeInputs) => {\\n          return {\\n            ...radio,\\n            disabled: true\\n          };\\n        });\\n      });\\n    }\\n    if (args.errorText) {\\n      setRadioButtons((prevRadios: Array<TypeInputs>) => {\\n        return prevRadios.map((radio: TypeInputs) => {\\n          return {\\n            ...radio,\\n            isErroneous: true\\n          };\\n        });\\n      });\\n    }\\n  }, [disabled, args.errorText]);\\n  return <>\\n      <div style={{\\n      margin: '0 0 2rem 0',\\n      maxWidth: '616px'\\n    }}>\\n        <FormGroup {...args} formElementId={radioButtons[0].id}>\\n          {<RadioButtonGroup inputs={radioButtons} />}\\n        </FormGroup>\\n      </div>\\n    </>;\\n}\",\n      ...FormGroupRadioButtonGroupStoryDisabled.parameters?.docs?.source\n    }\n  }\n};\nFormGroupRadioButtonGroupStoryRightLabelText.parameters = {\n  ...FormGroupRadioButtonGroupStoryRightLabelText.parameters,\n  docs: {\n    ...FormGroupRadioButtonGroupStoryRightLabelText.parameters?.docs,\n    source: {\n      originalSource: \"(args, context) => {\\n  const [radioButtons, setRadioButtons] = useState<Array<TypeInputs>>(RadioButtonGroupStory.args.inputs.map((radioBtn: any) => {\\n    return {\\n      ...radioBtn,\\n      onChange: onChangeRadioGroupOne\\n    };\\n  }));\\n  function onChangeRadioGroupOne(e: React.FormEvent<HTMLInputElement>) {\\n    const value = e.currentTarget.value;\\n    setRadioButtons((prevRadios: Array<TypeInputs>) => {\\n      return prevRadios.map((radio: TypeInputs) => {\\n        return {\\n          ...radio,\\n          checked: radio.value === value ? true : false\\n        };\\n      });\\n    });\\n  }\\n  const disabled = context.story.includes('Disabled');\\n  useEffect(() => {\\n    if (disabled) {\\n      setRadioButtons((prevRadios: Array<TypeInputs>) => {\\n        return prevRadios.map((radio: TypeInputs) => {\\n          return {\\n            ...radio,\\n            disabled: true\\n          };\\n        });\\n      });\\n    }\\n    if (args.errorText) {\\n      setRadioButtons((prevRadios: Array<TypeInputs>) => {\\n        return prevRadios.map((radio: TypeInputs) => {\\n          return {\\n            ...radio,\\n            isErroneous: true\\n          };\\n        });\\n      });\\n    }\\n  }, [disabled, args.errorText]);\\n  return <>\\n      <div style={{\\n      margin: '0 0 2rem 0',\\n      maxWidth: '616px'\\n    }}>\\n        <FormGroup {...args} formElementId={radioButtons[0].id}>\\n          {<RadioButtonGroup inputs={radioButtons} />}\\n        </FormGroup>\\n      </div>\\n    </>;\\n}\",\n      ...FormGroupRadioButtonGroupStoryRightLabelText.parameters?.docs?.source\n    }\n  }\n};"],"names":["formGroupRadioButton_stories","title","component","FormGroup","FormGroupStory","args","context","radioButtons","setRadioButtons","useState","RadioButtonGroupStory","inputs","map","radioBtn","onChange","onChangeRadioGroupOne","e","value","currentTarget","prevRadios","radio","checked","disabled","story","includes","useEffect","errorText","isErroneous","_Fragment","children","style","margin","maxWidth","formElementId","id","RadioButtonGroup","formGroupArgs","label","helperText","requiredText","FormGroupRadioButtonGroupStory","bind","storyName","FormGroupRadioButtonGroupStoryError","FormGroupRadioButtonGroupStoryDisabled","FormGroupRadioButtonGroupStoryRightLabelText","labelRightText","href","parameters","docs","source","originalSource"],"mappings":"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"}