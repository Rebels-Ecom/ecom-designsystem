{"version":3,"file":"search.stories-124a6fa9.js","sources":["../../src/design-system/components/atoms/search/search.tsx","../../src/design-system/components/atoms/search/search.stories.tsx"],"sourcesContent":["import React, { useCallback, useRef } from 'react'\nimport styles from './search.module.css'\nimport { useCloseOnEscape, useOnClickOutside } from '../../../hooks'\nimport { Icon } from '../icon/icon'\nimport { InputText } from '../inputs/input-text/input-text'\nimport { Button } from '../button/button'\nimport cx from 'classnames'\n\nexport interface ISearchNoResult {\n  label: string\n  text: React.ReactNode | string\n}\n\nexport interface IResult {\n  label: string\n  text: string\n  slug: string\n}\n\nexport interface ISearch {\n  id: string\n  isOpen: boolean\n  setIsOpen: (isOpen: boolean) => void\n  setIsFocused: (isFocused: boolean) => void\n  query: string\n  setQuery: (query: string) => void\n  results: Array<IResult>\n  disabled?: boolean\n  noResult: ISearchNoResult\n  placeholder?: string\n  className?: string\n}\n\nfunction Search({ className, id, isOpen, setIsOpen, query, setQuery, setIsFocused, results, disabled, noResult, placeholder }: ISearch) {\n  const searchWrapperElement = useRef<HTMLDivElement | null>(null)\n  const inputField = useRef<HTMLInputElement | null>(null)\n\n  const onClose = useCallback(() => {\n    setIsOpen(false)\n    return inputField?.current && inputField.current.blur()\n  }, [setIsOpen])\n\n  const onFocus = useCallback(() => {\n    setIsOpen(true)\n    setIsFocused(true)\n  }, [setIsOpen, setIsFocused])\n\n  const onBlur = useCallback(() => {\n    setIsFocused(false)\n  }, [setIsFocused])\n\n  const onChange = useCallback(\n    (e: React.FocusEvent<HTMLInputElement>) => {\n      if (!isOpen) {\n        setIsOpen(true)\n      }\n      setQuery(e.target.value)\n    },\n    [isOpen, setIsOpen, setQuery]\n  )\n\n  function onClear() {\n    setQuery('')\n    return inputField?.current && inputField.current.focus()\n  }\n\n  useOnClickOutside({ ref: searchWrapperElement, onClose })\n  useCloseOnEscape({ onClose, isOpen })\n\n  return (\n    <div ref={searchWrapperElement} className={cx(styles.search, className)}>\n        <div className={styles.searchBar}>\n            <Button className={styles.searchButton} type='button' surface='primary' size='small'><Icon icon='icon-search'/></Button>\n            <InputText\n                ref={inputField}\n                type=\"text\"\n                id={id}\n                onChange={onChange}\n                value={query}\n                className={styles.inputField}\n                // onFocus={onFocus}\n                onBlur={onBlur}\n                other={{ autoComplete: 'off' }}\n                disabled={disabled}\n                placeholder={placeholder}\n            />\n            {query && (\n                <button onClick={onClear} tabIndex={-1} type=\"button\" className={styles.clearButton}>\n                    <Icon icon=\"icon-x\" className=\"text-icon\" />\n                </button>\n            )}\n        </div>\n      \n        {isOpen && query &&(\n            <div className={styles.searchResults}>\n                <ul aria-labelledby={id}>\n                    {results.map((li: IResult, i: number) => (\n                        <li key={`${id}_${i}`}>\n                            <a href={li.slug} className={styles.searchResultLink}>\n                                <span className={styles.serchResultItemLabel}>{li.label}</span>\n                                {li.text && <span> - </span>}\n                                <span className={styles.serchResultItemText}>{li.text}</span>\n                            </a>\n                        </li>\n                    ))}\n                    {results.length === 0 && query.length ? (\n                        <li key={`search_no_result_${id}`}>\n                            <div className={styles.serchResultItem}>\n                                <span className={styles.serchResultItemLabel}>{noResult.label}</span>\n                                {noResult.text && <span>-</span>}\n                                <span className={styles.serchResultItemText}>{noResult.text}</span>\n                            </div>\n                        </li>\n                    ) : null}\n                </ul>\n          </div>\n        )}\n    </div>\n  )\n}\n\nexport { Search }\n","import React, { useEffect, useState } from 'react';\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\nimport { Search } from './search';\nexport default ({\n  title: 'Design System/Atoms/Search',\n  component: Search\n} as ComponentMeta<typeof Search>);\nconst Template: ComponentStory<typeof Search> = args => {\n  const [isOpen, setIsOpen] = useState<boolean>(args.isOpen);\n  const [isFocused, setIsFocused] = useState<boolean>(false);\n  const [query, setQuery] = useState<string>(args.query);\n  const [results, setResults] = useState<Array<any>>([]);\n  useEffect(() => {\n    let pattern = new RegExp(query.toLowerCase(), 'i');\n    setResults(itemsToFilterOn.filter(item => query && item.label && pattern.test(item.label.toLowerCase())));\n  }, [query]);\n  return <Search id={args.id} query={query} setQuery={setQuery} results={results} disabled={args.disabled} isOpen={isOpen} setIsOpen={setIsOpen} setIsFocused={setIsFocused} noResult={args.noResult} placeholder={args.placeholder} />;\n};\nconst itemsToFilterOn = [{\n  id: 'NCG626689',\n  label: 'Ekoöl på riktigt',\n  text: 'Testa vår ekoöl',\n  slug: 'eko-ol'\n}, {\n  id: 'NCG691725',\n  label: 'Loka årets vinnare',\n  text: 'Loka årets vinnare i sustainable brand index',\n  slug: 'loka-arets-vinnare'\n}, {\n  id: 'NCG383172',\n  label: 'Spendrups hållbarhetsredovisning',\n  text: 'Läsa om Spendrups hållbarhetsredovisning',\n  slug: 'spendrups-hallbarhetsredovisning'\n}, {\n  id: 'NCG521824',\n  label: 'Briska',\n  text: 'Briska',\n  slug: 'briska'\n}, {\n  id: 'NCG583714',\n  label: 'Spring wine and spirits',\n  text: 'Vårens nya smak',\n  slug: 'spring-wine-spirits'\n}, {\n  id: 'NCG769205',\n  label: 'Det här är vi',\n  text: 'Familjeföretaget med öl i blodet',\n  slug: 'om-oss'\n}, {\n  id: 'NCG880524',\n  label: 'Kiviks musteri',\n  text: 'Prova nya cider',\n  slug: 'kiviks-cider'\n}, {\n  id: 'NCG153793',\n  label: 'Här är nya Loka likes favorites',\n  text: 'loka likes favorites - smakar glass och kokos ',\n  slug: 'loka-favorites'\n}, {\n  id: 'NCG660063',\n  label: 'Övrig läsk och vatten',\n  text: 'Övrig läsk och vatten',\n  slug: 'lask-och-vatten'\n}];\nexport const SearchStory = Template.bind({});\nSearchStory.title = 'Search Story';\nSearchStory.args = {\n  id: 'SearchId',\n  results: [],\n  isOpen: false,\n  disabled: false,\n  query: '',\n  noResult: {\n    label: 'Your search returned no results',\n    text: 'Thank you, come again'\n  },\n  placeholder: 'Placeholder text'\n};\nSearchStory.parameters = {\n  ...SearchStory.parameters,\n  docs: {\n    ...SearchStory.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  const [isOpen, setIsOpen] = useState<boolean>(args.isOpen);\\n  const [isFocused, setIsFocused] = useState<boolean>(false);\\n  const [query, setQuery] = useState<string>(args.query);\\n  const [results, setResults] = useState<Array<any>>([]);\\n  useEffect(() => {\\n    let pattern = new RegExp(query.toLowerCase(), 'i');\\n    setResults(itemsToFilterOn.filter(item => query && item.label && pattern.test(item.label.toLowerCase())));\\n  }, [query]);\\n  return <Search id={args.id} query={query} setQuery={setQuery} results={results} disabled={args.disabled} isOpen={isOpen} setIsOpen={setIsOpen} setIsFocused={setIsFocused} noResult={args.noResult} placeholder={args.placeholder} />;\\n}\",\n      ...SearchStory.parameters?.docs?.source\n    }\n  }\n};"],"names":["Search","className","id","isOpen","setIsOpen","query","setQuery","setIsFocused","results","disabled","noResult","searchWrapperElement","useRef","inputField","onClose","useCallback","onBlur","onChange","e","onClear","useOnClickOutside","useCloseOnEscape","_jsxs","styles","searchBar","searchButton","_jsx","Icon","InputText","placeholder","clearButton","searchResults","li","slug","searchResultLink","serchResultItemLabel","label","serchResultItemText","text","i","serchResultItem","search_stories","title","component","Template","args","useState","isFocused","setResults","useEffect","pattern","RegExp","toLowerCase","itemsToFilterOn","filter","item","test","SearchStory","bind","parameters","docs","source","originalSource"],"mappings":"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"}