{"version":3,"file":"start-page-template.stories-1a58a5c5.js","sources":["../../src/design-system/components/templates/start-page-template/start-page-template.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { BlogCard, IBlogCard } from '../../molecules/blog-card/blog-card'\nimport { ITeaser, Teaser } from '../../molecules/teaser/teaser'\nimport { BlogCardList, IBlogCardList } from '../../organisms/blog-card-list/blog-card-list'\nimport { IHeroCarousel, HeroCarousel } from '../../organisms/hero-carousel/hero-carousel'\nimport { IOfferCardList, OfferCardList } from '../../organisms/offer-card-list/offer-card-list'\nimport { Navigation } from '../../molecules/navigation/navigation'\nimport { FeaturedProductsCarousel, IFeaturedProductsCarousel } from '../../organisms/featured-products-carousel/featured-products-carousel'\nimport { CustomerTeaser, ICustomerTeaser } from '../../organisms/customer-teaser/customer-teaser'\nimport { Above, Below, ContentWrapper, MaxWidth } from '../../layouts'\nimport { CartSidebar, Header } from '../../organisms'\nimport { CartProduct, DrawerSidebar, FormGroup, GroupWrapper, Logotype, SearchNavBarLinks, SearchNavBar, TopNavBar, UserProfileDropdown, Tabs } from '../../molecules'\nimport { IFooter, Footer } from '../../organisms/footer/footer'\nimport { Heading, LinkButton, Button, ToggleSwitch, IconButton, UiDatePicker } from '../../atoms'\nimport { ICartProduct } from '../../molecules/cart-product/cart-product'\nimport { CartProductList } from '../../organisms/cart-product-list/cart-product-list'\nimport { UiDatePickerStory } from '../../atoms/ui-date-picker/ui-date-picker.stories'\nimport { UserProfileDropdownStory } from '../../molecules/user-profile-dropdown/user-profile-dropdown.stories'\nimport { AdminSearch, IResult } from '../../atoms/admin-search/admin-search'\nimport { itemsToFilterOn } from '../../atoms/admin-search/admin-search.stories'\n\nexport interface IStartPageTemplate {\n  header: any\n  hero: IHeroCarousel\n  blogList_Why_Spendrups: IBlogCardList\n  featuredProducts: IFeaturedProductsCarousel\n  offerCardsList: IOfferCardList\n  blogList_Spendrups_Suppliers: IBlogCardList\n  blogFullwidth: IBlogCard\n  customerTeaser: ICustomerTeaser\n  teaserLeft1: ITeaser\n  blogList_Spendrups_Brewing: IBlogCardList\n  teaserRight: ITeaser\n  teaserLeft2: ITeaser\n  blogList_Spendrups_Equipment: IBlogCardList\n  footer: IFooter\n}\n\nconst StartPageTemplate = ({\n  header,\n  hero,\n  blogList_Why_Spendrups,\n  featuredProducts,\n  offerCardsList,\n  blogList_Spendrups_Suppliers,\n  blogFullwidth,\n  customerTeaser,\n  teaserLeft1,\n  blogList_Spendrups_Brewing,\n  teaserRight,\n  teaserLeft2,\n  blogList_Spendrups_Equipment,\n  footer,\n}: IStartPageTemplate) => {\n  const [isOpen, setIsOpen] = React.useState(false)\n  const [activeUser, setActiveUser] = React.useState({} as IResult)\n  const [isAdminSearchbarOpen, setIsAdminSearchbarOpen] = React.useState<boolean>(false)\n  const [query, setQuery] = React.useState<string>('')\n  const [adminSearchResults, setAdminSearchResults] = React.useState<Array<any>>([])\n  const [isCartSidebarOpen, setIsCartSidebarOpen] = React.useState(false)\n  const [isSearchbarOpen, setIsSearchbarOpen] = React.useState(false)\n  const handleOnClick = () => setIsOpen(!isOpen)\n  const onClickCloseCartSidebar = () => setIsCartSidebarOpen(false)\n  const onClickSearchIcon = () => setIsSearchbarOpen(!isSearchbarOpen)\n  const onClickCartIcon = () => setIsCartSidebarOpen(true)\n  const setSelectedDate = (date:Date) => { console.log(`Trigger set delivery day - ${date.toISOString().split('T')[0]}`)}\n  const onClickLogout = () => { console.log('Handle logout...')}\n  const onClickSearchButton = () => {console.log('Handle search button click')}\n  const onClickSearchResultItem = (customer:IResult) => {setActiveUser(customer)}\n\n  useEffect(() => {\n    let pattern = new RegExp(query.toLowerCase(), 'i')\n    setAdminSearchResults(itemsToFilterOn.filter((item) => query && (\n      (item.name && pattern.test(item.name.toLowerCase())) ||\n      (item.companyName && pattern.test(item.companyName.toLowerCase())) ||\n      (item.companyId && pattern.test(item.companyId.toString().toLowerCase())) ||\n      (item.email && pattern.test(item.email.toLowerCase()))\n      )))\n  }, [query]);\n\n  return (\n    <>\n    <Header isOpen={isOpen}>\n      {({ Wrapper, MenuButton, GridArea }) => (\n        <Wrapper isOpen={isOpen}>\n          {header.isAdmin && header.adminSearch && header.adminNavLinks && \n          <>\n            <GridArea area=\"adminSearch\">\n                <AdminSearch\n                  {...header.adminSearch}\n                  query={query}\n                  setQuery={setQuery}\n                  results={adminSearchResults}\n                  onClick={onClickSearchButton}\n                  onClickSearchResult={onClickSearchResultItem}\n                  isOpen={isAdminSearchbarOpen}\n                  setIsOpen={setIsAdminSearchbarOpen}\n                />\n              </GridArea>             \n              <GridArea area=\"adminNavLinks\">\n                <SearchNavBarLinks>\n                  <GroupWrapper position='apart'>\n                    <Below breakpoint=\"lg\">{(matches: any) => matches && <>\n                      { activeUser?.name &&  <IconButton icon={'icon-user'} isLink={false} linkComponent={undefined} onClick={()=>{}} size='large' isTransparent></IconButton>}\n                      <IconButton icon={'icon-settings'} isLink={false} linkComponent={undefined} onClick={()=>{}} size='large' isTransparent></IconButton>\n                    </>}\n                    </Below>\n                    <Above breakpoint=\"lg\">{(matches: any) => matches && <>\n                        { activeUser?.name && <Button type={'button'} surface={'secondary'} children={activeUser.name} iconRight={{icon:'icon-user'}} size={'x-small'} rounded onClick={()=>{}}/>}\n                        <Button type={'button'} surface={'primary'} children={'Mitt adminkonto'} iconRight={{icon:'icon-settings'}} size={'x-small'} onClick={()=>{}}/>\n                    </>}</Above>\n                  </GroupWrapper>\n                </SearchNavBarLinks>\n              </GridArea>\n            </>}\n            <GridArea area=\"top\">\n              <TopNavBar {...header.topNavBar} onClick={onClickLogout} onSelectDate={setSelectedDate} isAdmin={header.isAdmin} hasActiveUser={activeUser?.name && activeUser?.name.length>0}/>\n            </GridArea>\n            <GridArea area=\"logo\">\n              <Logotype {...header.logotype} />\n            </GridArea>  \n            <GridArea area=\"search\">\n              <SearchNavBar {...header.searchNavBar} isOpen={isSearchbarOpen}/>\n            </GridArea>\n            {header.searchNavLinks && <GridArea area=\"searchNavLinks\">\n              <Below breakpoint=\"lg\">{(matches: any) => matches && \n                  <SearchNavBarLinks>\n                    <GroupWrapper position='apart' align='center'>\n                      <IconButton icon={isSearchbarOpen ? 'icon-x' : 'icon-search'} isLink={false} linkComponent={undefined} size='large' isTransparent onClick={onClickSearchIcon ? ()=>onClickSearchIcon() : ()=>{}}></IconButton>\n                      <IconButton icon={'icon-heart'} isLink={false} linkComponent={undefined} size='large' isTransparent></IconButton>\n                      <IconButton icon={'icon-shopping-cart'} isLink={false} linkComponent={undefined} onClick={onClickCartIcon ? ()=>onClickCartIcon() : ()=>{}} size='large' isTransparent></IconButton>\n                    </GroupWrapper>\n                  </SearchNavBarLinks>}\n                </Below>\n                <Above breakpoint=\"lg\">{(matches: any) => matches && \n                  <SearchNavBarLinks>\n                    <GroupWrapper position='apart' align='center'>\n                    <IconButton icon={'icon-heart'} isLink={false} linkComponent={undefined} size='medium' isTransparent></IconButton>\n                    <IconButton icon={'icon-shopping-cart'} isLink={false} linkComponent={undefined} onClick={onClickCartIcon ? ()=>onClickCartIcon() : ()=>{}} size='medium' isTransparent></IconButton>\n                    </GroupWrapper>\n                    <GroupWrapper position='apart'>\n                        <UiDatePicker {...UiDatePickerStory.args} onDateSelected={setSelectedDate}></UiDatePicker>\n                        <UserProfileDropdown  {...UserProfileDropdownStory.args}></UserProfileDropdown>\n                    </GroupWrapper>\n                  </SearchNavBarLinks>}\n                </Above>\n            </GridArea>\n            }\n            <GridArea area=\"btn\">\n              <MenuButton onClick={handleOnClick} />\n            </GridArea>\n            <GridArea area=\"nav\">\n              <Below breakpoint=\"lg\">{(matches: any) => matches &&  <>\n                {header.isLoggedIn \n                  ? \n                  <Tabs {...header.navigationTabs} isOpen={isOpen}></Tabs>\n                :\n                  <Navigation {...header.navigation} isOpen={isOpen} />\n                }\n              </>}</Below>\n              <Above breakpoint=\"lg\">{(matches: any) => matches && <Navigation {...header.navigation} isOpen={isOpen} />}</Above>\n            </GridArea>\n          </Wrapper>\n        )}\n      </Header>\n      <DrawerSidebar onClose={onClickCloseCartSidebar} isOpen={isCartSidebarOpen}>\n          <CartSidebar classNames={['light']}>\n              <GroupWrapper position='apart'>\n                  <Heading order={3}>Kundvagn</Heading>\n                  <Heading order={3}>1378,00 kr</Heading>\n              </GroupWrapper>\n              <GroupWrapper>\n                  <Button type={'button'} surface={'secondary'} children={'Hämta inköpslista'} iconRight={{icon:'icon-layers'}} rounded onClick={()=>{}}/>\n                  <Button type={'button'} surface={'secondary'} children={'Senaste order'} iconRight={{icon:'icon-package'}} rounded onClick={()=>{}}/>\n              </GroupWrapper>\n              <CartProductList>\n                  { header.cartSidebar?.children?.map( (product: ICartProduct) => <CartProduct key={Math.random()} {...product}></CartProduct>) }\n              </CartProductList>\n              <GroupWrapper>\n                  <LinkButton surface={'primary'} isExternal={true} href={'?path=/story/design-system-organisms-cart--cart-story'}>Go to cart</LinkButton>\n              <FormGroup label={'Spara som inköpslista'} formElementId={'toggle-save-shopping-list'}>\n                  <ToggleSwitch id={'toggle-save-shopping-list'} onChangeToggle={()=>{}}></ToggleSwitch>\n              </FormGroup>\n              </GroupWrapper>\n          </CartSidebar>\n      </DrawerSidebar>\n      <ContentWrapper>\n        <HeroCarousel {...hero} />\n        <MaxWidth contentMaxWidth={'wide'}>\n          <BlogCardList {...blogList_Why_Spendrups} />\n        </MaxWidth>\n        <MaxWidth contentMaxWidth={'wide'}>\n          <FeaturedProductsCarousel {...featuredProducts} />\n        </MaxWidth>\n        <MaxWidth contentMaxWidth={'narrow'}>\n          <OfferCardList {...offerCardsList} />\n        </MaxWidth>\n        <MaxWidth contentMaxWidth={'wide'}>\n          <BlogCardList {...blogList_Spendrups_Suppliers} />\n        </MaxWidth>\n        <MaxWidth contentMaxWidth={'wide'}>\n          <BlogCard {...blogFullwidth} />\n        </MaxWidth>\n        <MaxWidth contentMaxWidth={'wide'}>\n          <CustomerTeaser {...customerTeaser} />\n        </MaxWidth>\n        <MaxWidth contentMaxWidth={'narrow'}>\n          <Teaser {...teaserLeft1} />\n        </MaxWidth>\n        <MaxWidth contentMaxWidth={'wide'}>\n          <BlogCardList {...blogList_Spendrups_Brewing} />\n        </MaxWidth>\n        <MaxWidth contentMaxWidth={'narrow'}>\n          <Teaser {...teaserRight} />\n        </MaxWidth>\n        <MaxWidth contentMaxWidth={'narrow'}>\n          <Teaser {...teaserLeft2} />\n        </MaxWidth>\n        <MaxWidth contentMaxWidth={'wide'}>\n          <BlogCardList {...blogList_Spendrups_Equipment} />\n        </MaxWidth>\n        <MaxWidth contentMaxWidth={'wide'}>\n          <FeaturedProductsCarousel {...featuredProducts} />\n        </MaxWidth>\n      </ContentWrapper>\n      <Footer {...footer} />\n    </>\n  )\n}\n\nexport { StartPageTemplate }\n"],"names":["StartPageTemplate","header","hero","blogList_Why_Spendrups","featuredProducts","offerCardsList","blogList_Spendrups_Suppliers","blogFullwidth","customerTeaser","teaserLeft1","blogList_Spendrups_Brewing","teaserRight","teaserLeft2","blogList_Spendrups_Equipment","isOpen","setIsOpen","React","activeUser","setActiveUser","isAdminSearchbarOpen","setIsAdminSearchbarOpen","query","setQuery","adminSearchResults","setAdminSearchResults","isCartSidebarOpen","setIsCartSidebarOpen","isSearchbarOpen","setIsSearchbarOpen","handleOnClick","onClickCloseCartSidebar","onClickSearchIcon","onClickCartIcon","setSelectedDate","date","console","onClickLogout","onClickSearchButton","onClickSearchResultItem","customer","useEffect","pattern","_jsxs","_Fragment","_jsx","Header","Wrapper","MenuButton","GridArea","AdminSearch","adminSearch","SearchNavBarLinks","GroupWrapper","Below","matches","IconButton","undefined","Above","Button","name","TopNavBar","topNavBar","isAdmin","Logotype","logotype","SearchNavBar","searchNavBar","UiDatePicker","UiDatePickerStory","args","UserProfileDropdownStory","Tabs","navigationTabs","navigation","Navigation","DrawerSidebar","Heading","CartProductList","_b","_a","product","CartProduct","LinkButton","FormGroup","ToggleSwitch","ContentWrapper","HeroCarousel","BlogCardList","MaxWidth","FeaturedProductsCarousel","OfferCardList","BlogCard","CustomerTeaser","Teaser","Footer","footer"],"mappings":"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"}