{"version":3,"file":"useOnClickOutside-47d3035a.js","sources":["../../src/design-system/hooks/useOnClickOutside.ts"],"sourcesContent":["import { RefObject, useEffect } from 'react'\r\ninterface IOnClickOutside {\r\n  ref: RefObject<HTMLElement>\r\n  onClose: CallableFunction\r\n  disableClose?: boolean\r\n}\r\nexport default function useOnClickOutside({ ref, onClose, disableClose }: IOnClickOutside) {\r\n  useEffect(() => {\r\n    if (disableClose) return\r\n\r\n    const handleOnClickEvents = (event: MouseEvent | TouchEvent) => {\r\n      if (!ref.current || ref.current.contains(event.target as Node)) {\r\n        return\r\n      }\r\n      onClose(event)\r\n    }\r\n\r\n    document.addEventListener('mousedown', handleOnClickEvents)\r\n    document.addEventListener('touchstart', handleOnClickEvents)\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleOnClickEvents)\r\n      document.removeEventListener('touchstart', handleOnClickEvents)\r\n    }\r\n  }, [ref, onClose])\r\n}"],"names":["useOnClickOutside","ref","onClose","disableClose","useEffect","handleOnClickEvents","event"],"mappings":"wCAMA,SAAwBA,EAAkB,CAAE,IAAAC,EAAK,QAAAC,EAAS,aAAAC,GAAiC,CACzFC,EAAAA,UAAU,IAAM,CACV,GAAAD,EAAc,OAEZ,MAAAE,EAAuBC,GAAmC,CAC1D,CAACL,EAAI,SAAWA,EAAI,QAAQ,SAASK,EAAM,MAAc,GAG7DJ,EAAQI,CAAK,CAAA,EAGN,gBAAA,iBAAiB,YAAaD,CAAmB,EACjD,SAAA,iBAAiB,aAAcA,CAAmB,EACpD,IAAM,CACF,SAAA,oBAAoB,YAAaA,CAAmB,EACpD,SAAA,oBAAoB,aAAcA,CAAmB,CAAA,CAChE,EACC,CAACJ,EAAKC,CAAO,CAAC,CACnB"}