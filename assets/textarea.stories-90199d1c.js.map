{"version":3,"file":"textarea.stories-90199d1c.js","sources":["../../src/design-system/components/atoms/textarea/textarea.tsx","../../src/design-system/components/atoms/textarea/textarea.stories.tsx"],"sourcesContent":["import { forwardRef } from 'react'\r\nimport cx from 'classnames'\r\nimport { getisErroneousStyle } from '../../../../helpers/form-helper'\r\nimport { TOther } from '../../../../types/other'\r\nimport styles from './textarea.module.css'\r\nexport interface ITextarea {\r\n  id: string\r\n  className?: string\r\n  value?: string\r\n  defaultValue?: string\r\n  onChange?: CallableFunction\r\n  placeholder?: string\r\n  rows?: number\r\n  cols?: number\r\n  disabled?: boolean\r\n  isErroneous?: boolean\r\n  required?: boolean\r\n  other?: TOther\r\n}\r\n\r\nconst Textarea = forwardRef<HTMLTextAreaElement, ITextarea>(\r\n  ({ id, className, value, defaultValue, isErroneous, required, onChange, disabled, rows, cols, placeholder, other }, ref) => {\r\n    function handleOnChange(e: React.FormEvent<HTMLTextAreaElement>) {\r\n      if (onChange) {\r\n        onChange(e)\r\n      }\r\n    }\r\n\r\n    return (\r\n      <textarea\r\n        ref={ref}\r\n        className={cx('body', styles.textarea, getisErroneousStyle(styles, isErroneous), className)}\r\n        id={id}\r\n        value={value}\r\n        defaultValue={defaultValue}\r\n        onChange={handleOnChange}\r\n        disabled={disabled}\r\n        required={required}\r\n        rows={rows}\r\n        cols={cols}\r\n        placeholder={placeholder}\r\n        {...other}\r\n      />\r\n    )\r\n  }\r\n)\r\n\r\nexport { Textarea }\r\n","import React, { useState } from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { Textarea } from './textarea';\nexport default ({\n  title: 'Design System/Atoms/Textarea',\n  component: Textarea\n} as ComponentMeta<typeof Textarea>);\nconst Template: ComponentStory<typeof Textarea> = args => {\n  function onChangeTextarea1(e: React.FormEvent<HTMLTextAreaElement>) {\n    setValueTextarea1(e.currentTarget.value);\n  }\n  function onChangeTextarea2(e: React.FormEvent<HTMLTextAreaElement>) {\n    setValueTextarea2(e.currentTarget.value);\n  }\n  function onChangeTextarea3(e: React.FormEvent<HTMLTextAreaElement>) {\n    setValueTextarea3(e.currentTarget.value);\n  }\n  function onChangeTextarea4(e: React.FormEvent<HTMLTextAreaElement>) {\n    setValueTextarea4(e.currentTarget.value);\n  }\n  function onChangeTextarea5(e: React.FormEvent<HTMLTextAreaElement>) {\n    setValueTextarea5(e.currentTarget.value);\n  }\n  const [valueTextarea1, setValueTextarea1] = useState('');\n  const [valueTextarea2, setValueTextarea2] = useState('Some text here');\n  const [valueTextarea3, setValueTextarea3] = useState('Some text here');\n  const [valueTextarea4, setValueTextarea4] = useState('Some text here');\n  const [valueTextarea5, setValueTextarea5] = useState('');\n  const presentationStyle = {\n    margin: '0 0 1rem 0',\n    maxWidth: '616px'\n  };\n  return <>\n      <div style={presentationStyle}>\n        <Textarea {...args} {...{\n        id: 'Textarea_1',\n        value: valueTextarea1\n      }} onChange={onChangeTextarea1} />\n      </div>\n\n      <div style={presentationStyle}>\n        <Textarea {...args} {...{\n        id: 'Textarea_2',\n        value: valueTextarea2\n      }} onChange={onChangeTextarea2} />\n      </div>\n\n      <div style={presentationStyle}>\n        <Textarea {...args} {...{\n        id: 'Textarea_3',\n        value: valueTextarea3\n      }} onChange={onChangeTextarea3} disabled={true} />\n      </div>\n\n      <div style={presentationStyle}>\n        <Textarea {...args} {...{\n        id: 'Textarea_4',\n        value: valueTextarea4\n      }} isErroneous onChange={onChangeTextarea4} />\n      </div>\n\n      <div style={presentationStyle}>\n        <Textarea {...args} {...{\n        id: 'Textarea_5',\n        value: valueTextarea5,\n        placeholder: 'Placeholder text'\n      }} onChange={onChangeTextarea5} />\n      </div>\n    </>;\n};\nexport const TextareaStory = Template.bind({});\nTextareaStory.storyName = 'Textarea';\nTextareaStory.args = {\n  id: 'textarea',\n  cols: 5,\n  rows: 5\n};\nTextareaStory.parameters = {\n  ...TextareaStory.parameters,\n  docs: {\n    ...TextareaStory.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  function onChangeTextarea1(e: React.FormEvent<HTMLTextAreaElement>) {\\n    setValueTextarea1(e.currentTarget.value);\\n  }\\n  function onChangeTextarea2(e: React.FormEvent<HTMLTextAreaElement>) {\\n    setValueTextarea2(e.currentTarget.value);\\n  }\\n  function onChangeTextarea3(e: React.FormEvent<HTMLTextAreaElement>) {\\n    setValueTextarea3(e.currentTarget.value);\\n  }\\n  function onChangeTextarea4(e: React.FormEvent<HTMLTextAreaElement>) {\\n    setValueTextarea4(e.currentTarget.value);\\n  }\\n  function onChangeTextarea5(e: React.FormEvent<HTMLTextAreaElement>) {\\n    setValueTextarea5(e.currentTarget.value);\\n  }\\n  const [valueTextarea1, setValueTextarea1] = useState('');\\n  const [valueTextarea2, setValueTextarea2] = useState('Some text here');\\n  const [valueTextarea3, setValueTextarea3] = useState('Some text here');\\n  const [valueTextarea4, setValueTextarea4] = useState('Some text here');\\n  const [valueTextarea5, setValueTextarea5] = useState('');\\n  const presentationStyle = {\\n    margin: '0 0 1rem 0',\\n    maxWidth: '616px'\\n  };\\n  return <>\\n      <div style={presentationStyle}>\\n        <Textarea {...args} {...{\\n        id: 'Textarea_1',\\n        value: valueTextarea1\\n      }} onChange={onChangeTextarea1} />\\n      </div>\\n\\n      <div style={presentationStyle}>\\n        <Textarea {...args} {...{\\n        id: 'Textarea_2',\\n        value: valueTextarea2\\n      }} onChange={onChangeTextarea2} />\\n      </div>\\n\\n      <div style={presentationStyle}>\\n        <Textarea {...args} {...{\\n        id: 'Textarea_3',\\n        value: valueTextarea3\\n      }} onChange={onChangeTextarea3} disabled={true} />\\n      </div>\\n\\n      <div style={presentationStyle}>\\n        <Textarea {...args} {...{\\n        id: 'Textarea_4',\\n        value: valueTextarea4\\n      }} isErroneous onChange={onChangeTextarea4} />\\n      </div>\\n\\n      <div style={presentationStyle}>\\n        <Textarea {...args} {...{\\n        id: 'Textarea_5',\\n        value: valueTextarea5,\\n        placeholder: 'Placeholder text'\\n      }} onChange={onChangeTextarea5} />\\n      </div>\\n    </>;\\n}\",\n      ...TextareaStory.parameters?.docs?.source\n    }\n  }\n};"],"names":["Textarea","forwardRef","id","className","value","defaultValue","isErroneous","required","onChange","disabled","rows","cols","placeholder","ref","handleOnChange","e","_jsx","other","textarea_stories","title","component","Template","args","onChangeTextarea1","currentTarget","onChangeTextarea2","onChangeTextarea3","onChangeTextarea4","onChangeTextarea5","valueTextarea1","setValueTextarea1","useState","valueTextarea2","setValueTextarea2","valueTextarea3","setValueTextarea3","valueTextarea4","setValueTextarea4","valueTextarea5","setValueTextarea5","presentationStyle","margin","maxWidth","_Fragment","children","style","TextareaStory","bind","storyName","parameters","docs","source","originalSource"],"mappings":"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"}