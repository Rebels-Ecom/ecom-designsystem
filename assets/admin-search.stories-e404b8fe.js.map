{"version":3,"file":"admin-search.stories-e404b8fe.js","sources":["../../src/design-system/components/atoms/admin-search/admin-search.tsx"],"sourcesContent":["import React, { useCallback, useRef } from 'react'\nimport styles from './admin-search.module.css'\nimport { useCloseOnEscape, useOnClickOutside } from '../../../hooks'\nimport { Icon } from '../icon/icon'\nimport { InputText } from '../inputs/input-text/input-text'\nimport cx from 'classnames'\nimport { Loader } from '../loader/loader'\n\nexport interface ISearchNoResult {\n  text: React.ReactNode | string\n}\n\nexport interface IResult {\n  name: string\n  companyName: string\n  companyId: number\n  email: string\n}\n\nexport interface IAdminSearch {\n  id: string\n  isOpen: boolean\n  isLoading?: boolean\n  setIsOpen: (isOpen: boolean) => void\n  query: string\n  setQuery: (query: string) => void\n  results: Array<IResult>\n  onClickSearchResult: CallableFunction\n  disabled?: boolean\n  noResultText: ISearchNoResult\n  placeholder?: string\n  className?: string\n}\n\nfunction AdminSearch({ className, id, isLoading=false, isOpen, setIsOpen, query, setQuery, results, onClickSearchResult, disabled, noResultText, placeholder }: IAdminSearch) {\n  const searchWrapperElement = useRef<HTMLDivElement | null>(null)\n  const inputField = useRef<HTMLInputElement | null>(null)\n\n  const onClose = useCallback(() => {\n    setIsOpen(false)\n    return inputField?.current && inputField.current.blur()\n  }, [setIsOpen])\n\n  const onInputChange = useCallback(\n    (e: React.FocusEvent<HTMLInputElement>) => {\n      if (!isOpen) {\n        setIsOpen(true)\n      }\n      setQuery(e.target.value)\n    },\n    [isOpen, setIsOpen, setQuery]\n  )\n\n  function onClear() {\n    setQuery('')\n    return inputField?.current && inputField.current.focus()\n  }\n\n  function handleOnClickSearchResult(item: IResult){\n    onClickSearchResult(item)\n    onClose()\n    onClear()\n  }\n\n  useOnClickOutside({ ref: searchWrapperElement, onClose })\n  useCloseOnEscape({ onClose, isOpen })\n\n  return (\n    <div ref={searchWrapperElement} className={cx(styles.search, className)}>\n      <div className={styles.searchBar}>\n        <div className={styles.searchIconWrapper}>\n          <Icon className={styles.searchIcon} icon={'icon-search'}></Icon>\n        </div>\n        <InputText\n          ref={inputField}\n          type=\"text\"\n          id={id}\n          onChange={onInputChange}\n          value={query}\n          other={{ autoComplete: 'off' }}\n          disabled={disabled}\n          placeholder={placeholder}\n          wrapperClassName={styles.searchInput}\n        />\n        {query && (\n          <button onClick={onClear} tabIndex={-1} type=\"button\" className={styles.clearBtn}>\n            <Icon icon=\"icon-x\" className=\"text-icon\" />\n          </button>\n        )}\n      </div>\n      {isOpen && query && isLoading &&(\n        <div className={styles.searchResultsLoading}>\n          <Loader visible={true} position='relative' color='orange' size='sm'/>\n        </div>\n      )}\n      {isOpen && query && !isLoading &&(\n        <div className={styles.searchResults}>\n          <ul aria-labelledby={id}>\n            {results.map((li: IResult, i: number) => (\n              <li key={`${id}_${i}`} className={styles.resultListItem}>\n                <button key={`${id}_${i}`} onClick={() => handleOnClickSearchResult(li)} className={styles.resultListItemBtn}>\n                  <span className={styles.serchResultItemText}>{li.name}</span>\n                  <span className={styles.serchResultItemText}>{li.companyName}</span>\n                  <span className={styles.serchResultItemText}>{li.companyId}</span>\n                  <span className={styles.serchResultItemText}>{li.email}</span>\n                </button>\n              </li>\n            ))}\n            {results.length === 0 && query.length ? (\n              <li key={`search_no_result_${id}`} className={styles.noResultListItem}>\n                <div >\n                  <span className={styles.serchResultItemText}>{noResultText.text}</span>\n                </div>\n              </li>\n            ) : null}\n          </ul>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport { AdminSearch }\n"],"names":["AdminSearch","className","id","isOpen","setIsOpen","query","setQuery","results","onClickSearchResult","disabled","noResultText","searchWrapperElement","useRef","inputField","onClose","useCallback","onInputChange","e","onClear","handleOnClickSearchResult","item","useOnClickOutside","useCloseOnEscape","_jsxs","styles","searchBar","searchIconWrapper","searchIcon","_jsx","InputText","placeholder","searchInput","clearBtn","isLoading","searchResultsLoading","searchResults","resultListItem","li","resultListItemBtn","serchResultItemText","name","companyName","companyId","email","i","noResultListItem","text"],"mappings":"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"}