{"version":3,"file":"product-card.stories-4f518906.js","sources":["../../src/design-system/components/molecules/product-card/product-card.tsx","../../src/design-system/components/molecules/product-card/product-card.stories.tsx"],"sourcesContent":["import React, { useState} from 'react'\nimport styles from './product-card.module.css'\nimport { CardImage } from '../card-image/card-image'\nimport { ProductQuantityInput } from '../product-quantity-input/product-quantity-input'\nimport { IButton, Button } from '../../atoms/button/button'\nimport { convertNumToStr } from '../../../../helpers/format-helper'\nimport { ProductVariantList } from '../product-variant-list/product-variant-list'\nimport { IProduct } from '../../../../types/product'\nimport { getProductPicture } from '../../../../helpers/picture-helper'\n\nexport interface IProductCard extends IProduct {\n    product: IProduct\n    changePackagingButton: IButton\n    addToCartButton: IButton\n    addToCart: CallableFunction\n}\n\nconst ProductCard = ({ productId, productName, productImageUrl, country, packaging, priceStr, price, salesUnit, itemNumberPerSalesUnit, tags, productVariantList, changePackagingButton, addToCartButton, addToCart }: IProductCard ) => {\n    const [product, setProduct] = useState(\n        {   productId,\n            productName, \n            productImage: getProductPicture(productId, productImageUrl),\n            country,\n            packaging,\n            priceStr,\n            price,\n            salesUnit,\n            itemNumberPerSalesUnit,\n            quantity: '1',\n            totalPrice: convertNumToStr(price*itemNumberPerSalesUnit),\n            tags,\n            productVariantList,\n            selectedVariantId: productId\n        }\n    )\n    const [variantsListOpen, setVariantsListOpen] = useState<Boolean>(false);\n\n    function handleOnChangeQuantity(e: React.ChangeEvent<HTMLInputElement>) {\n        const quantity = parseInt(e.target.value) || 1;\n        setProduct({\n            ...product, \n            quantity:quantity.toString(),\n            totalPrice: convertNumToStr(product.price * product.itemNumberPerSalesUnit * quantity)})\n    }\n\n    function handleVariantsButtonClick(){\n        setVariantsListOpen(true)\n    }\n\n    function handlePackageChange(selectedVariant:any){\n        const quantity = product.productId===selectedVariant.variantId ? parseInt(product.quantity) : 1;\n        setProduct({\n            ...product, \n            productId: selectedVariant.variantId,\n            productImage: selectedVariant.image,\n            country: selectedVariant.country,\n            packaging: selectedVariant.variantName,\n            priceStr: selectedVariant.listPricePerUnitString,\n            price: selectedVariant.price,\n            salesUnit: selectedVariant.salesUnit,\n            itemNumberPerSalesUnit: selectedVariant.itemNumberPerSalesUnit,\n            totalPrice: convertNumToStr(selectedVariant.price * selectedVariant.itemNumberPerSalesUnit * quantity),\n            quantity: quantity.toString(),\n            selectedVariantId: selectedVariant.variantId\n        });\n\n        setVariantsListOpen(false)\n    }\n\n    if(variantsListOpen) {\n        return(\n            <ProductVariantList className= {styles.productCard} variantsList= {product.productVariantList} onVariantSelect={handlePackageChange} selectedVariantId={product.selectedVariantId}/>\n        )\n    }\n    else {\n        return(\n            <div className= {styles.productCard}>\n                <CardImage \n                    heading={product.productName}\n                    image = {product.productImage}\n                    articleId = {product.productId}\n                    country = {product.country}\n                    packaging = {product.packaging}\n                    unitPriceStr = {product.priceStr}\n                    productTags = {product.tags}\n                />\n                <Button {...changePackagingButton} surface='secondary' iconRight={{icon:'icon-layers'}} rounded onClick={()=>handleVariantsButtonClick()}>Byt förpackning</Button>\n                <ProductQuantityInput\n                    className={styles.productCardInput}\n                    salesUnit = {product.salesUnit}\n                    itemNumberPerSalesUnit = {product.itemNumberPerSalesUnit}\n                    totalPrice = {product.totalPrice}\n                    quantity = {product.quantity}\n                    quantityInputId = {product.productId}\n                    onChange={handleOnChangeQuantity}\n                />\n                <Button {...addToCartButton} className={styles.productCardBtn} fullWidth onClick={()=>addToCart(product)}>Lägg i kundvagn</Button>\n            </div>\n        )\n    }\n}\n\nexport { ProductCard }\n","import React from 'react';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { ProductCard } from './product-card';\nimport { IProduct } from '../../../../types/product';\nimport { dummyBeerProduct } from './dummy-product';\nimport { dummyWineProduct } from './dummy-product';\nimport { getProductPicture } from '../../../../helpers/picture-helper';\nimport { ButtonProductCardStory, ChangePackagingButtonStory } from '../../atoms/button/button.stories';\nconst meta: Meta<typeof ProductCard> = {\n  title: 'Design System/Molecules/Product/ProductCard',\n  component: ProductCard\n};\nexport default meta;\ntype Story = StoryObj<typeof ProductCard>;\nconst ProductCardStoryTemplate: Story = {\n  render: ({\n    ...args\n  }) => {\n    function handleAddToCart(product) {\n      alert(`Adding to cart - ${product.productName} - ${product.packaging}. Quantity: ${product.quantity}, Total: ${product.totalPrice}`);\n    }\n    return <ProductCard {...args} addToCart={handleAddToCart} />;\n  }\n};\nfunction getProductTags(tags: Array<any>) {\n  return tags.map(tag => {\n    return {\n      text: tag.Text,\n      shape: tag.Shape ? tag.Shape : 'pill',\n      color: tag.Class\n    };\n  });\n}\nfunction getVariantsList(productName: string, variantsList: any) {\n  const firstVariantId = variantsList[0].VariantId;\n  return variantsList.map(variant => {\n    return {\n      productName: productName,\n      variantName: variant.Name,\n      variantId: variant.VariantId,\n      country: Array.isArray(variant.ShortTexts) && variant.ShortTexts.length ? variant.ShortTexts[0] : '',\n      listPricePerUnitString: variant.ListPricePerUnitString,\n      price: variant.ListPricePerUnit,\n      salesUnit: variant.SalesUnit,\n      itemNumberPerSalesUnit: variant.UnitsPerBaseUnit,\n      image: getProductPicture(variant.VariantId, variant.PrimaryImageUrl),\n      checked: variant.VariantId === firstVariantId,\n      tags: getProductTags(variant.Tags),\n      onChange: () => {}\n    };\n  });\n}\nfunction getProduct(productData: any): IProduct {\n  const product = productData.Variants[0];\n  return {\n    productId: product.VariantId,\n    productName: productData.DisplayName,\n    productImageUrl: product.PrimaryImageUrl,\n    country: Array.isArray(product.ShortTexts && product.ShortTexts.length) ? product.ShortTexts[0] : '',\n    packaging: product.VariantFullName,\n    priceStr: product.ListPricePerUnitString,\n    price: product.ListPricePerUnit,\n    salesUnit: product.SalesUnit,\n    itemNumberPerSalesUnit: product.UnitsPerBaseUnit,\n    tags: getProductTags(product.Tags),\n    productVariantList: getVariantsList(productData.DisplayName, productData.Variants)\n  };\n}\nconst productArgs = getProduct(dummyWineProduct);\nexport const ProductCardStory = {\n  ...ProductCardStoryTemplate,\n  args: {\n    ...productArgs,\n    changePackagingButton: ChangePackagingButtonStory.args,\n    addToCartButton: ButtonProductCardStory.args\n  }\n};\nProductCardStory.parameters = {\n  ...ProductCardStory.parameters,\n  docs: {\n    ...ProductCardStory.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  ...ProductCardStoryTemplate,\\n  args: {\\n    ...productArgs,\\n    changePackagingButton: ChangePackagingButtonStory.args,\\n    addToCartButton: ButtonProductCardStory.args\\n  }\\n}\",\n      ...ProductCardStory.parameters?.docs?.source\n    }\n  }\n};"],"names":["ProductCard","productId","productName","productImageUrl","country","packaging","priceStr","price","salesUnit","itemNumberPerSalesUnit","tags","productVariantList","changePackagingButton","addToCartButton","product","setProduct","useState","convertNumToStr","variantsListOpen","setVariantsListOpen","handleOnChangeQuantity","e","quantity","handleVariantsButtonClick","handlePackageChange","selectedVariant","variantId","image","variantName","listPricePerUnitString","_jsx","ProductVariantList","styles","productCard","selectedVariantId","_jsxs","productImage","ProductQuantityInput","productCardInput","totalPrice","productCardBtn","addToCart","meta","title","component","ProductCardStoryTemplate","render","args","handleAddToCart","getProductTags","map","tag","text","Text","shape","Shape","color","Class","getVariantsList","variantsList","firstVariantId","VariantId","variant","Name","Array","isArray","ShortTexts","length","ListPricePerUnitString","ListPricePerUnit","SalesUnit","UnitsPerBaseUnit","getProductPicture","PrimaryImageUrl","checked","Tags","onChange","getProduct","productData","Variants","DisplayName","VariantFullName","productArgs","dummyWineProduct","ProductCardStory","ChangePackagingButtonStory","ButtonProductCardStory","parameters","docs","source","originalSource"],"mappings":"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"}