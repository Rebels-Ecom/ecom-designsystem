{"version":3,"file":"top-nav-bar.stories-edd555ff.js","sources":["../../src/design-system/components/molecules/top-nav-bar/top-nav-bar.tsx"],"sourcesContent":["import { TIconNavLink } from '../../../../types/links'\nimport { Icon, TIcon } from '../../atoms/icon/icon'\nimport { IUiDatePicker, UiDatePicker } from '../../atoms/ui-date-picker/ui-date-picker'\nimport { Above } from '../../layouts/breakpoints/above'\nimport { Below } from '../../layouts/breakpoints/below'\nimport styles from './top-nav-bar.module.css'\nimport cx from 'classnames'\n\nexport interface ITopNavBar {\n  links: Array<TIconNavLink>\n  userLoggedIn: boolean\n  isAdmin?: boolean\n  hasActiveUser?: boolean\n  btnIcon?: TIcon\n  btnText?: string\n  datePicker?:IUiDatePicker\n  onSelectDate?: CallableFunction\n  onClick?: React.MouseEventHandler<HTMLButtonElement>\n  linkComponent: any\n}\n\nconst TopNavBar = ({ links, userLoggedIn=false, isAdmin=false, hasActiveUser=false, btnIcon, btnText, onClick, datePicker, onSelectDate, linkComponent: Link }: ITopNavBar) => {\n\n  function renderLink(link:TIconNavLink) {\n    return(\n      <>\n      {link.isExternal\n        ?\n        <a href={link.isTelephoneLink ? `tel:${link.href}` : link.href} className={styles.topNavLink} target={'_blank'}>\n          <Icon className={styles.navIcon} icon={link.icon} />\n          <span className={cx('bodyS', styles.topNavText)}>{link.children}</span>\n        </a>\n        :\n        <Link to={link.href} className={styles.topNavLink} title={link.children}>\n          <Icon icon={link.icon} className={styles.navIcon} />\n          <span className={cx('bodyS', styles.topNavText)}>{link.children}</span>\n        </Link>\n      }\n      </>\n    )\n  }\n\n  if(!Array.isArray(links) || links.length<=0){\n    return null\n  }\n\n  const linksLeft = links.slice(0, Math.ceil(links.length / 2))\n  const linksRight = links.slice(- Math.floor(links.length / 2))\n\n  return(\n    <div className={cx(styles.topNavBar, hasActiveUser ? styles.adminTopNavBar : styles.userTopNavBar)}>\n      {\n        isAdmin \n        ?\n        <ul className={cx(styles.navLinksWrapper, styles.navLinksRight)}>\n            {links.map((link: TIconNavLink, index)=> <li key={`${link.href}-${index}`}>{renderLink(link)}</li>)}\n            <Below breakpoint=\"lg\">{(matches: any) => matches && \n              <>{datePicker && onSelectDate && <UiDatePicker {...datePicker} onDateSelected={onSelectDate} className={styles.btnCalendar}></UiDatePicker>}</>}\n            </Below>\n            {userLoggedIn && btnText && onClick && <button className={cx(styles.topNavLink, styles.btn)} onClick={onClick}> {btnIcon && <Icon icon={btnIcon} className={styles.navIcon}/>}<span className={styles.btnText}>{btnText}</span></button>}\n        </ul>\n        :\n        <>\n          <Above breakpoint=\"lg\">{(matches: any) => matches && \n            <ul className={cx(styles.navLinksWrapper, styles.navLinksLeft)}>\n              {linksLeft.map((link: TIconNavLink, index)=> <li key={`${link.href}-${index}`}>{renderLink(link)}</li>)}\n            </ul>}\n          </Above>\n          <ul className={cx(styles.navLinksWrapper, styles.navLinksRight)}>\n            {linksRight.map((link: TIconNavLink, index)=> <li key={`${link.href}-${index}`}>{renderLink(link)}</li>)}\n            <Below breakpoint=\"lg\">{(matches: any) => matches && \n              <>{datePicker && onSelectDate && <UiDatePicker {...datePicker} onDateSelected={onSelectDate} className={styles.btnCalendar}></UiDatePicker>}</>}\n            </Below>\n            <Above breakpoint=\"lg\">{(matches: any) => matches && \n              <>{userLoggedIn && btnText && onClick && <button className={cx(styles.topNavLink, styles.btn)} onClick={onClick}> {btnIcon && <Icon icon={btnIcon} className={styles.navIcon}/>}<span className={styles.btnText}>{btnText}</span></button>}</>}\n            </Above>\n          </ul>\n        </>\n      }\n    </div>\n  )\n}\n\nexport { TopNavBar }"],"names":["TopNavBar","links","isAdmin","hasActiveUser","btnIcon","btnText","onClick","datePicker","onSelectDate","renderLink","link","_jsx","_Fragment","_jsxs","href","topNavLink","Icon","styles","navIcon","icon","cx","children","Link","linksLeft","linksRight","index","Below","matches","UiDatePicker","btnCalendar","userLoggedIn","Above"],"mappings":"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"}