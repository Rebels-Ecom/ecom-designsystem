{"version":3,"file":"multi-select.stories-3c6fef90.js","sources":["../../src/design-system/components/atoms/multi-select/multi-select.tsx","../../src/design-system/components/atoms/multi-select/multi-select.stories.tsx"],"sourcesContent":["import { useState } from 'react'\nimport styles from './multi-select.module.css'\nimport { Button } from '../button/button'\nimport { IIcon } from '../icon/icon'\n\nexport interface IMultiSelect {\n  id?: string\n  name: string\n  options: Array<ISelectOption>\n  selectedOptions: Array<string>\n  onToggleOption: CallableFunction\n  icon?: IIcon\n}\n\nexport interface ISelectOption {\n  name: string\n  value: string\n}\n\nconst MultiSelect = (\n  ({ name, options, selectedOptions, onToggleOption, icon } : IMultiSelect) => {\n    \n    const[isDropdownOpen, setIsDropdownOpen] = useState(false)\n\n    function handleClickOnDropdown() {\n        setIsDropdownOpen(!isDropdownOpen)\n    }\n\n    function isOptionsPopulated() {\n      return options instanceof Array && options.length\n    }\n\n    function getSelectedOptionName(options: Array<ISelectOption>, selectedOptionValue: string) {\n      const selectedOption = options.find(option => option.value===selectedOptionValue);\n      return selectedOption?.name;\n    }\n\n    return (\n      <div className={styles.wrapper}>\n        {isOptionsPopulated() && (\n          <Button \n            type={'button'} \n            surface={'secondary'} \n            className={styles.multiSelectDropdown} onClick={()=>handleClickOnDropdown()}\n            iconRight={icon}\n            rounded >\n                {(!selectedOptions || selectedOptions.length===0) ? name : (selectedOptions.length===1 ? `${name} (${getSelectedOptionName(options, selectedOptions[0])})` :`${name} (${selectedOptions.length} valda)`)}\n                {isDropdownOpen ? \n                    <ul className={styles.multiSelectDropdownOptions}>\n                        {options.map(option => {\n                            const isSelected = selectedOptions && selectedOptions.some(item=>item===option.value)\n                            return (\n                                    <li key={option.value} className={styles.multiSelectDropdownOption}>\n                                    <input type=\"checkbox\" checked={isSelected} onChange={() => onToggleOption(option)} className={styles.multiSelectDropdownOptionCheckbox}></input>\n                                    <span>{option.name}</span>\n                                </li>\n                            )\n                        })}\n                    </ul> : null}\n            </Button>\n        )}\n      </div>\n    )\n  }\n)\n\nexport { MultiSelect }\n","import React, { useState } from 'react';\nimport { ISelectOption, MultiSelect } from './multi-select';\nimport type { Meta, StoryObj } from '@storybook/react';\nconst meta: Meta<typeof MultiSelect> = {\n  title: 'Design System/Atoms/MultiSelect',\n  component: MultiSelect\n};\nexport default meta;\ntype Story = StoryObj<typeof MultiSelect>;\nconst MultiSelectStoryTemplate: Story = {\n  render: args => {\n    const [selected, setSelected] = useState<string[]>([]);\n    const onToggleOption = (option: ISelectOption) => {\n      setSelected(prevSelected => {\n        const newArray = [...prevSelected];\n        if (newArray.some(item => item === option.value)) {\n          return newArray.filter(item => item != option.value);\n        } else {\n          newArray.push(option.value);\n          return newArray;\n        }\n      });\n    };\n    return <div style={{\n      margin: 'auto',\n      maxWidth: '1800px'\n    }}>\n                <MultiSelect name={args.name} options={args.options} selectedOptions={selected} onToggleOption={onToggleOption} icon={args.icon} />\n            </div>;\n  }\n};\nexport const MultiSelectStoryLand = {\n  ...MultiSelectStoryTemplate,\n  args: {\n    id: '10766',\n    name: 'Land',\n    options: [{\n      name: 'Belgien',\n      value: 'attributefilter*L10766_41516'\n    }, {\n      name: 'England',\n      value: 'attributefilter*L10766_118421'\n    }, {\n      name: 'Irland',\n      value: 'attributefilter*L10766_41532'\n    }, {\n      name: 'Spanien',\n      value: 'attributefilter*L10766_41523'\n    }, {\n      name: 'Sverige',\n      value: 'attributefilter*L10766_41547'\n    }],\n    icon: {\n      icon: 'icon-map-pin'\n    }\n  }\n};\nexport const MultiSelectStoryProducer = {\n  ...MultiSelectStoryTemplate,\n  args: {\n    id: '10770',\n    name: 'Producent',\n    options: [{\n      name: 'Beavertown Brewery',\n      value: 'attributefilter*L10770_110433'\n    }, {\n      name: 'Brutal Brewing',\n      value: 'attributefilter*L10766_118421'\n    }, {\n      name: 'Cervezas Victoria',\n      value: 'attributefilter*L10770_110444'\n    }, {\n      name: 'Starobrno',\n      value: 'attributefilter*L10770_41806'\n    }],\n    icon: {\n      icon: 'icon-award'\n    }\n  }\n};\nexport const MultiSelectStoryPackaging = {\n  ...MultiSelectStoryTemplate,\n  args: {\n    id: '12336',\n    name: 'Förpackning',\n    options: [{\n      name: 'Burk',\n      value: 'attributefilter*L12336_122639'\n    }, {\n      name: 'Engångsglas',\n      value: 'attributefilter*L12336_122646'\n    }, {\n      name: 'FAT',\n      value: 'attributefilter*L12336_122643'\n    }, {\n      name: 'Returglas',\n      value: 'attributefilter*L12336_122649'\n    }],\n    icon: {\n      icon: 'icon-package'\n    }\n  }\n};\nMultiSelectStoryLand.parameters = {\n  ...MultiSelectStoryLand.parameters,\n  docs: {\n    ...MultiSelectStoryLand.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  ...MultiSelectStoryTemplate,\\n  args: {\\n    id: '10766',\\n    name: 'Land',\\n    options: [{\\n      name: 'Belgien',\\n      value: 'attributefilter*L10766_41516'\\n    }, {\\n      name: 'England',\\n      value: 'attributefilter*L10766_118421'\\n    }, {\\n      name: 'Irland',\\n      value: 'attributefilter*L10766_41532'\\n    }, {\\n      name: 'Spanien',\\n      value: 'attributefilter*L10766_41523'\\n    }, {\\n      name: 'Sverige',\\n      value: 'attributefilter*L10766_41547'\\n    }],\\n    icon: {\\n      icon: 'icon-map-pin'\\n    }\\n  }\\n}\",\n      ...MultiSelectStoryLand.parameters?.docs?.source\n    }\n  }\n};\nMultiSelectStoryProducer.parameters = {\n  ...MultiSelectStoryProducer.parameters,\n  docs: {\n    ...MultiSelectStoryProducer.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  ...MultiSelectStoryTemplate,\\n  args: {\\n    id: '10770',\\n    name: 'Producent',\\n    options: [{\\n      name: 'Beavertown Brewery',\\n      value: 'attributefilter*L10770_110433'\\n    }, {\\n      name: 'Brutal Brewing',\\n      value: 'attributefilter*L10766_118421'\\n    }, {\\n      name: 'Cervezas Victoria',\\n      value: 'attributefilter*L10770_110444'\\n    }, {\\n      name: 'Starobrno',\\n      value: 'attributefilter*L10770_41806'\\n    }],\\n    icon: {\\n      icon: 'icon-award'\\n    }\\n  }\\n}\",\n      ...MultiSelectStoryProducer.parameters?.docs?.source\n    }\n  }\n};\nMultiSelectStoryPackaging.parameters = {\n  ...MultiSelectStoryPackaging.parameters,\n  docs: {\n    ...MultiSelectStoryPackaging.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  ...MultiSelectStoryTemplate,\\n  args: {\\n    id: '12336',\\n    name: 'F\\xF6rpackning',\\n    options: [{\\n      name: 'Burk',\\n      value: 'attributefilter*L12336_122639'\\n    }, {\\n      name: 'Eng\\xE5ngsglas',\\n      value: 'attributefilter*L12336_122646'\\n    }, {\\n      name: 'FAT',\\n      value: 'attributefilter*L12336_122643'\\n    }, {\\n      name: 'Returglas',\\n      value: 'attributefilter*L12336_122649'\\n    }],\\n    icon: {\\n      icon: 'icon-package'\\n    }\\n  }\\n}\",\n      ...MultiSelectStoryPackaging.parameters?.docs?.source\n    }\n  }\n};"],"names":["MultiSelect","name","options","selectedOptions","onToggleOption","isDropdownOpen","setIsDropdownOpen","useState","handleClickOnDropdown","isOptionsPopulated","length","getSelectedOptionName","options2","selectedOptionValue","selectedOption","option","_jsx","styles","wrapper","multiSelectDropdown","icon","multiSelectDropdownOptions","isSelected","item","_jsxs","multiSelectDropdownOption","multiSelectDropdownOptionCheckbox","meta","title","component","MultiSelectStoryTemplate","render","args","selected","setSelected","prevSelected","newArray","some","value","filter","push","style","margin","maxWidth","children","MultiSelectStoryLand","id","MultiSelectStoryProducer","MultiSelectStoryPackaging","parameters","docs","source","originalSource"],"mappings":"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"}