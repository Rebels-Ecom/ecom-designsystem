{"version":3,"file":"search.stories-9f2128a4.js","sources":["../../src/design-system/hooks/useCloseOnEscape.ts","../../src/design-system/hooks/useOnClickOutside.ts","../../src/design-system/components/atoms/search/search.tsx"],"sourcesContent":["import { useEffect } from 'react'\r\ninterface ICloseOnEscape {\r\n  onClose: CallableFunction\r\n  isOpen: boolean\r\n  disableClose?: boolean\r\n}\r\nexport default function useCloseOnEscape({ onClose, isOpen, disableClose }: ICloseOnEscape) {\r\n  useEffect(() => {\r\n    if (typeof document === `undefined` || disableClose) return\r\n\r\n    isOpen ? document.addEventListener('keydown', closeOnEscapeKey) : document.removeEventListener('keydown', closeOnEscapeKey)\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', closeOnEscapeKey)\r\n    }\r\n  }, [isOpen])\r\n\r\n  const closeOnEscapeKey = (e: KeyboardEvent) => {\r\n    if (e?.key === 'Escape') {\r\n      onClose()\r\n    }\r\n  }\r\n}","import { RefObject, useEffect } from 'react'\r\ninterface IOnClickOutside {\r\n  ref: RefObject<HTMLElement>\r\n  onClose: CallableFunction\r\n  disableClose?: boolean\r\n}\r\nexport default function useOnClickOutside({ ref, onClose, disableClose }: IOnClickOutside) {\r\n  useEffect(() => {\r\n    if (disableClose) return\r\n\r\n    const handleOnClickEvents = (event: MouseEvent | TouchEvent) => {\r\n      if (!ref.current || ref.current.contains(event.target as Node)) {\r\n        return\r\n      }\r\n      onClose(event)\r\n    }\r\n\r\n    document.addEventListener('mousedown', handleOnClickEvents)\r\n    document.addEventListener('touchstart', handleOnClickEvents)\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleOnClickEvents)\r\n      document.removeEventListener('touchstart', handleOnClickEvents)\r\n    }\r\n  }, [ref, onClose])\r\n}","import React, { useCallback, useRef } from 'react'\nimport styles from './search.module.css'\nimport { useCloseOnEscape, useOnClickOutside } from '../../../hooks'\nimport { Icon } from '../icon/icon'\nimport { InputText } from '../inputs/input-text/input-text'\nimport { Button } from '../button/button'\nimport cx from 'classnames'\n\nexport interface ISearchNoResult {\n  label: string\n  text: React.ReactNode | string\n}\n\nexport interface IResult {\n  label: string\n  text: string\n  slug: string\n}\n\nexport interface ISearch {\n  id: string\n  isOpen: boolean\n  setIsOpen: (isOpen: boolean) => void\n  setIsFocused: (isFocused: boolean) => void\n  query: string\n  setQuery: (query: string) => void\n  results: Array<IResult>\n  disabled?: boolean\n  noResult: ISearchNoResult\n  placeholder?: string\n  className?: string\n}\n\nfunction Search({ className, id, isOpen, setIsOpen, query, setQuery, setIsFocused, results, disabled, noResult, placeholder }: ISearch) {\n  const searchWrapperElement = useRef<HTMLDivElement | null>(null)\n  const inputField = useRef<HTMLInputElement | null>(null)\n\n  const onClose = useCallback(() => {\n    setIsOpen(false)\n    return inputField?.current && inputField.current.blur()\n  }, [setIsOpen])\n\n  const onFocus = useCallback(() => {\n    setIsOpen(true)\n    setIsFocused(true)\n  }, [setIsOpen, setIsFocused])\n\n  const onBlur = useCallback(() => {\n    setIsFocused(false)\n  }, [setIsFocused])\n\n  const onChange = useCallback(\n    (e: React.FocusEvent<HTMLInputElement>) => {\n      if (!isOpen) {\n        setIsOpen(true)\n      }\n      setQuery(e.target.value)\n    },\n    [isOpen, setIsOpen, setQuery]\n  )\n\n  function onClear() {\n    setQuery('')\n    return inputField?.current && inputField.current.focus()\n  }\n\n  useOnClickOutside({ ref: searchWrapperElement, onClose })\n  useCloseOnEscape({ onClose, isOpen })\n\n  return (\n    <div ref={searchWrapperElement} className={cx(styles.search, className)}>\n      <div className={styles.searchBar}>\n        <Button type=\"button\" surface=\"tertiary\" size=\"x-small\">\n          <Icon icon=\"icon-search\" />\n        </Button>\n        <InputText\n          ref={inputField}\n          type=\"text\"\n          id={id}\n          onChange={onChange}\n          value={query}\n          // onFocus={onFocus}\n          onBlur={onBlur}\n          other={{ autoComplete: 'off' }}\n          disabled={disabled}\n          placeholder={placeholder}\n        />\n        {query && (\n          <button onClick={onClear} tabIndex={-1} type=\"button\" className={styles.clearButton}>\n            <Icon icon=\"icon-x\" className=\"text-icon\" />\n          </button>\n        )}\n      </div>\n\n      {isOpen && query && (\n        <div className={styles.searchResults}>\n          <ul aria-labelledby={id}>\n            {results.map((li: IResult, i: number) => (\n              <li key={`${id}_${i}`}>\n                <a href={li.slug} className={styles.searchResultLink}>\n                  <span className={styles.serchResultItemLabel}>{li.label}</span>\n                  {li.text && <span> - </span>}\n                  <span className={styles.serchResultItemText}>{li.text}</span>\n                </a>\n              </li>\n            ))}\n            {results.length === 0 && query.length ? (\n              <li key={`search_no_result_${id}`}>\n                <div className={styles.serchResultItem}>\n                  <span className={styles.serchResultItemLabel}>{noResult.label}</span>\n                  {noResult.text && <span>-</span>}\n                  <span className={styles.serchResultItemText}>{noResult.text}</span>\n                </div>\n              </li>\n            ) : null}\n          </ul>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport { Search }\n"],"names":["useCloseOnEscape","onClose","isOpen","disableClose","useEffect","closeOnEscapeKey","e","useOnClickOutside","ref","handleOnClickEvents","event","Search","className","id","setIsOpen","query","setQuery","setIsFocused","results","disabled","noResult","searchWrapperElement","useRef","inputField","useCallback","onBlur","onChange","onClear","_jsxs","styles","searchBar","_jsx","Icon","InputText","placeholder","clearButton","searchResults","li","slug","searchResultLink","serchResultItemLabel","label","serchResultItemText","text","i","serchResultItem"],"mappings":"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"}