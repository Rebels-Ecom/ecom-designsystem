{"version":3,"file":"icon-button-9d46a25b.js","sources":["../../src/design-system/components/atoms/icon-button/icon-button.tsx"],"sourcesContent":["import styles from './icon-button.module.css'\nimport cx from 'classnames'\nimport { LinkComponent } from '../ui-link/ui-link'\nimport { Icon, TIcon } from '../icon/icon'\n\nexport type TIconButtonSize = 'small' | 'medium' | 'large'\n\nexport interface IIconButton {\n    icon: TIcon\n    linkUrl?: string\n    size?: TIconButtonSize\n    isTransparent?: boolean\n    isLink: boolean\n    linkComponent?: any\n    isExternal?: boolean\n    className?: string\n    children?: React.ReactNode,\n    onClick?: React.MouseEventHandler<HTMLButtonElement>\n}\n\nexport function getIconButtonSize(surface: TIconButtonSize, hasChildren: boolean) {\n    if(hasChildren)\n        return 'buttonRectangular'\n    switch (surface) {\n      case 'medium':\n        return 'buttonMedium'\n      case 'large':\n        return 'buttonLarge'\n      case 'small':\n      default:\n        return 'buttonSmall'\n    }\n  }\n\nconst IconButton = ({\n    icon, \n    linkUrl,\n    size = 'small',\n    isTransparent = false,\n    isLink = false,\n    isExternal=false,\n    linkComponent: Link = LinkComponent,\n    className,\n    children,\n    onClick\n}: IIconButton ) => {\n\n    const Tag = isExternal ? 'a' : Link\n\n    if(!icon)\n        return null\n\n    return (\n        <div>\n            {isLink && linkUrl\n            ?\n                <Tag to={!isExternal ? linkUrl : undefined} href={isExternal ? linkUrl : undefined} className={cx(styles.iconButton, children? styles.hasChildren : '', styles[getIconButtonSize(size, children ? true : false)], isTransparent && styles.buttonTransparent, className ? className : '')}>\n                    <Icon icon={icon}></Icon>\n                    {children && children}\n                </Tag>\n            :\n                <button className={cx(styles.iconButton, children? styles.hasChildren : '', styles[getIconButtonSize(size, children ? true : false)], isTransparent && styles.buttonTransparent, className ? className : '')} onClick={onClick}><Icon icon={icon}></Icon>{children && children}</button>\n            }\n        </div>\n    )\n}\n\nexport { IconButton }\n"],"names":["getIconButtonSize","surface","hasChildren","IconButton","icon","linkUrl","isTransparent","isLink","isExternal","Link","LinkComponent","className","children","Tag","_jsx","_jsxs","undefined","Icon","cx","styles","size","onClick"],"mappings":"keAoBO,SAAAA,EAAAC,EAAAC,EAAA,CACH,GAAAA,EACI,MAAA,oBACJ,OAAAD,EAAA,CAAe,IAAA,SAEX,MAAA,eAAO,IAAA,QAEP,MAAA,cAAO,IAAA,QACJ,QAEH,MAAA,aAAO,CAEb,CAEF,MAAAE,EAAA,CAAA,CAAoB,KAAAC,EAChBA,QAAAA,EACAC,KAAAA,EAAAA,QACO,cAAAC,EAAA,GACS,OAAAC,EAAA,GACP,WAAAC,EAAA,GACE,cAAAC,EAAAC,EACWA,UAAAA,EACtBC,SAAAA,EACAC,QAAAA,CAES,IAAA,CAET,MAAAC,EAAAL,EAAA,IAAAC,EAEA,OAAAL,EAGAU,EAAA,MAAA,CACI,SAAAP,GAAAF,EAAAU,EAAAF,EAAA,CAGY,GAAAL,EAAA,OAAAH,EAA6BW,KAAAA,EAAAA,EAAAA,OAAwCA,UAAAA,EAAAA,EAAAA,WAAAA,EAAAA,EAAAA,YAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,CAAAA,CAAAA,EAAAA,GAAAA,EAAAA,kBAAAA,GAAAA,EAAAA,EAA8M,SAAA,CAAAF,EAAAG,EAAA,CAC9Q,KAAAb,CAACA,CAAAA,EAAAA,GAAAA,CAAAA,CACe,CAAA,EAAAW,EAAA,SAAA,CAGzB,UAAAG,EAAAC,EAAA,WAAAP,EAAAO,EAAA,YAAA,GAAAA,EAAAnB,EAAAoB,EAAA,EAAAR,CAAA,CAAA,EAAAN,GAAAa,EAAA,kBAAAR,GAAA,EAAA,EAA2M,QAAAU,EAAGA,SAAAA,CAAAA,EAAAA,EAAAA,CAAuB,KAAAjB,CAACA,CAAAA,EAAAA,GAAAA,CAAAA,CAAwC,CAAA,CAAS,CAAA,EAX/R,IAeR"}