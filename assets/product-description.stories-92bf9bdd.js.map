{"version":3,"file":"product-description.stories-92bf9bdd.js","sources":["../../src/design-system/components/organisms/product-description/product-description.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport styles from './product-description.module.css'\nimport { Button } from '../../atoms/button/button'\nimport { IProductDetail } from '../product-details/product-details'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport cx from 'classnames'\nimport { IIcon, Icon, TIcon } from '../../atoms/icon/icon'\n\nexport interface IProductDescriptionItem {\n  id: string,\n  btnLabel: string,\n  btnIcon: TIcon,\n  onClick?: CallableFunction,\n  descriptionContent?: IProductDetail\n}\n\nexport interface IProductDescription {\n  productDescriptionItems: Array<IProductDescriptionItem>\n}\n\nconst contentBoxAnimation = {\n  key:'contentAnimation',\n  initial:{y: '-90%', opacity: 0, },\n  animate:{y: 0, opacity: 1, zIndex: 1},\n  transition:{duration: 0.5, ease: 'easeOut'},\n  exit:{y:'-90%', opacity: 0, transition: {duration: 0.5}}\n}\n\nfunction ProductDescription({ productDescriptionItems }: IProductDescription) {\n  const [isOpen, setIsOpen ] = useState<boolean>(false)\n  const [currentTab, setCurrentTab] = useState('');\n\n    const handleTabClick = (e: React.MouseEvent<HTMLButtonElement>, onClick?: CallableFunction) => {\n      if(onClick){\n        setIsOpen(false)\n        setCurrentTab(e.currentTarget.id)\n        onClick()\n      }\n      else if (currentTab===e.currentTarget.id){\n        setIsOpen(false)\n        setCurrentTab('')\n      }\n      else{\n        setIsOpen(true)\n        setCurrentTab(e.currentTarget.id)\n      }\n    }\n\n  return (\n    <div className={styles.productDescription}>\n      <div className={styles.buttonsWrapper}>\n        {productDescriptionItems.map((item, i) =>\n          <Button \n            key={i} \n            id={item.id} \n            className={cx(styles.btn, currentTab === `${item.id}` && styles.active)} \n            iconRight={{icon: item.btnIcon}}\n            onClick={e=>handleTabClick(e, item.onClick && item.onClick)} \n            type={'button'} \n            surface={'secondary'} \n            size={'large'} \n            rounded >\n            {item.btnLabel}\n          </Button>\n        )}\n      </div>\n      <ul className={styles.contentOuterWrapper}>\n        {productDescriptionItems.map((item, i) =>\n          <li key={i}>\n            <AnimatePresence>\n              {item.descriptionContent && isOpen && \n                <motion.div className={styles.contentWrapper}  {...contentBoxAnimation}>\n                  {currentTab === `${item.id}` && <div className={styles.content}>\n                    {item.descriptionContent?.invisibleDescription && <p className={styles.description}> {item.descriptionContent.invisibleDescription}</p>}\n                    {Array.isArray(item.descriptionContent.invisibleSpecs) && item.descriptionContent.invisibleSpecs.length>0 && item.descriptionContent.invisibleSpecs.map((spec, index)=> \n                      <p key={index} className={cx(styles.specsText, 'bodyS')}>\n                         <Icon icon={'icon-arrow-right'}></Icon>\n                          <span className={styles.specTitle}>{spec.name}</span>{` : ${spec.value}`}\n                      </p>\n                    )}      \n                  </div>}\n              </motion.div>\n            }\n            </AnimatePresence>\n          </li>\n        )}\n      </ul>\n    </div>     \n  )\n}\n\nexport {ProductDescription}\n\n"],"names":["contentBoxAnimation","ProductDescription","productDescriptionItems","isOpen","setIsOpen","useState","currentTab","setCurrentTab","handleTabClick","e","onClick","_jsxs","styles","productDescription","buttonsWrapper","item","id","btnIcon","btnLabel","_jsx","contentOuterWrapper","AnimatePresence","motion","contentWrapper","content","description","spec","index","cx","Icon","specTitle","name","i"],"mappings":"8sBAoBAA,EAAA,CAA4B,IAAA,mBACtB,QAAA,CACI,EAAA,OAAI,QAAA,CAAiB,EAAG,QAAA,CACxB,EAAA,EAAI,QAAA,EAAY,OAAA,CAAW,EAAC,WAAA,CACzB,SAAA,GAAW,KAAA,SAAW,EAAS,KAAA,CACrC,EAAA,OAAG,QAAA,EAAiB,WAAA,CAAe,SAAA,EAAW,CAAG,CACxD,EAEA,SAAAC,EAAA,CAA4B,wBAAAC,CAA+C,EAAA,CACzE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,EAAA,EAEEG,EAAA,CAAAC,EAAAC,IAAA,CACEA,GACEN,EAAAA,EAAAA,EACAG,EAAAA,EAAAA,cAAAA,EAAAA,EACAG,KAASJ,IAAAG,EAAA,cAAA,IAGTL,EAAAA,EAAAA,EACAG,EAAAA,EAAAA,IAGAH,EAAAA,EAAAA,EACAG,EAAAA,EAAAA,cAAAA,EAAAA,EACF,EAGJ,OAAAI,EAAA,MAAA,CACE,UAAAC,EAAA,mBAAuBC,SAAAA,CAAAA,EAAAA,MAAAA,CACrB,UAAAD,EAAA,eAAuBE,SAAAA,EAAAA,IAAAA,CAAAA,EAAAA,IAAAA,EAAAA,EAAAA,CAEZ,GAAAC,EAAA,GAEIC,UAAAA,EAAAA,EAAAA,IAAAA,IAAAA,GAAAA,EAAAA,MAAAA,EAAAA,MAAAA,EAC6D,UAAA,CAC3D,KAAAD,EAAA,OAAYE,EAAO,QAAAR,GAAAD,EAAAC,EAAAM,EAAA,SAAAA,EAAA,OAAA,EAC4B,KAAA,SACpD,QAAA,YACG,KAAA,QACH,QAAA,GACC,SAAAA,EAAA,QACDG,EAAAA,CAAAA,CAAAA,CACC,CAAA,EAAAC,EAAA,KAAA,CAGb,UAAAP,EAAA,oBAAsBQ,SAAAA,EAAAA,IAAAA,CAAAA,EAAAA,IAAAA,OAAAA,OAAAA,EAAAA,KAAAA,CAElB,SAAAD,EAAAE,EAAA,CACkB,SAAAN,EAAA,oBAAAZ,GAAAgB,EAAAG,EAAA,IAAA,CAED,UAAAV,EAAA,eAAmBW,GAAAA,EAAqBvB,SAAAA,IAAAA,GAAAA,EAAAA,MAAAA,EAAAA,MAAAA,CACjB,UAAAY,EAAA,QAAuBY,SAAAA,GAAAA,EAAAA,EAAAA,qBAAAA,YAAAA,EAAAA,uBAAAA,EAAAA,IAAAA,CACH,UAAAZ,EAAA,YAAqBa,SAAAA,CAAAA,IAAAA,EAAAA,mBAAAA,oBAAAA,CAA2D,CAAA,EAAA,MAAA,QAAAV,EAAA,mBAAA,cAAA,GAAAA,EAAA,mBAAA,eAAA,OAAA,GAAAA,EAAA,mBAAA,eAAA,IAAA,CAAAW,EAAAC,IAAAhB,EAAA,IAAA,CAEhI,UAAAiB,EAAAhB,EAAA,UAAA,OAAA,EAAsD,SAAA,CAAAO,EAAAU,EAAA,CAC9C,KAAA,kBAAO,CAAA,EAAAV,EAAA,OAAA,CACX,UAAAP,EAAA,UAAwBkB,SAAAA,EAAAA,IAAiBC,CAAAA,EAAAA,MAAAA,EAAAA,OAAAA,CAA+B,EAAAJ,CAAA,CAAA,CAAA,CAE7E,CAAA,CAAA,CAAA,CACG,CAAA,CACG,EAAAK,CAAA,EAAA,CAGZ,CAAA,CAAA,CAEJ,CAAA,CAGX;;;;;"}