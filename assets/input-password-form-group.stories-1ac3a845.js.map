{"version":3,"file":"input-password-form-group.stories-1ac3a845.js","sources":["../../src/design-system/components/molecules/input-password-form-group/input-password-form-group.tsx","../../src/design-system/components/molecules/input-password-form-group/input-password-form-group.stories.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport cx from 'classnames'\r\nimport { FormGroup } from '../form-group/form-group'\r\nimport { IInputText } from '../../atoms/inputs/input-text/input-text'\r\nimport { Checkbox, InputText } from '../../atoms'\r\nimport styles from './input-password-form-group.module.css'\r\n\r\nexport interface IInputPasswordFormGroup {\r\n  label: string\r\n  className?: string\r\n  inputProps: IInputText\r\n  helperText?: string\r\n  errorText?: string\r\n  checkboxLabel: string\r\n  labelRightText?: React.ReactNode\r\n  visiblePassword?: boolean\r\n}\r\n\r\nconst InputPasswordFormGroup = ({\r\n  className,\r\n  label,\r\n  inputProps,\r\n  helperText,\r\n  errorText,\r\n  checkboxLabel,\r\n  labelRightText,\r\n  visiblePassword = false,\r\n}: IInputPasswordFormGroup) => {\r\n  const [showPassword, setShowPassword] = useState<boolean>(visiblePassword)\r\n\r\n  useEffect(() => {\r\n    setShowPassword(visiblePassword)\r\n  }, [visiblePassword])\r\n\r\n  function handleOnChangeCheckbox(e: React.FormEvent<HTMLInputElement>): void {\r\n    setShowPassword(!showPassword)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FormGroup\r\n        formElementId={inputProps.id}\r\n        className={className}\r\n        label={label}\r\n        errorText={errorText}\r\n        helperText={helperText}\r\n        labelRightText={labelRightText}\r\n      >\r\n        <InputText {...inputProps} type={showPassword ? 'text' : 'password'} isErroneous={!!errorText} />\r\n      </FormGroup>\r\n      <div className={styles.checkboxWrapper}>\r\n        <Checkbox\r\n          id={`password-checkbox`}\r\n          name=\"password-checkbox\"\r\n          value=\"password-checkbox\"\r\n          checked={showPassword}\r\n          onChange={handleOnChangeCheckbox}\r\n          disabled={inputProps?.disabled}\r\n          aria-controls={inputProps.id}\r\n          aria-expanded={showPassword}\r\n        />\r\n        <label htmlFor={`password-checkbox`} className={cx('body', styles.defaultStyleLabel, inputProps?.disabled && styles.disabled)}>\r\n          {checkboxLabel}\r\n        </label>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { InputPasswordFormGroup }\r\n","import React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { InputPasswordFormGroup } from './input-password-form-group';\nimport { InputTextStory } from '../../atoms/inputs/input-text/input-text.stories';\nexport default ({\n  title: 'Design System/Molecules/InputPasswordFormGroup',\n  component: InputPasswordFormGroup\n} as ComponentMeta<typeof InputPasswordFormGroup>);\nconst Template: ComponentStory<typeof InputPasswordFormGroup> = args => {\n  return <>\n      <div style={{\n      margin: '0 0 1rem 0',\n      maxWidth: '616px'\n    }}>\n        <InputPasswordFormGroup {...args} />\n      </div>\n    </>;\n};\nconst formGroupArgs = {\n  label: 'Lösenord',\n  helperText: 'Lösenordet behöver innehålla minst ett tecken, en stor bokstav, en liten bokstav, ett specialtecken och vara minst 8 tecken lång.',\n  requiredText: '*',\n  checkboxLabel: 'Visa lösenord'\n};\nexport const FormGroupInputPasswordStory = Template.bind({});\nFormGroupInputPasswordStory.storyName = 'Form Group with Input Password';\nFormGroupInputPasswordStory.args = {\n  ...formGroupArgs,\n  inputProps: {\n    ...InputTextStory,\n    id: 'input_1'\n  }\n};\nexport const FormGroupInputPasswordStoryError = Template.bind({});\nFormGroupInputPasswordStoryError.storyName = 'Form Group with Input Password Error';\nFormGroupInputPasswordStoryError.args = {\n  ...formGroupArgs,\n  errorText: 'Lösenordet är ej korrekt utfört',\n  inputProps: {\n    ...InputTextStory,\n    id: 'input_1'\n  }\n};\nexport const FormGroupInputPasswordStoryDisabled = Template.bind({});\nFormGroupInputPasswordStoryDisabled.storyName = 'Form Group with Input Password Disabled';\nFormGroupInputPasswordStoryDisabled.args = {\n  ...formGroupArgs,\n  inputProps: {\n    ...InputTextStory,\n    id: 'input_1',\n    disabled: true\n  }\n};\nexport const FormGroupInputPasswordStoryRightLabelText = Template.bind({});\nFormGroupInputPasswordStoryRightLabelText.storyName = 'Form Group Password with Label Right Text';\nFormGroupInputPasswordStoryRightLabelText.args = {\n  ...formGroupArgs,\n  requiredText: '',\n  inputProps: {\n    ...InputTextStory,\n    id: 'input_1'\n  },\n  labelRightText: <a href=\"/\">Glömt lösenord</a>\n};\nFormGroupInputPasswordStory.parameters = {\n  ...FormGroupInputPasswordStory.parameters,\n  docs: {\n    ...FormGroupInputPasswordStory.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  return <>\\n      <div style={{\\n      margin: '0 0 1rem 0',\\n      maxWidth: '616px'\\n    }}>\\n        <InputPasswordFormGroup {...args} />\\n      </div>\\n    </>;\\n}\",\n      ...FormGroupInputPasswordStory.parameters?.docs?.source\n    }\n  }\n};\nFormGroupInputPasswordStoryError.parameters = {\n  ...FormGroupInputPasswordStoryError.parameters,\n  docs: {\n    ...FormGroupInputPasswordStoryError.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  return <>\\n      <div style={{\\n      margin: '0 0 1rem 0',\\n      maxWidth: '616px'\\n    }}>\\n        <InputPasswordFormGroup {...args} />\\n      </div>\\n    </>;\\n}\",\n      ...FormGroupInputPasswordStoryError.parameters?.docs?.source\n    }\n  }\n};\nFormGroupInputPasswordStoryDisabled.parameters = {\n  ...FormGroupInputPasswordStoryDisabled.parameters,\n  docs: {\n    ...FormGroupInputPasswordStoryDisabled.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  return <>\\n      <div style={{\\n      margin: '0 0 1rem 0',\\n      maxWidth: '616px'\\n    }}>\\n        <InputPasswordFormGroup {...args} />\\n      </div>\\n    </>;\\n}\",\n      ...FormGroupInputPasswordStoryDisabled.parameters?.docs?.source\n    }\n  }\n};\nFormGroupInputPasswordStoryRightLabelText.parameters = {\n  ...FormGroupInputPasswordStoryRightLabelText.parameters,\n  docs: {\n    ...FormGroupInputPasswordStoryRightLabelText.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  return <>\\n      <div style={{\\n      margin: '0 0 1rem 0',\\n      maxWidth: '616px'\\n    }}>\\n        <InputPasswordFormGroup {...args} />\\n      </div>\\n    </>;\\n}\",\n      ...FormGroupInputPasswordStoryRightLabelText.parameters?.docs?.source\n    }\n  }\n};"],"names":["InputPasswordFormGroup","className","label","inputProps","helperText","errorText","checkboxLabel","labelRightText","showPassword","setShowPassword","useState","visiblePassword","useEffect","handleOnChangeCheckbox","e","_jsxs","_Fragment","_jsx","FormGroup","id","styles","checkboxWrapper","disabled","cx","inputPasswordFormGroup_stories","title","component","Template","args","children","style","margin","maxWidth","formGroupArgs","requiredText","FormGroupInputPasswordStory","bind","storyName","InputTextStory","FormGroupInputPasswordStoryError","FormGroupInputPasswordStoryDisabled","FormGroupInputPasswordStoryRightLabelText","href","parameters","docs","source","originalSource"],"mappings":"upBAkBAA,EAAA,CAAA,CAAgC,UAAAC,EAC9BA,MAAAA,EACAC,WAAAA,EACAC,WAAAA,EACAC,UAAAA,EACAC,cAAAA,EACAC,eAAAA,EACAC,gBAAAA,EAAAA,EAEuB,IAAA,CACvB,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAC,CAAA,EAEAC,EAAAA,UAAAA,IAAAA,CACEH,EAAAA,CAAAA,CAA+B,EAAA,CAAAE,CAAA,CAAA,EAGjC,SAAAE,EAAAC,EAAA,CACEL,EAAAA,CAAAA,CAAAA,CAA6B,CAG/B,OAAAM,EAAAC,EAAA,CACE,SAAA,CAAAC,EAAAC,EAAA,CACY,cAAAf,EAAA,GACkBgB,UAAAA,EAC1BlB,MAAAA,EACAC,UAAAA,EACAG,WAAAA,EACAD,eAAAA,EACAG,SAAAA,EAAAA,EAAAA,CAEU,GAAAJ,EAAKA,KAAAA,EAAAA,OAAAA,WAA0C,YAAA,CAAA,CAAAE,CAA2BA,CAAAA,CAAU,CAAA,EAAAU,EAAA,MAAA,CAEhG,UAAAK,EAAA,gBAAuBC,SAAAA,CAAAA,EAAAA,EAAAA,CACZ,GAAA,oBACF,KAAA,oBACA,MAAA,oBACC,QAAAb,EACGA,SAAAA,EACCK,SAAAA,GAAAA,YAAAA,EAAAA,SACYS,gBAAAA,EAAAA,GACIH,gBAAAA,CACXX,CAAAA,EAAAA,EAAAA,QAAAA,CAEjB,QAAA,oBAAiB,UAAAe,EAAA,OAAAH,EAAA,mBAAAjB,GAAA,YAAAA,EAAA,WAAAiB,EAAA,QAAA,EAA2G,SAAAd,CACzHA,CAAAA,CAAAA,CACK,CAAA,CAAA,CACJ,CAAA,CAGZ,s6BC/DA,MAAgBkB,GAAA,CACdC,MAAO,iDACPC,UAAW1B,CACb,EACM2B,EAAkEC,KAC/DZ,EAAA,CAAAa,WACH,MAAA,CAAKC,MAAO,CACZC,OAAQ,aACRC,SAAU,OACZ,EAAEH,WACG7B,EAAsB,CAAA,GAAK4B,CAAAA,CAAI,CAAA,CAAI,CAAA,CAErC,EAEDK,EAAgB,CACpB/B,MAAO,WACPE,WAAY,oIACZ8B,aAAc,IACd5B,cAAe,eACjB,EACa6B,EAA8BR,EAASS,KAAK,EAAE,EAC3DD,EAA4BE,UAAY,iCACxCF,EAA4BP,KAAO,CACjC,GAAGK,EACH9B,WAAY,CACV,GAAGmC,EACHnB,GAAI,SACN,CACF,EACO,MAAMoB,EAAmCZ,EAASS,KAAK,EAAE,EAChEG,EAAiCF,UAAY,uCAC7CE,EAAiCX,KAAO,CACtC,GAAGK,EACH5B,UAAW,kCACXF,WAAY,CACV,GAAGmC,EACHnB,GAAI,SACN,CACF,EACO,MAAMqB,EAAsCb,EAASS,KAAK,EAAE,EACnEI,EAAoCH,UAAY,0CAChDG,EAAoCZ,KAAO,CACzC,GAAGK,EACH9B,WAAY,CACV,GAAGmC,EACHnB,GAAI,UACJG,SAAU,EACZ,CACF,EACO,MAAMmB,EAA4Cd,EAASS,KAAK,EAAE,EACzEK,EAA0CJ,UAAY,4CACtDI,EAA0Cb,KAAO,CAC/C,GAAGK,EACHC,aAAc,GACd/B,WAAY,CACV,GAAGmC,EACHnB,GAAI,SACN,EACAZ,iBAAgB,IAAA,CAAGmC,KAAK,IAAGb,SAAC,gBAAA,CAAc,CAC5C,YACAM,EAA4BQ,WAAa,CACvC,GAAGR,EAA4BQ,WAC/BC,KAAM,CACJ,IAAGT,EAAAA,EAA4BQ,aAA5BR,YAAAA,EAAwCS,KAC3CC,OAAQ,CACNC,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGX,GAAAA,EAAAA,EAA4BQ,aAA5BR,YAAAA,EAAwCS,OAAxCT,YAAAA,EAA8CU,MACnD,CACF,CACF,YACAN,EAAiCI,WAAa,CAC5C,GAAGJ,EAAiCI,WACpCC,KAAM,CACJ,IAAGL,EAAAA,EAAiCI,aAAjCJ,YAAAA,EAA6CK,KAChDC,OAAQ,CACNC,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGP,GAAAA,EAAAA,EAAiCI,aAAjCJ,YAAAA,EAA6CK,OAA7CL,YAAAA,EAAmDM,MACxD,CACF,CACF,YACAL,EAAoCG,WAAa,CAC/C,GAAGH,EAAoCG,WACvCC,KAAM,CACJ,IAAGJ,EAAAA,EAAoCG,aAApCH,YAAAA,EAAgDI,KACnDC,OAAQ,CACNC,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGN,GAAAA,EAAAA,EAAoCG,aAApCH,YAAAA,EAAgDI,OAAhDJ,YAAAA,EAAsDK,MAC3D,CACF,CACF,YACAJ,EAA0CE,WAAa,CACrD,GAAGF,EAA0CE,WAC7CC,KAAM,CACJ,IAAGH,EAAAA,EAA0CE,aAA1CF,YAAAA,EAAsDG,KACzDC,OAAQ,CACNC,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGL,GAAAA,EAAAA,EAA0CE,aAA1CF,YAAAA,EAAsDG,OAAtDH,YAAAA,EAA4DI,MACjE,CACF,CACF"}