{"version":3,"file":"product-page.stories-4ccd0eb1.js","sources":["../../src/design-system/components/templates/product-page/product-page.tsx"],"sourcesContent":["import React from 'react'\nimport { Navigation } from '../../molecules/navigation/navigation'\nimport { ContentWrapper, MaxWidth } from '../../layouts'\nimport { CartSidebar, Header } from '../../organisms'\nimport { CartProduct, DrawerSidebar, FormGroup, GroupWrapper, Logotype, SearchNavBarLinks, SearchNavBar, TopNavBar } from '../../molecules'\nimport { Footer, IFooter } from '../../organisms/footer/footer'\nimport { IProductDetails, ProductDetails } from '../../organisms/product-details/product-details'\nimport { IProductDescription, ProductDescription } from '../../organisms/product-description/product-description'\nimport { Heading, LinkButton, ToggleSwitch, Button } from '../../atoms'\nimport { ICartProduct } from '../../molecules/cart-product/cart-product'\nimport { CartProductList } from '../../organisms/cart-product-list/cart-product-list'\n\nexport interface IProductPage {\n  header: any\n  productDetails: IProductDetails\n  productDescription: IProductDescription\n  addToCart: CallableFunction\n  footer: IFooter\n}\n\nconst ProductPage = ({ header, productDetails, productDescription, addToCart, footer }: IProductPage) => {\n  const [isOpen, setIsOpen] = React.useState(false)\n  const [isCartSidebarOpen, setIsCartSidebarOpen] = React.useState(false)\n  const handleOnClick = () => setIsOpen(!isOpen)\n  const onClickCartIcon = () => setIsCartSidebarOpen(true)\n  const setSelectedDate = (date:Date) => { console.log(`Trigger set delivery day - ${date.toISOString().split('T')[0]}`)}\n  const onClickCloseCartSidebar = () => setIsCartSidebarOpen(false)\n  return (\n    <>\n      <Header isOpen={isOpen}>\n        {({ Wrapper, Button, GridArea }) => (\n          <Wrapper isOpen={isOpen}>\n            <GridArea area=\"top\">\n              <TopNavBar {...header.topNavBar} />\n            </GridArea>\n            <GridArea area=\"logo\">\n              <Logotype {...header.logotype} />\n            </GridArea>\n            <GridArea area=\"search\">\n              <SearchNavBar {...header.searchNavBar} />\n            </GridArea>\n            <GridArea area=\"searchNavLinks\">\n              <SearchNavBarLinks {...header.searchNavLinks} onClickCart={onClickCartIcon} onClickSelectDate={setSelectedDate} />\n            </GridArea>\n            <GridArea area=\"btn\">\n              <Button onClick={handleOnClick} />\n            </GridArea>\n            <GridArea area=\"nav\">\n              <Navigation {...header.navigation} isOpen={isOpen} />\n            </GridArea>\n          </Wrapper>\n        )}\n      </Header>\n      <DrawerSidebar onClose={onClickCloseCartSidebar} isOpen={isCartSidebarOpen}>\n          <CartSidebar classNames={['light']}>\n              <GroupWrapper position='apart'>\n                  <Heading order={3}>Kundvagn</Heading>\n                  <Heading order={3}>1378,00 kr</Heading>\n              </GroupWrapper>\n              <GroupWrapper>\n                  <Button type={'button'} surface={'secondary'} children={'Hämta inköpslista'} iconRight={{icon:'icon-layers'}} rounded onClick={()=>{}}/>\n                  <Button type={'button'} surface={'secondary'} children={'Senaste order'} iconRight={{icon:'icon-package'}} rounded onClick={()=>{}}/>\n              </GroupWrapper>\n              <CartProductList>\n                  { header.cartSidebar?.children?.map( (product: ICartProduct) => <CartProduct key={Math.random()} {...product}></CartProduct>) }\n              </CartProductList>\n              <GroupWrapper>\n                  <LinkButton surface={'primary'} isExternal={true} href={'?path=/story/design-system-organisms-cart--cart-story'}>Go to cart</LinkButton>\n              <FormGroup label={'Spara som inköpslista'} formElementId={'toggle-save-shopping-list'}>\n                  <ToggleSwitch id={'toggle-save-shopping-list'} onChangeToggle={()=>{}}></ToggleSwitch>\n              </FormGroup>\n              </GroupWrapper>\n          </CartSidebar>\n      </DrawerSidebar>\n      <ContentWrapper>\n        <MaxWidth contentMaxWidth={'wide'}>\n          <ProductDetails {...productDetails} addToCart={addToCart} />\n        </MaxWidth>\n        <MaxWidth contentMaxWidth={'wide'}>\n          <ProductDescription {...productDescription} />\n        </MaxWidth>\n      </ContentWrapper>\n      <Footer {...footer} />\n    </>\n  )\n}\n\nexport { ProductPage }\n"],"names":["ProductPage","header","productDetails","productDescription","addToCart","isOpen","setIsOpen","React","isCartSidebarOpen","setIsCartSidebarOpen","handleOnClick","onClickCartIcon","setSelectedDate","date","console","_jsxs","_Fragment","_jsx","Header","Wrapper","Button","GridArea","TopNavBar","topNavBar","Logotype","logotype","SearchNavBar","searchNavBar","SearchNavBarLinks","searchNavLinks","Button2","Navigation","navigation","DrawerSidebar","onClickCloseCartSidebar","GroupWrapper","Heading","CartProductList","_b","_a","product","CartProduct","LinkButton","FormGroup","ToggleSwitch","ContentWrapper","MaxWidth","ProductDetails","ProductDescription","Footer","footer"],"mappings":"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"}