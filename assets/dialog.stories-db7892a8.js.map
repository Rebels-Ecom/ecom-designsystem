{"version":3,"file":"dialog.stories-db7892a8.js","sources":["../../src/design-system/hooks/usePortal.ts","../../src/design-system/hooks/useSetFocusOrder.ts","../../src/design-system/components/molecules/dialog/dialog.tsx","../../src/design-system/components/molecules/dialog/dialog.stories.tsx"],"sourcesContent":["// Inspired by https://www.30secondsofcode.org/react/s/use-portal\r\n\r\nimport { useCallback, useState, useEffect, ReactNode } from 'react'\r\nimport { createPortal, unmountComponentAtNode } from 'react-dom'\r\n\r\ninterface IPortalState {\r\n  render: (children?: any) => any\r\n  remove: () => void\r\n}\r\n\r\nexport const usePortal = (selector: HTMLElement | null) => {\r\n  const [portal, setPortal] = useState<IPortalState>({\r\n    render: () => null,\r\n    remove: () => null,\r\n  })\r\n\r\n  const createPortalWithSelector = useCallback((selector: HTMLElement) => {\r\n    const Portal = ({ children }: { children: ReactNode }) => createPortal(children, selector)\r\n    const remove = () => unmountComponentAtNode(selector)\r\n\r\n    return {\r\n      render: Portal,\r\n      remove,\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selector) {\r\n      portal.remove()\r\n\r\n      const newPortal = createPortalWithSelector(selector) as unknown as IPortalState\r\n      setPortal(newPortal)\r\n\r\n      return () => {\r\n        newPortal.remove()\r\n      }\r\n    }\r\n  }, [selector])\r\n\r\n  return portal.render\r\n}\r\n\r\nexport default usePortal\r\n","import { RefObject, useLayoutEffect, useEffect } from 'react'\r\n\r\nexport default function useSetFocusOrder(popUpRef: RefObject<HTMLElement>, isOpen: boolean, focusableElementInside?: any) {\r\n  const focusable = popUpRef.current?.querySelectorAll('button, [href], input, select, textarea, video, [tabindex]:not([tabindex=\"-1\"])')\r\n  const firstFocusable = (focusable?.length ? focusable[0] : null) as HTMLElement | null\r\n\r\n  useLayoutEffect(() => {\r\n    const body = document.querySelector('body') as HTMLBodyElement\r\n\r\n    if (isOpen) {\r\n      setTimeout(() => {\r\n        body.style.overflow = 'hidden'\r\n        if (focusableElementInside.current) {\r\n          focusableElementInside.current.focus()\r\n        } else {\r\n          firstFocusable?.focus()\r\n        }\r\n      }, 25)\r\n    } else {\r\n      body.style.overflow = 'visible'\r\n    }\r\n  }, [isOpen, focusableElementInside])\r\n\r\n  useEffect(() => {\r\n    isOpen ? document.addEventListener('focusout', setCorrectTabOrder) : document.removeEventListener('focusout', setCorrectTabOrder)\r\n  }, [isOpen])\r\n\r\n  const setCorrectTabOrder = (e: FocusEvent) => {\r\n    const focusable = popUpRef?.current?.querySelectorAll('button, [href], input, select, textarea, video, [tabindex]:not([tabindex=\"-1\"])')\r\n    const firstFocusable = (focusable?.length ? focusable[0] : null) as HTMLElement | null\r\n    const lastFocusable = focusable?.length ? focusable[focusable.length - 1] : null\r\n    if (lastFocusable === e.target && firstFocusable) {\r\n      setTimeout(() => firstFocusable.focus(), 25)\r\n    }\r\n  }\r\n}\r\n","import { useRef } from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport cx from 'classnames'\r\nimport { Icon } from '../../atoms/icon/icon'\r\nimport { useOnClickOutside, useCloseOnEscape, useSetFocusOrder, usePortal } from '../../../hooks'\r\n\r\nimport styles from './dialog.module.css'\r\n\r\nexport type TDialogRole = 'dialog' | 'alert' | 'alertdialog'\r\nexport type TTheme = 'light' | 'dark'\r\nexport type TAnimationVariants = {\r\n  open: any\r\n  closed: any\r\n}\r\n\r\nexport interface IDialog {\r\n  children?: React.ReactNode\r\n  role: TDialogRole\r\n  id?: string\r\n  ariaLabelledBy?: string\r\n  ariaDescribedBy?: string\r\n  hasOverlay?: boolean\r\n  onClose: () => void\r\n  isOpen: boolean\r\n  animationVariants?: TAnimationVariants\r\n  focusableElementInside?: any\r\n  noPadding?: boolean\r\n  hasPortal?: boolean // only present because of storybook and not getting theme correctly\r\n  theme?: TTheme // force light theme dialog on dark pages for example\r\n  className?: string\r\n}\r\n\r\nconst animationDuration = 0.5\r\n\r\n// configure together with Design\r\nconst variants = {\r\n  open: { display: 'block' },\r\n  closed: { display: 'none' },\r\n}\r\n\r\nconst Dialog = ({\r\n  id,\r\n  role,\r\n  children,\r\n  ariaLabelledBy,\r\n  ariaDescribedBy,\r\n  hasOverlay,\r\n  onClose,\r\n  isOpen,\r\n  animationVariants = variants,\r\n  focusableElementInside,\r\n  noPadding,\r\n  hasPortal = true,\r\n  theme,\r\n  className,\r\n}: IDialog) => {\r\n  const dialogElement = useRef<HTMLDivElement | null>(null)\r\n  const contentElement = useRef<HTMLDivElement | null>(null)\r\n\r\n  useOnClickOutside({ref:contentElement, onClose})\r\n  useSetFocusOrder(dialogElement, isOpen, focusableElementInside)\r\n  useCloseOnEscape({onClose, isOpen})\r\n\r\n  const Portal = usePortal(document.querySelector('body'))\r\n\r\n  const renderDialog = () => (\r\n    <AnimatePresence initial={false}>\r\n      {isOpen && (\r\n        <div\r\n          className={cx(styles.dialog, className)}\r\n          id={id ? id : undefined}\r\n          role={role}\r\n          aria-labelledby={ariaLabelledBy}\r\n          aria-describedby={ariaDescribedBy}\r\n          aria-modal=\"true\"\r\n          ref={dialogElement}\r\n        >\r\n          {hasOverlay && (\r\n            <motion.div\r\n              id={id}\r\n              initial=\"closed\"\r\n              animate=\"open\"\r\n              exit=\"closed\"\r\n              variants={{ open: { display: 'block' }, closed: { display: 'none' } }}\r\n              transition={{ duration: animationDuration, ease: 'easeOut' }}\r\n            >\r\n              <div className={styles.overlay} />\r\n            </motion.div>\r\n          )}\r\n          <motion.div\r\n            id={id}\r\n            initial=\"closed\"\r\n            animate=\"open\"\r\n            exit=\"closed\"\r\n            variants={animationVariants}\r\n            transition={{ duration: animationDuration, ease: 'easeOut' }}\r\n          >\r\n            <div className={styles.innerWrapper}>\r\n              <div className={cx(styles.content, theme, noPadding && styles.noPadding)} ref={contentElement}>\r\n                <button className={styles.closeBtn} onClick={onClose}>\r\n                  <Icon icon={'icon-x'} className={styles.icon} />\r\n                </button>\r\n                {children}\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n      )}\r\n    </AnimatePresence>\r\n  )\r\n\r\n  return hasPortal ? <Portal>{renderDialog()}</Portal> : renderDialog()\r\n}\r\n\r\nexport { Dialog }\r\n","import { ComponentStory, ComponentMeta } from '@storybook/react';\nimport React, { useState, useRef } from 'react';\nimport { Dialog } from './dialog';\nimport { Button } from '../../atoms/button/button';\nimport { InputText, Textarea } from '../../atoms';\nimport { FormGroup } from '../../molecules/form-group/form-group';\nexport default ({\n  title: 'Design System/Molecules/Dialog',\n  component: Dialog,\n  decorators: [(Story, Context) => {\n    return <div className={Context.globals.theme}>\n          <Story />\n        </div>;\n  }]\n} as ComponentMeta<typeof Dialog>);\nconst LightDialogTemplate: ComponentStory<typeof Dialog> = args => {\n  const [isOpen, setIsOpen] = useState(false);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const insideFocusModalRef = useRef<HTMLInputElement>(null);\n  function onClose() {\n    setIsOpen(false);\n    buttonRef?.current?.focus();\n  }\n  function onOpen() {\n    setIsOpen(true);\n  }\n  return <div>\n      <div>\n        <Button type=\"button\" surface=\"primary\" onClick={onOpen} ref={buttonRef}>\n          Open Modal\n        </Button>\n      </div>\n      <Dialog {...args} isOpen={isOpen} onClose={onClose} focusableElementInside={insideFocusModalRef} hasPortal={false} theme=\"light\">\n        <form style={{\n        minHeight: '10rem'\n      }}>\n          <h2 className=\"h3\" style={{\n          marginTop: 0\n        }}>\n            We value your opinion\n          </h2>\n          <FormGroup label={'What is your favourite cinema visit through all times?'} formElement={InputText} formElementProps={{\n          id: 'input1',\n          value: '',\n          onChange: () => {}\n        }} ref={insideFocusModalRef} />\n          <br />\n          <FormGroup label={'What was so special about it?'} formElement={Textarea} formElementProps={{\n          id: 'input2',\n          value: '',\n          onChange: () => {}\n        }} />\n          <div style={{\n          marginTop: '2rem'\n        }}>\n            <span style={{\n            marginRight: '2rem'\n          }}>\n              <Button type=\"submit\" surface=\"primary\" size=\"small\">\n                Submit\n              </Button>\n            </span>\n            <Button type=\"button\" surface=\"secondary\" size=\"small\" onClick={onClose}>\n              Close\n            </Button>\n          </div>\n        </form>\n      </Dialog>\n    </div>;\n};\nconst DarkDialogTemplate: ComponentStory<typeof Dialog> = args => {\n  const [isOpen, setIsOpen] = useState(false);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const insideFocusModalRef = useRef<HTMLVideoElement>(null);\n  function onClose() {\n    setIsOpen(false);\n  }\n  function onOpen() {\n    setIsOpen(true);\n  }\n  return <>\n      <Button type=\"button\" surface=\"primary\" onClick={onOpen} ref={buttonRef}>\n        Open Modal\n      </Button>\n      <Dialog {...args} isOpen={isOpen} onClose={onClose} focusableElementInside={insideFocusModalRef} noPadding hasPortal={false} theme=\"dark\">\n        <div style={{\n        paddingBottom: '56.25%',\n        width: '100%'\n      }}>\n          <video controls style={{\n          position: 'absolute',\n          top: 0,\n          height: '100%',\n          left: 0\n        }} ref={insideFocusModalRef}>\n            <source src=\"https://trailers.filmstaden.se/asset-bd59494e-d4fb-4699-9d8e-a614c4c3273e/Lidl_juni_1280x720.mp4\" />\n          </video>\n        </div>\n      </Dialog>\n    </>;\n};\nconst args = {\n  role: 'dialog',\n  hasOverlay: true\n};\nexport const DialogStoryLight = LightDialogTemplate.bind({});\nDialogStoryLight.storyName = 'Light Dialog';\nDialogStoryLight.args = args;\nexport const DialogStoryDark = DarkDialogTemplate.bind({});\nDialogStoryDark.storyName = 'Dark Dialog';\nDialogStoryDark.args = args;\nDialogStoryLight.parameters = {\n  ...DialogStoryLight.parameters,\n  docs: {\n    ...DialogStoryLight.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  const [isOpen, setIsOpen] = useState(false);\\n  const buttonRef = useRef<HTMLButtonElement>(null);\\n  const insideFocusModalRef = useRef<HTMLInputElement>(null);\\n  function onClose() {\\n    setIsOpen(false);\\n    buttonRef?.current?.focus();\\n  }\\n  function onOpen() {\\n    setIsOpen(true);\\n  }\\n  return <div>\\n      <div>\\n        <Button type=\\\"button\\\" surface=\\\"primary\\\" onClick={onOpen} ref={buttonRef}>\\n          Open Modal\\n        </Button>\\n      </div>\\n      <Dialog {...args} isOpen={isOpen} onClose={onClose} focusableElementInside={insideFocusModalRef} hasPortal={false} theme=\\\"light\\\">\\n        <form style={{\\n        minHeight: '10rem'\\n      }}>\\n          <h2 className=\\\"h3\\\" style={{\\n          marginTop: 0\\n        }}>\\n            We value your opinion\\n          </h2>\\n          <FormGroup label={'What is your favourite cinema visit through all times?'} formElement={InputText} formElementProps={{\\n          id: 'input1',\\n          value: '',\\n          onChange: () => {}\\n        }} ref={insideFocusModalRef} />\\n          <br />\\n          <FormGroup label={'What was so special about it?'} formElement={Textarea} formElementProps={{\\n          id: 'input2',\\n          value: '',\\n          onChange: () => {}\\n        }} />\\n          <div style={{\\n          marginTop: '2rem'\\n        }}>\\n            <span style={{\\n            marginRight: '2rem'\\n          }}>\\n              <Button type=\\\"submit\\\" surface=\\\"primary\\\" size=\\\"small\\\">\\n                Submit\\n              </Button>\\n            </span>\\n            <Button type=\\\"button\\\" surface=\\\"secondary\\\" size=\\\"small\\\" onClick={onClose}>\\n              Close\\n            </Button>\\n          </div>\\n        </form>\\n      </Dialog>\\n    </div>;\\n}\",\n      ...DialogStoryLight.parameters?.docs?.source\n    }\n  }\n};\nDialogStoryDark.parameters = {\n  ...DialogStoryDark.parameters,\n  docs: {\n    ...DialogStoryDark.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  const [isOpen, setIsOpen] = useState(false);\\n  const buttonRef = useRef<HTMLButtonElement>(null);\\n  const insideFocusModalRef = useRef<HTMLVideoElement>(null);\\n  function onClose() {\\n    setIsOpen(false);\\n  }\\n  function onOpen() {\\n    setIsOpen(true);\\n  }\\n  return <>\\n      <Button type=\\\"button\\\" surface=\\\"primary\\\" onClick={onOpen} ref={buttonRef}>\\n        Open Modal\\n      </Button>\\n      <Dialog {...args} isOpen={isOpen} onClose={onClose} focusableElementInside={insideFocusModalRef} noPadding hasPortal={false} theme=\\\"dark\\\">\\n        <div style={{\\n        paddingBottom: '56.25%',\\n        width: '100%'\\n      }}>\\n          <video controls style={{\\n          position: 'absolute',\\n          top: 0,\\n          height: '100%',\\n          left: 0\\n        }} ref={insideFocusModalRef}>\\n            <source src=\\\"https://trailers.filmstaden.se/asset-bd59494e-d4fb-4699-9d8e-a614c4c3273e/Lidl_juni_1280x720.mp4\\\" />\\n          </video>\\n        </div>\\n      </Dialog>\\n    </>;\\n}\",\n      ...DialogStoryDark.parameters?.docs?.source\n    }\n  }\n};"],"names":["usePortal","selector","portal","setPortal","useState","createPortalWithSelector","useCallback","children","createPortal","unmountComponentAtNode","useEffect","newPortal","usePortal$1","useSetFocusOrder","popUpRef","isOpen","focusableElementInside","focusable","_a","firstFocusable","useLayoutEffect","body","setCorrectTabOrder","e","animationDuration","variants","Dialog","id","role","ariaLabelledBy","ariaDescribedBy","hasOverlay","onClose","noPadding","theme","dialogElement","useRef","contentElement","useOnClickOutside","useCloseOnEscape","Portal","renderDialog","_jsx","AnimatePresence","_jsxs","cx","styles","className","undefined","overlay","motion","animationVariants","innerWrapper","closeBtn","icon","hasPortal","dialog_stories","title","component","decorators","Story","Context","globals","LightDialogTemplate","args","setIsOpen","buttonRef","insideFocusModalRef","current","focus","onOpen","Button","type","surface","onClick","ref","style","minHeight","marginTop","FormGroup","label","formElement","InputText","formElementProps","value","onChange","Textarea","marginRight","size","DarkDialogTemplate","_Fragment","paddingBottom","width","controls","position","top","height","left","src","DialogStoryLight","bind","storyName","DialogStoryDark","parameters","docs","source","originalSource"],"mappings":"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"}