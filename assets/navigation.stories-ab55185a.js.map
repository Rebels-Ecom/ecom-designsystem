{"version":3,"file":"navigation.stories-ab55185a.js","sources":["../../src/design-system/components/molecules/navigation/navigation.tsx","../../src/design-system/components/molecules/navigation/navigation.stories.tsx"],"sourcesContent":["import { useState } from 'react'\r\nimport styles from './navigation.module.css'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { ILink } from '../../../../types/links'\r\nimport { ILinkButton } from '../../atoms/link-button/link-button'\r\nimport { Icon} from '../../atoms/icon/icon'\r\nimport { ISearchNavBar, SearchNavBar } from '../search-nav-bar/search-nav-bar'\r\nimport { ITopNavBar, TopNavBar } from '../top-nav-bar/top-nav-bar'\r\nimport cx from 'classnames'\r\nexport interface INavigation {\r\n  topNavBar: ITopNavBar\r\n  searchNavBar: ISearchNavBar\r\n  links?: Array<ILink>\r\n  linkComponent: any\r\n  button?: ILinkButton\r\n}\r\n\r\nconst NavigationList = ({ links = [], linkComponent: Link }: { links: Array<ILink>; linkComponent: any }) => {\r\n  return (\r\n    <ul className={styles.linkList}>\r\n      {links.map((link: ILink, index) => (\r\n        <li key={`${link.text}-${index}`} className={styles.linkItem}>\r\n          {link.isExternal ? (\r\n            <a href={link.href} target={link.target} title={link.title} className={styles.link}>\r\n              {link.text}\r\n            </a>\r\n          ) : (\r\n            <Link to={link.href} target={link.target} title={link.title} activeClassName={styles.active} className={styles.link}>\r\n              {link.text}\r\n            </Link>\r\n          )}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst Navigation = ({ topNavBar, searchNavBar, links, button, linkComponent: Link }: INavigation) => {\r\n  const [isOpen, setIsOpen] = useState<boolean>(false)\r\n    \r\n  return (\r\n    <nav className={`${styles.navigation} ${isOpen ? styles.navigationOpen : ''}`}>\r\n      <TopNavBar {...topNavBar}/>\r\n      <div className={cx(styles.bar, styles.searchNavBar)}>\r\n        <SearchNavBar {...searchNavBar}/>\r\n        <button\r\n          id=\"navigation-menu-btn\"\r\n          type={'button'}\r\n          aria-label=\"menu\"\r\n          aria-controls={'navigation-menu'}\r\n          aria-expanded={isOpen}\r\n          onClick={() => setIsOpen(!isOpen)}\r\n          className={cx(styles.menuButton, isOpen && styles.open)}\r\n        >\r\n          <span className={styles.menuButtonInner}>\r\n            <Icon icon=\"icon-menu\" className={styles.icon} />\r\n          </span>\r\n        </button>\r\n      </div>\r\n      {links?.length ? (\r\n        <div className={cx(styles.bar, styles.largeDeviceMenuBar)}>\r\n          <NavigationList links={links} linkComponent={Link} />\r\n        </div>\r\n      ) : null}\r\n      {(links?.length || button) && (\r\n        <AnimatePresence initial={false}>\r\n          {isOpen && (\r\n            <motion.div\r\n              id={'navigation-menu'}\r\n              initial=\"collapsed\"\r\n              animate=\"open\"\r\n              exit=\"collapsed\"\r\n              variants={{\r\n                open: { display: 'block' },\r\n                collapsed: { display: 'none' },\r\n              }}\r\n              aria-labelledby={'navigation-menu-btn'}\r\n            >\r\n              <div className={styles.smallDeviceMenu}>\r\n                {links?.length && <NavigationList links={links} linkComponent={Link} />}\r\n              </div>\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      )} \r\n    </nav>\r\n  )\r\n}\r\n\r\nexport { Navigation }\r\n","import React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { Navigation } from './navigation';\nimport { SearchNavBarStory } from '../search-nav-bar/search-nav-bar.stories';\nimport { TopNavBarStory } from '../top-nav-bar/top-nav-bar.stories';\nexport default ({\n  title: 'Design System/Molecules/Navigation',\n  component: Navigation\n} as ComponentMeta<typeof Navigation>);\nconst Template: ComponentStory<typeof Navigation> = args => <Navigation {...args} />;\nconst navigationArgs = {\n  topNavBar: TopNavBarStory.args,\n  searchNavBar: SearchNavBarStory.args,\n  links: [{\n    href: '#',\n    text: 'Hem',\n    isExternal: true\n  }, {\n    href: '/nyheter',\n    text: 'Nyheter',\n    isExternal: true\n  }, {\n    href: '/ol',\n    text: 'Öl',\n    isExternal: true\n  }, {\n    href: '/vin',\n    text: 'Vin',\n    isExternal: true\n  }, {\n    href: '/sprit',\n    text: 'Sprit',\n    isExternal: true\n  }, {\n    href: '/cider',\n    text: 'Cider',\n    isExternal: true\n  }, {\n    href: '/alcoholfritt',\n    text: 'Alcoholfritt',\n    isExternal: true\n  }, {\n    href: '/ovrigt',\n    text: 'Övrigt',\n    isExternal: true\n  }],\n  linkComponent: 'a'\n};\nexport const NavStory = Template.bind({});\nNavStory.storyName = 'Navigation';\nNavStory.args = {\n  ...navigationArgs\n};\nNavStory.parameters = {\n  ...NavStory.parameters,\n  docs: {\n    ...NavStory.parameters?.docs,\n    source: {\n      originalSource: \"args => <Navigation {...args} />\",\n      ...NavStory.parameters?.docs?.source\n    }\n  }\n};"],"names":["NavigationList","links","Link","_jsx","styles","linkList","linkItem","link","href","target","title","text","active","index","Navigation","topNavBar","searchNavBar","button","isOpen","setIsOpen","useState","_jsxs","TopNavBar","cx","SearchNavBar","menuButtonInner","icon","AnimatePresence","motion","smallDeviceMenu","navigation_stories","component","Template","args","navigationArgs","TopNavBarStory","SearchNavBarStory","isExternal","linkComponent","NavStory","bind","storyName","parameters","docs","source","originalSource"],"mappings":"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"}