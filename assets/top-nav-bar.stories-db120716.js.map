{"version":3,"file":"top-nav-bar.stories-db120716.js","sources":["../../src/design-system/components/molecules/top-nav-bar/top-nav-bar.tsx","../../src/design-system/components/molecules/top-nav-bar/top-nav-bar.stories.tsx"],"sourcesContent":["import { TNavLink } from '../../../../types/links'\nimport { Icon } from '../../atoms/icon/icon'\nimport styles from './top-nav-bar.module.css'\nimport cx from 'classnames'\n\nexport interface ITopNavBar {\n  topNavLinks: Array<TNavLink>\n  linkComponent: any\n}\n\nconst TopNavBar = ({ topNavLinks, linkComponent: Link }: ITopNavBar) => {\n  const contactLinks = topNavLinks.filter((link) => link.navLinkType === 'email' || link.navLinkType === 'telephone')\n  const userLinks = topNavLinks.filter((link) => link.navLinkType === 'login' || link.navLinkType === 'register')\n  return (\n    <div className={styles.topNavBar}>\n      {Array.isArray(contactLinks) && contactLinks.length && (\n        <ul className={styles.navLinksWrapper}>\n          {contactLinks.map((link: TNavLink, index) => (\n            <a href={link.navLinkType === 'email' ? `mailto:${link.href}` : `tel:${link.href}`} key={`${link.href}-${index}`} className={styles.topNavLink}>\n              <Icon icon={link.navLinkType === 'email' ? 'icon-mail' : 'icon-phone'} className={styles.navIcon} />\n              <span className={cx('bodyS', styles.topNavText)}>{link.children}</span>\n            </a>\n          ))}\n        </ul>\n      )}\n      {Array.isArray(userLinks) && userLinks.length && (\n        <ul className={styles.navLinksWrapper}>\n          {userLinks.map((link: TNavLink, index) => (\n            <Link to={link.href} className={styles.topNavLink} key={`${link.href}-${index}`} target={'_blank'} title={link.children}>\n              <Icon icon={link.navLinkType === 'register' ? 'icon-plus-circle' : 'icon-user'} className={styles.navIcon} />\n              <span className={cx('bodyS', styles.topNavText)}>{link.children}</span>\n            </Link>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport { TopNavBar }\n","import React from 'react';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { TopNavBar } from './top-nav-bar';\nconst meta: Meta<typeof TopNavBar> = {\n  title: 'Design System/Molecules/Top Nav Bar',\n  component: TopNavBar\n};\nexport default meta;\ntype Story = StoryObj<typeof TopNavBar>;\nconst TopNavBarStoryTemplate: Story = {\n  render: ({\n    ...args\n  }) => <TopNavBar {...args} />\n};\nconst topNavArgs = {\n  topNavLinks: [{\n    navLinkType: 'email',\n    href: 'ehandel@spendrups.se',\n    children: 'Kontakta oss',\n    isExternal: false\n  }, {\n    navLinkType: 'telephone',\n    href: '0771-494910',\n    children: '0771-494910',\n    isExternal: false\n  }, {\n    navLinkType: 'register',\n    href: 'http://spendrups.se/kund/',\n    children: 'Bli kund',\n    isExternal: true\n  }, {\n    navLinkType: 'login',\n    href: '/login',\n    children: 'Logga in',\n    isExternal: false\n  }],\n  linkComponent: 'a'\n};\nexport const TopNavBarStory = {\n  ...TopNavBarStoryTemplate,\n  args: {\n    ...topNavArgs\n  }\n};\nTopNavBarStory.parameters = {\n  ...TopNavBarStory.parameters,\n  docs: {\n    ...TopNavBarStory.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  ...TopNavBarStoryTemplate,\\n  args: {\\n    ...topNavArgs\\n  }\\n}\",\n      ...TopNavBarStory.parameters?.docs?.source\n    }\n  }\n};"],"names":["TopNavBar","topNavLinks","contactLinks","link","userLinks","_jsxs","styles","topNavBar","navLinksWrapper","href","topNavLink","navIcon","cx","children","index","_jsx","meta","title","component","TopNavBarStoryTemplate","render","args","topNavArgs","navLinkType","isExternal","linkComponent","TopNavBarStory","parameters","docs","source","originalSource"],"mappings":"2WAUAA,EAAA,CAAA,CAAmB,YAAAC,EAAEA,cAAAA,CAA6C,IAAA,CAChE,MAAAC,EAAAD,EAAA,OAAAE,GAAAA,EAAA,cAAA,SAAAA,EAAA,cAAA,WAAA,EACAC,EAAAH,EAAA,OAAAE,GAAAA,EAAA,cAAA,SAAAA,EAAA,cAAA,UAAA,EACA,OAAAE,EAAA,MAAA,CACE,UAAAC,EAAA,UAAuBC,SAAAA,CAAAA,MAAAA,QAAAA,CAAAA,GAAAA,EAAAA,QAAAA,EAAAA,KAAAA,CAEnB,UAAAD,EAAA,gBAAsBE,SAAAA,EAAAA,IAAAA,CAAAA,EAAAA,IAAAA,EAAAA,IAAAA,CAElB,KAAAL,EAAA,cAAA,QAAA,UAAAA,EAAA,OAAA,OAAAA,EAAA,OAA4EM,UAAAA,EAAAA,WAAwDC,SAAAA,CAAAA,EAAAA,EAAAA,CAC7H,KAAAP,EAAA,cAAA,QAAA,YAAA,aAAoD,UAAAG,EAAA,OAAgCK,CAAAA,EAAAA,EAAAA,OAAAA,CACzF,UAAAC,EAAA,QAAAN,EAAA,UAAA,EAA8C,SAAAH,EAAA,QAASU,CAAAA,CAAAA,CAAgB,EAAA,GAAAV,EAAA,QAAAW,GAAA,CAAA,CAE1E,CAAA,EAAA,MAAA,QAAAV,CAAA,GAAAA,EAAA,QAAAW,EAAA,KAAA,CAIH,UAAAT,EAAA,gBAAsBE,SAAAA,EAAAA,IAAAA,CAAAA,EAAAA,IAAAA,EAAAA,EAAAA,CAEb,GAAAL,EAAA,KAAUM,UAAAA,EAAAA,WAAwBC,OAAAA,SAAkD,MAAAP,EAAA,SAAsBU,SAAAA,CAAAA,EAAAA,EAAAA,CACxG,KAAAV,EAAA,cAAA,WAAA,mBAAA,YAA8D,UAAAG,EAAA,OAA+BK,CAAAA,EAAAA,EAAAA,OAAAA,CAClG,UAAAC,EAAA,QAAAN,EAAA,UAAA,EAA8C,SAAAH,EAAA,QAASU,CAAAA,CAAAA,CAAgB,EAAA,GAAAV,EAAA,QAAAW,GAAA,CAAA,CAE1E,CAAA,CAAA,CAEJ,CAAA,CAGP,kTClCA,MAAME,EAA+B,CACnCC,MAAO,sCACPC,UAAWlB,CACb,EAGMmB,EAAgC,CACpCC,OAAQA,CAAC,CACP,GAAGC,CAAAA,MACErB,EAAS,CAAA,GAAKqB,CAAAA,CAAI,CAC3B,EACMC,EAAa,CACjBrB,YAAa,CAAC,CACZsB,YAAa,QACbd,KAAM,uBACNI,SAAU,eACVW,WAAY,EAAA,EACX,CACDD,YAAa,YACbd,KAAM,cACNI,SAAU,cACVW,WAAY,EAAA,EACX,CACDD,YAAa,WACbd,KAAM,4BACNI,SAAU,WACVW,WAAY,EAAA,EACX,CACDD,YAAa,QACbd,KAAM,SACNI,SAAU,WACVW,WAAY,EAAA,CACb,EACDC,cAAe,GACjB,EACaC,EAAiB,CAC5B,GAAGP,EACHE,KAAM,CACJ,GAAGC,CACL,CACF,YACAI,EAAeC,WAAa,CAC1B,GAAGD,EAAeC,WAClBC,KAAM,CACJ,IAAGF,EAAAA,EAAeC,aAAfD,YAAAA,EAA2BE,KAC9BC,OAAQ,CACNC,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGJ,GAAAA,EAAAA,EAAeC,aAAfD,YAAAA,EAA2BE,OAA3BF,YAAAA,EAAiCG,MACtC,CACF,CACF"}