{"version":3,"file":"product-quantity-input.stories-2899cb32.js","sources":["../../src/design-system/components/molecules/product-quantity-input/product-quantity-input.stories.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { ProductQuantityInput } from './product-quantity-input';\nimport { InputTextStory } from '../../atoms/inputs/input-text/input-text.stories';\nimport { convertNumToStr } from '../../../../helpers/format-helper';\nexport default ({\n  title: 'Design System/Molecules/ProductQuantityInput',\n  component: ProductQuantityInput\n} as ComponentMeta<typeof ProductQuantityInput>);\nconst Template: ComponentStory<typeof ProductQuantityInput> = args => {\n  const price = 23.34;\n  const [totalPrice, setTotalPrice] = useState(convertNumToStr(price * args.itemNumberPerSalesUnit));\n  function handleOnChangeQuantity(e: React.ChangeEvent<HTMLInputElement>) {\n    const quantity = parseInt(e.target.value) || 1;\n    setTotalPrice(convertNumToStr(price * args.itemNumberPerSalesUnit * quantity));\n  }\n  return <>\n      <div style={{\n      margin: '0 0 1rem 0',\n      maxWidth: '616px'\n    }}>\n        <ProductQuantityInput {...args} onChange={handleOnChangeQuantity} totalPrice={totalPrice} />\n      </div>\n    </>;\n};\nexport const InputQuantityStory = Template.bind({});\nInputQuantityStory.storyName = 'Form Group with Input Quantity';\nInputQuantityStory.args = {\n  salesUnit: 'KLI',\n  itemNumberPerSalesUnit: 15,\n  quantityInputId: '1105101',\n  inputProps: {\n    ...InputTextStory,\n    id: 'input_1',\n    sizeSmall: true,\n    defaultValue: '1',\n    placeholder: '1'\n  }\n};\nInputQuantityStory.parameters = {\n  ...InputQuantityStory.parameters,\n  docs: {\n    ...InputQuantityStory.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  const price = 23.34;\\n  const [totalPrice, setTotalPrice] = useState(convertNumToStr(price * args.itemNumberPerSalesUnit));\\n  function handleOnChangeQuantity(e: React.ChangeEvent<HTMLInputElement>) {\\n    const quantity = parseInt(e.target.value) || 1;\\n    setTotalPrice(convertNumToStr(price * args.itemNumberPerSalesUnit * quantity));\\n  }\\n  return <>\\n      <div style={{\\n      margin: '0 0 1rem 0',\\n      maxWidth: '616px'\\n    }}>\\n        <ProductQuantityInput {...args} onChange={handleOnChangeQuantity} totalPrice={totalPrice} />\\n      </div>\\n    </>;\\n}\",\n      ...InputQuantityStory.parameters?.docs?.source\n    }\n  }\n};"],"names":["productQuantityInput_stories","title","component","ProductQuantityInput","Template","args","totalPrice","setTotalPrice","useState","convertNumToStr","price","itemNumberPerSalesUnit","handleOnChangeQuantity","e","quantity","parseInt","target","value","_Fragment","children","style","margin","maxWidth","onChange","InputQuantityStory","bind","storyName","salesUnit","quantityInputId","inputProps","InputTextStory","id","sizeSmall","defaultValue","placeholder","parameters","docs","source","originalSource"],"mappings":"4VAKA,MAAgBA,EAAA,CACdC,MAAO,+CACPC,UAAWC,CACb,EACMC,EAAgEC,GAAA,CAE9D,KAAA,CAACC,EAAYC,CAAa,EAAIC,WAASC,EAAgBC,MAAQL,EAAKM,sBAAsB,CAAC,EACjG,SAASC,EAAuBC,EAAwC,CACtE,MAAMC,EAAWC,SAASF,EAAEG,OAAOC,KAAK,GAAK,EAC7CV,EAAcE,EAAgBC,MAAQL,EAAKM,uBAAyBG,CAAQ,CAAC,CAC/E,CACA,SAAOI,EAAA,CAAAC,WACH,MAAA,CAAKC,MAAO,CACZC,OAAQ,aACRC,SAAU,OACZ,EAAEH,WACGhB,EAAoB,CAAA,GAAKE,EAAMkB,SAAUX,EAAwBN,WAAAA,CAAAA,CAAuB,CAAA,CAAG,CAAA,CAE7F,CACP,EACakB,EAAqBpB,EAASqB,KAAK,EAAE,EAClDD,EAAmBE,UAAY,iCAC/BF,EAAmBnB,KAAO,CACxBsB,UAAW,MACXhB,uBAAwB,GACxBiB,gBAAiB,UACjBC,WAAY,CACV,GAAGC,EACHC,GAAI,UACJC,UAAW,GACXC,aAAc,IACdC,YAAa,GACf,CACF,YACAV,EAAmBW,WAAa,CAC9B,GAAGX,EAAmBW,WACtBC,KAAM,CACJ,IAAGZ,EAAAA,EAAmBW,aAAnBX,YAAAA,EAA+BY,KAClCC,OAAQ,CACNC,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGd,GAAAA,EAAAA,EAAmBW,aAAnBX,YAAAA,EAA+BY,OAA/BZ,YAAAA,EAAqCa,MAC1C,CACF,CACF"}