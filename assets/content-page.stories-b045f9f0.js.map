{"version":3,"file":"content-page.stories-b045f9f0.js","sources":["../../src/design-system/components/templates/content-page/content-page.tsx"],"sourcesContent":["import React from 'react'\nimport { Navigation } from '../../molecules/navigation/navigation'\nimport { ContentWrapper, MaxWidth } from '../../layouts'\nimport { Header } from '../../organisms'\nimport { Logotype, SearchNavBarLinks, SearchNavBar, TopNavBar } from '../../molecules'\nimport { IFooter, Footer } from '../../organisms/footer/footer'\nimport { Breadcrumbs, IBreadcrumbs } from '../../organisms/breadcrumbs/breadcrumbs'\nimport { IRichText, RichText } from '../../organisms/rich-text/rich-text'\n\nexport interface IContentPage {\n  header: any\n  breadcrumbs: IBreadcrumbs\n  richText: IRichText\n  footer: IFooter\n}\n\nconst ContentPage = ({\n  header,\n  breadcrumbs,\n  richText,\n  footer,\n}: IContentPage) => {\n  const [isOpen, setIsOpen] = React.useState(false)\n  const handleOnClick = () => setIsOpen(!isOpen)\n  const setSelectedDate = (date:Date) => { console.log(`Trigger set delivery day - ${date.toISOString().split('T')[0]}`)}\n  return (\n    <>\n      <Header isOpen={isOpen}>\n        {({ Wrapper, Button, GridArea }) => (\n          <Wrapper isOpen={isOpen}>\n            <GridArea area=\"top\">\n              <TopNavBar {...header.topNavBar} />\n            </GridArea>\n            <GridArea area=\"logo\">\n              <Logotype {...header.logotype} />\n            </GridArea>\n            <GridArea area=\"search\">\n              <SearchNavBar {...header.searchNavBar} />\n            </GridArea>\n            <GridArea area=\"searchNavLinks\">\n              <SearchNavBarLinks {...header.searchNavLinks} onClickSelectDate={setSelectedDate} />\n            </GridArea>\n            <GridArea area=\"btn\">\n              <Button onClick={handleOnClick} />\n            </GridArea>\n            <GridArea area=\"nav\">\n              <Navigation {...header.navigation} isOpen={isOpen} />\n            </GridArea>\n          </Wrapper>\n        )}\n      </Header>\n      <ContentWrapper>\n        <Breadcrumbs textWidth='narrow' {...breadcrumbs} />\n        <MaxWidth contentMaxWidth={'wide'}>\n          <RichText {...richText} />\n        </MaxWidth>\n      </ContentWrapper>\n      <Footer {...footer} />\n    </>\n  )\n}\n\nexport { ContentPage }\n"],"names":["ContentPage","header","breadcrumbs","richText","isOpen","setIsOpen","React","handleOnClick","setSelectedDate","date","console","_jsxs","_Fragment","_jsx","Header","Wrapper","Button","GridArea","TopNavBar","topNavBar","Logotype","logotype","SearchNavBar","searchNavBar","SearchNavBarLinks","searchNavLinks","Navigation","navigation","ContentWrapper","Breadcrumbs","RichText","Footer","footer"],"mappings":"slEAgBA,MAAAA,EAAA,CAAA,CAAqB,OAAAC,EACnBA,YAAAA,EACAC,SAAAA,EACAC,OAAAA,CAEY,IAAA,CACZ,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACAC,EAAA,IAAAF,EAAA,CAAAD,CAAA,EACAI,EAAAC,GAAA,CAAyCC,QAAAA,IAAAA,8BAAAA,EAAAA,YAAAA,EAAAA,MAAAA,GAAAA,EAAAA,CAAAA,GAAAA,CAA4E,EACrH,OAAAC,EAAAC,EAAA,CACE,SAAA,CAAAC,EAAAC,EAAA,CACS,OAAAV,EAACA,SAAAA,CAAAA,CACJ,QAAAW,EAAEA,OAAAA,EAASC,SAAAA,CAAQC,IAAAA,EAAAA,EAAAA,CACX,OAAAb,EAACA,SAAAA,CAAAA,EAAAA,EAAAA,CACE,KAAA,MAAM,SAAAS,EAAAK,EAAA,CACH,GAAAjB,EAAA,SAAYkB,CAAAA,CAAS,CAAA,EAAAN,EAAAI,EAAA,CAExB,KAAA,OAAM,SAAAJ,EAAAO,EAAA,CACJ,GAAAnB,EAAA,QAAYoB,CAAAA,CAAQ,CAAA,EAAAR,EAAAI,EAAA,CAEtB,KAAA,SAAM,SAAAJ,EAAAS,EAAA,CACA,GAAArB,EAAA,YAAYsB,CAAAA,CAAY,CAAA,EAAAV,EAAAI,EAAA,CAE9B,KAAA,iBAAM,SAAAJ,EAAAW,EAAA,CACK,GAAAvB,EAAA,eAAYwB,kBAAAA,CAAmCjB,CAAAA,CAAgB,CAAA,EAAAK,EAAAI,EAAA,CAE1E,KAAA,MAAM,SAAAJ,EAAAG,EAAA,CACN,QAAAT,CAAUA,CAAAA,CAAc,CAAA,EAAAM,EAAAI,EAAA,CAExB,KAAA,MAAM,SAAAJ,EAAAa,EAAA,CACF,GAAAzB,EAAA,WAAY0B,OAAAA,CAAYvB,CAAAA,CAAe,CAAA,CAAA,CACzC,CAAA,CAAA,CAAA,EAAAO,EAAAiB,EAAA,CAIF,SAAA,CAAAf,EAAAgB,EAAA,CACD,UAAA,SAAW,GAAA3B,CAAaA,CAAAA,EAAAA,EAAAA,EAAAA,CAC3B,gBAAA,OAAkB,SAAAW,EAAAiB,EAAA,CAChB,GAAA3B,CAAKA,CAAAA,CAAQ,CAAA,CAAA,CACb,CAAA,EAAAU,EAAAkB,EAAA,CAEN,GAAAC,CAAKA,CAAAA,CAAAA,CAAU,CAAA,CAG5B;;;;;;;;;;;;;;;;"}