{"version":3,"file":"checkbox.stories-8b23aab7.js","sources":["../../src/design-system/components/atoms/inputs/checkbox/checkbox.tsx","../../src/design-system/components/atoms/inputs/checkbox/checkbox.stories.tsx"],"sourcesContent":["import { forwardRef } from 'react'\r\nimport cx from 'classnames'\r\nimport { getisErroneousStyle } from '../../../../../helpers/form-helper'\r\nimport { TOther } from '../../../../../types/other'\r\nimport styles from './checkbox.module.css'\r\n\r\nexport interface ICheckbox {\r\n  id: string\r\n  name: string\r\n  className?: string\r\n  value?: string\r\n  defaultValue?: string\r\n  checked: boolean\r\n  onChange?: CallableFunction\r\n  disabled?: boolean\r\n  isErroneous?: boolean\r\n  required?: boolean\r\n  other?: TOther\r\n}\r\n\r\nconst Checkbox = forwardRef<HTMLInputElement, ICheckbox>((props, ref) => {\r\n  const { id, name, value, defaultValue, checked, className, isErroneous, required, onChange, disabled, other } = props\r\n\r\n  function handleOnChange(e: React.FormEvent<HTMLInputElement>) {\r\n    if (onChange) {\r\n      onChange(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <input\r\n      ref={ref}\r\n      type={'checkbox'}\r\n      className={cx('body', styles.checkbox, getisErroneousStyle(styles, isErroneous), className)}\r\n      id={id}\r\n      name={name}\r\n      onChange={handleOnChange}\r\n      value={value}\r\n      defaultValue={defaultValue}\r\n      checked={checked}\r\n      disabled={disabled}\r\n      required={required}\r\n      {...other}\r\n    />\r\n  )\r\n})\r\n\r\nexport { Checkbox }\r\n","import React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { useState } from 'react';\nimport { Checkbox } from './checkbox';\nexport default ({\n  title: 'Design System/Atoms/Inputs/Checkbox',\n  component: Checkbox\n} as ComponentMeta<typeof Checkbox>);\nconst Template: ComponentStory<typeof Checkbox> = args => {\n  const [isChecked, setIsChecked] = useState(false);\n  const [isChecked2, setIsChecked2] = useState(false);\n  const [isChecked3, setIsChecked3] = useState(false);\n  const [isChecked4, setIsChecked4] = useState(true);\n  const input = {\n    id: 'input_1',\n    value: 'input_1',\n    checked: isChecked,\n    name: 'group'\n  };\n  const input2 = {\n    ...input,\n    id: 'input_2',\n    value: 'input_2',\n    checked: isChecked2,\n    disabled: true\n  };\n  const input3 = {\n    ...input,\n    id: 'input_3',\n    value: 'input_3',\n    checked: isChecked3,\n    isErroneous: true\n  };\n  const input4 = {\n    ...input,\n    id: 'input_4',\n    value: 'input_4',\n    checked: isChecked4,\n    name: 'group2',\n    disabled: true\n  };\n  const style = {\n    margin: '0 0 1rem 0',\n    maxWidth: '616px'\n  };\n  return <>\n      <div style={style}>\n        <Checkbox {...args} />\n      </div>\n    </>;\n};\nexport const CheckboxStory = Template.bind({});\nCheckboxStory.storyName = 'Checkbox';\nCheckboxStory.args = {\n  id: 'input_1',\n  value: 'input_1',\n  checked: true,\n  name: 'group',\n  disabled: false\n};\nexport const CheckboxStoryError = Template.bind({});\nCheckboxStoryError.storyName = 'Checkbox Error';\nCheckboxStoryError.args = {\n  ...CheckboxStory.args,\n  isErroneous: true\n};\nexport const CheckboxStoryDisabled = Template.bind({});\nCheckboxStoryDisabled.storyName = 'Checkbox Disabled';\nCheckboxStoryDisabled.args = {\n  ...CheckboxStory.args,\n  disabled: true\n};\nCheckboxStory.parameters = {\n  ...CheckboxStory.parameters,\n  docs: {\n    ...CheckboxStory.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  const [isChecked, setIsChecked] = useState(false);\\n  const [isChecked2, setIsChecked2] = useState(false);\\n  const [isChecked3, setIsChecked3] = useState(false);\\n  const [isChecked4, setIsChecked4] = useState(true);\\n  const input = {\\n    id: 'input_1',\\n    value: 'input_1',\\n    checked: isChecked,\\n    name: 'group'\\n  };\\n  const input2 = {\\n    ...input,\\n    id: 'input_2',\\n    value: 'input_2',\\n    checked: isChecked2,\\n    disabled: true\\n  };\\n  const input3 = {\\n    ...input,\\n    id: 'input_3',\\n    value: 'input_3',\\n    checked: isChecked3,\\n    isErroneous: true\\n  };\\n  const input4 = {\\n    ...input,\\n    id: 'input_4',\\n    value: 'input_4',\\n    checked: isChecked4,\\n    name: 'group2',\\n    disabled: true\\n  };\\n  const style = {\\n    margin: '0 0 1rem 0',\\n    maxWidth: '616px'\\n  };\\n  return <>\\n      <div style={style}>\\n        <Checkbox {...args} />\\n      </div>\\n    </>;\\n}\",\n      ...CheckboxStory.parameters?.docs?.source\n    }\n  }\n};\nCheckboxStoryError.parameters = {\n  ...CheckboxStoryError.parameters,\n  docs: {\n    ...CheckboxStoryError.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  const [isChecked, setIsChecked] = useState(false);\\n  const [isChecked2, setIsChecked2] = useState(false);\\n  const [isChecked3, setIsChecked3] = useState(false);\\n  const [isChecked4, setIsChecked4] = useState(true);\\n  const input = {\\n    id: 'input_1',\\n    value: 'input_1',\\n    checked: isChecked,\\n    name: 'group'\\n  };\\n  const input2 = {\\n    ...input,\\n    id: 'input_2',\\n    value: 'input_2',\\n    checked: isChecked2,\\n    disabled: true\\n  };\\n  const input3 = {\\n    ...input,\\n    id: 'input_3',\\n    value: 'input_3',\\n    checked: isChecked3,\\n    isErroneous: true\\n  };\\n  const input4 = {\\n    ...input,\\n    id: 'input_4',\\n    value: 'input_4',\\n    checked: isChecked4,\\n    name: 'group2',\\n    disabled: true\\n  };\\n  const style = {\\n    margin: '0 0 1rem 0',\\n    maxWidth: '616px'\\n  };\\n  return <>\\n      <div style={style}>\\n        <Checkbox {...args} />\\n      </div>\\n    </>;\\n}\",\n      ...CheckboxStoryError.parameters?.docs?.source\n    }\n  }\n};\nCheckboxStoryDisabled.parameters = {\n  ...CheckboxStoryDisabled.parameters,\n  docs: {\n    ...CheckboxStoryDisabled.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  const [isChecked, setIsChecked] = useState(false);\\n  const [isChecked2, setIsChecked2] = useState(false);\\n  const [isChecked3, setIsChecked3] = useState(false);\\n  const [isChecked4, setIsChecked4] = useState(true);\\n  const input = {\\n    id: 'input_1',\\n    value: 'input_1',\\n    checked: isChecked,\\n    name: 'group'\\n  };\\n  const input2 = {\\n    ...input,\\n    id: 'input_2',\\n    value: 'input_2',\\n    checked: isChecked2,\\n    disabled: true\\n  };\\n  const input3 = {\\n    ...input,\\n    id: 'input_3',\\n    value: 'input_3',\\n    checked: isChecked3,\\n    isErroneous: true\\n  };\\n  const input4 = {\\n    ...input,\\n    id: 'input_4',\\n    value: 'input_4',\\n    checked: isChecked4,\\n    name: 'group2',\\n    disabled: true\\n  };\\n  const style = {\\n    margin: '0 0 1rem 0',\\n    maxWidth: '616px'\\n  };\\n  return <>\\n      <div style={style}>\\n        <Checkbox {...args} />\\n      </div>\\n    </>;\\n}\",\n      ...CheckboxStoryDisabled.parameters?.docs?.source\n    }\n  }\n};"],"names":["Checkbox","forwardRef","props","ref","id","name","value","defaultValue","checked","className","isErroneous","required","onChange","disabled","other","handleOnChange","e","_jsx","cx","styles","getisErroneousStyle","checkbox_stories","title","component","Template","args","useState","_Fragment","children","style","margin","maxWidth","CheckboxStory","bind","storyName","CheckboxStoryError","CheckboxStoryDisabled","parameters","docs","source","originalSource"],"mappings":"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"}