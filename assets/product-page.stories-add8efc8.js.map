{"version":3,"file":"product-page.stories-add8efc8.js","sources":["../../src/design-system/components/templates/product-page/product-page.tsx"],"sourcesContent":["import React from 'react'\nimport { Navigation } from '../../molecules/navigation/navigation'\nimport { Above, Below, ContentWrapper, MaxWidth } from '../../layouts'\nimport { CartSidebar, Header } from '../../organisms'\nimport { CartProduct, DrawerSidebar, FormGroup, GroupWrapper, Logotype, SearchNavBarLinks, SearchNavBar, TopNavBar, Tabs, UserProfileDropdown } from '../../molecules'\nimport { Footer, IFooter } from '../../organisms/footer/footer'\nimport { IProductDetails, ProductDetails } from '../../organisms/product-details/product-details'\nimport { IProductDescription, ProductDescription } from '../../organisms/product-description/product-description'\nimport { Heading, LinkButton, ToggleSwitch, Button, IconButton, UiDatePicker } from '../../atoms'\nimport { ICartProduct } from '../../molecules/cart-product/cart-product'\nimport { CartProductList } from '../../organisms/cart-product-list/cart-product-list'\nimport { UiDatePickerStory } from '../../atoms/ui-date-picker/ui-date-picker.stories'\nimport { UserProfileDropdownStory } from '../../molecules/user-profile-dropdown/user-profile-dropdown.stories'\n\nexport interface IProductPage {\n  header: any\n  productDetails: IProductDetails\n  productDescription: IProductDescription\n  addToCart: CallableFunction\n  footer: IFooter\n}\n\nconst ProductPage = ({ header, productDetails, productDescription, addToCart, footer }: IProductPage) => {\n  const [isOpen, setIsOpen] = React.useState(false)\n  const [isCartSidebarOpen, setIsCartSidebarOpen] = React.useState(false)\n  const [isSearchbarOpen, setIsSearchbarOpen] = React.useState(false)\n  const handleOnClick = () => setIsOpen(!isOpen)\n  const onClickCloseCartSidebar = () => setIsCartSidebarOpen(false)\n  const onClickSearchIcon = () => setIsSearchbarOpen(!isSearchbarOpen)\n  const onClickCartIcon = () => setIsCartSidebarOpen(true)\n  const setSelectedDate = (date:Date) => { console.log(`Trigger set delivery day - ${date.toISOString().split('T')[0]}`)}\n  const onClickLogout = () => { console.log('Handle logout...')}\n\n  return (\n    <>\n      <Header isOpen={isOpen}>\n        {({ Wrapper, MenuButton, GridArea }) => (\n          <Wrapper isOpen={isOpen}>\n            <GridArea area=\"top\">\n              <TopNavBar {...header.topNavBar} onClick={onClickLogout} onSelectDate={setSelectedDate}/>\n            </GridArea>\n            <GridArea area=\"logo\">\n              <Logotype {...header.logotype} />\n            </GridArea>  \n            {isSearchbarOpen && <GridArea area=\"search\">\n              <SearchNavBar {...header.searchNavBar} isOpen={isSearchbarOpen}/>\n            </GridArea>}\n            {header.searchNavLinks && <GridArea area=\"searchNavLinks\">\n              <Below breakpoint=\"lg\">{(matches: any) => matches && \n                  <SearchNavBarLinks>\n                    <GroupWrapper position='apart' align='center'>\n                      <IconButton icon={isSearchbarOpen ? 'icon-x' : 'icon-search'} isLink={false} linkComponent={undefined} size='large' isTransparent onClick={onClickSearchIcon ? ()=>onClickSearchIcon() : ()=>{}}></IconButton>\n                      <IconButton icon={'icon-heart'} isLink={false} linkComponent={undefined} size='large' isTransparent></IconButton>\n                      <IconButton icon={'icon-shopping-cart'} isLink={false} linkComponent={undefined} onClick={onClickCartIcon ? ()=>onClickCartIcon() : ()=>{}} size='large' isTransparent></IconButton>\n                    </GroupWrapper>\n                  </SearchNavBarLinks>}\n                </Below>\n                <Above breakpoint=\"lg\">{(matches: any) => matches && \n                  <SearchNavBarLinks>\n                    <GroupWrapper position='apart' align='center'>\n                    <IconButton icon={'icon-heart'} isLink={false} linkComponent={undefined} size='medium' isTransparent></IconButton>\n                    <IconButton icon={'icon-shopping-cart'} isLink={false} linkComponent={undefined} onClick={onClickCartIcon ? ()=>onClickCartIcon() : ()=>{}} size='medium' isTransparent></IconButton>\n                    </GroupWrapper>\n                    <GroupWrapper position='apart'>\n                        <UiDatePicker {...UiDatePickerStory.args} onDateSelected={setSelectedDate}></UiDatePicker>\n                        <UserProfileDropdown  {...UserProfileDropdownStory.args}></UserProfileDropdown>\n                    </GroupWrapper>\n                  </SearchNavBarLinks>}\n                </Above>\n            </GridArea>\n            }\n            <GridArea area=\"btn\">\n              <MenuButton onClick={handleOnClick} />\n            </GridArea>\n            <GridArea area=\"nav\">\n              <Below breakpoint=\"lg\">{(matches: any) => matches &&  <Tabs {...header.navigationTabs} isOpen={isOpen}></Tabs>}</Below>\n              <Above breakpoint=\"lg\">{(matches: any) => matches && <Navigation {...header.navigation} isOpen={isOpen} />}</Above>\n            </GridArea>\n          </Wrapper>\n        )}\n      </Header>\n      <DrawerSidebar onClose={onClickCloseCartSidebar} isOpen={isCartSidebarOpen}>\n          <CartSidebar classNames={['light']}>\n              <GroupWrapper position='apart'>\n                  <Heading order={3}>Kundvagn</Heading>\n                  <Heading order={3}>1378,00 kr</Heading>\n              </GroupWrapper>\n              <GroupWrapper>\n                  <Button type={'button'} surface={'secondary'} children={'Hämta inköpslista'} iconRight={{icon:'icon-layers'}} rounded onClick={()=>{}}/>\n                  <Button type={'button'} surface={'secondary'} children={'Senaste order'} iconRight={{icon:'icon-package'}} rounded onClick={()=>{}}/>\n              </GroupWrapper>\n              <CartProductList>\n                  { header.cartSidebar?.children?.map( (product: ICartProduct) => <CartProduct key={Math.random()} {...product}></CartProduct>) }\n              </CartProductList>\n              <GroupWrapper>\n                  <LinkButton surface={'primary'} isExternal={true} href={'?path=/story/design-system-organisms-cart--cart-story'}>Go to cart</LinkButton>\n              <FormGroup label={'Spara som inköpslista'} formElementId={'toggle-save-shopping-list'}>\n                  <ToggleSwitch id={'toggle-save-shopping-list'} onChangeToggle={()=>{}}></ToggleSwitch>\n              </FormGroup>\n              </GroupWrapper>\n          </CartSidebar>\n      </DrawerSidebar>\n      <ContentWrapper>\n        <MaxWidth contentMaxWidth={'wide'}>\n          <ProductDetails {...productDetails} addToCart={addToCart} />\n        </MaxWidth>\n        <MaxWidth contentMaxWidth={'wide'}>\n          <ProductDescription {...productDescription} />\n        </MaxWidth>\n      </ContentWrapper>\n      <Footer {...footer} />\n    </>\n  )\n}\n\nexport { ProductPage }\n"],"names":["ProductPage","header","productDetails","productDescription","addToCart","isOpen","setIsOpen","React","isCartSidebarOpen","setIsCartSidebarOpen","isSearchbarOpen","setIsSearchbarOpen","handleOnClick","onClickCloseCartSidebar","onClickSearchIcon","onClickCartIcon","setSelectedDate","date","console","onClickLogout","_jsxs","_Fragment","_jsx","Header","Wrapper","MenuButton","GridArea","TopNavBar","topNavBar","Logotype","logotype","SearchNavBar","searchNavBar","Below","matches","SearchNavBarLinks","GroupWrapper","IconButton","undefined","Above","UiDatePicker","UiDatePickerStory","args","UserProfileDropdownStory","Tabs","navigationTabs","Navigation","navigation","DrawerSidebar","Heading","Button","CartProductList","_b","_a","product","CartProduct","LinkButton","FormGroup","ToggleSwitch","ContentWrapper","MaxWidth","ProductDetails","ProductDescription","Footer","footer"],"mappings":"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"}