{"version":3,"file":"shopping-list-page.stories-8fedf87a.js","sources":["../../src/design-system/components/templates/shopping-list-page/shopping-list-page.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { Footer, IFooter } from '../../organisms/footer/footer'\nimport { IconButton, Text, Button, UiDatePicker, Heading, LinkButton, ToggleSwitch, MessagePopup, IconLink } from '../../atoms'\nimport { itemsToFilterOn } from '../../atoms/admin-search/admin-search.stories'\nimport { AdminSearch, IResult } from '../../atoms/admin-search/admin-search'\nimport { UiDatePickerStory } from '../../atoms/ui-date-picker/ui-date-picker.stories'\nimport { Below, Above, ContentWrapper, MaxWidth } from '../../layouts'\nimport { SearchNavBarLinks, GroupWrapper, TopNavBar, Logotype, SearchNavBar, UserProfileDropdown, Tabs, Navigation, DrawerSidebar, CartProduct, FormGroup, BoxWrapper, DeliveryDateInfo, InfoSummaryBox, OrderConfirmationDetails } from '../../molecules'\nimport { ICartProduct } from '../../molecules/cart-product/cart-product'\nimport { ScrollableList } from '../../molecules/scrollable-list/scrollable-list'\nimport { UserProfileDropdownStory } from '../../molecules/user-profile-dropdown/user-profile-dropdown.stories'\nimport { Header, CartSidebar, CartProductList } from '../../organisms'\nimport { MessagePopupStory } from '../../atoms/message-popup/message-popup.stories'\nimport { InfoSummaryBoxStory_ShoppingList } from '../../molecules/info-summary-box/info-summary-box.stories'\nimport { OrderConfirmationDetailsStory_Pricing, OrderConfirmationDetailsStory_TotalPayment } from '../../molecules/order-confirmation-details/order-confirmation-details.stories'\nimport { ScrollableListListStory_WithFade_2_products } from '../../molecules/scrollable-list/scrollable-list.stories'\nimport { ButtonProductCardStory } from '../../atoms/button/button.stories'\n\nexport interface IShoppingList {\n  header: any\n  children: React.ReactNode,\n  footer: IFooter\n}\n\nexport default function ShoppingListPage({ header, footer } : IShoppingList) {\n  const [isOpen, setIsOpen] = React.useState(false)\n  const [activeUser, setActiveUser] = React.useState({} as IResult)\n  const [isAdminSearchbarOpen, setIsAdminSearchbarOpen] = React.useState<boolean>(false)\n  const [query, setQuery] = React.useState<string>('')\n  const [adminSearchResults, setAdminSearchResults] = React.useState<Array<any>>([])\n  const [isCartSidebarOpen, setIsCartSidebarOpen] = React.useState(false)\n  const [isSearchbarOpen, setIsSearchbarOpen] = React.useState(false)\n  const handleOnClick = () => setIsOpen(!isOpen)\n  const onClickCloseCartSidebar = () => setIsCartSidebarOpen(false)\n  const onClickSearchIcon = () => setIsSearchbarOpen(!isSearchbarOpen)\n  const onClickCartIcon = () => setIsCartSidebarOpen(true)\n  const setSelectedDate = (date:Date) => { console.log(`Trigger set delivery day - ${date.toISOString().split('T')[0]}`)}\n  const onClickLogout = () => { console.log('Handle logout...')}\n  const onClickSearchButton = () => {console.log('Handle search button click')}\n  const onClickSearchResultItem = (customer:IResult) => {setActiveUser(customer)}\n  const [isMessagePopupOpen, setIsMessagePopupOpen] = React.useState(true)\n\n  useEffect(() => {\n    let pattern = new RegExp(query.toLowerCase(), 'i')\n    setAdminSearchResults(itemsToFilterOn.filter((item) => query && (\n      (item.name && pattern.test(item.name.toLowerCase())) ||\n      (item.companyName && pattern.test(item.companyName.toLowerCase())) ||\n      (item.companyId && pattern.test(item.companyId.toString().toLowerCase())) ||\n      (item.email && pattern.test(item.email.toLowerCase()))\n      )))\n  }, [query]);\n\n  return (\n    <>\n    <Header isOpen={isOpen}>\n      {({ Wrapper, MenuButton, GridArea }) => (\n        <Wrapper isOpen={isOpen}>\n          {header.isAdmin && header.adminSearch && header.adminNavLinks && \n          <>\n            <GridArea area=\"adminSearch\">\n                <AdminSearch\n                  {...header.adminSearch}\n                  query={query}\n                  setQuery={setQuery}\n                  results={adminSearchResults}\n                  onClick={onClickSearchButton}\n                  onClickSearchResult={onClickSearchResultItem}\n                  isOpen={isAdminSearchbarOpen}\n                  setIsOpen={setIsAdminSearchbarOpen}\n                />\n              </GridArea>             \n              <GridArea area=\"adminNavLinks\">\n                <SearchNavBarLinks>\n                  <GroupWrapper position='apart'>\n                    <Below breakpoint=\"lg\">{(matches: any) => matches && <>\n                      { activeUser?.name &&  <IconButton icon={'icon-user'} isLink={false} linkComponent={undefined} onClick={()=>{}} size='large' isTransparent></IconButton>}\n                      <IconButton icon={'icon-settings'} isLink={false} linkComponent={undefined} onClick={()=>{}} size='large' isTransparent></IconButton>\n                    </>}\n                    </Below>\n                    <Above breakpoint=\"lg\">{(matches: any) => matches && <>\n                        { activeUser?.name && <Button type={'button'} surface={'secondary'} children={activeUser.name} iconRight={{icon:'icon-user'}} size={'x-small'} rounded onClick={()=>{}}/>}\n                        <Button type={'button'} surface={'primary'} children={'Mitt adminkonto'} iconRight={{icon:'icon-settings'}} size={'x-small'} onClick={()=>{}}/>\n                    </>}</Above>\n                  </GroupWrapper>\n                </SearchNavBarLinks>\n              </GridArea>\n            </>}\n            <GridArea area=\"top\">\n              <TopNavBar {...header.topNavBar} onClick={onClickLogout} onSelectDate={setSelectedDate} isAdmin={header.isAdmin} hasActiveUser={activeUser?.name && activeUser?.name.length>0}/>\n            </GridArea>\n            <GridArea area=\"logo\">\n              <Logotype {...header.logotype} />\n            </GridArea>  \n            <GridArea area=\"search\">\n              <SearchNavBar {...header.searchNavBar} isOpen={isSearchbarOpen}/>\n            </GridArea>\n            {header.searchNavLinks && <GridArea area=\"searchNavLinks\">\n              <Below breakpoint=\"lg\">{(matches: any) => matches && \n                  <SearchNavBarLinks>\n                    <GroupWrapper position='apart' align='center'>\n                      <IconButton icon={isSearchbarOpen ? 'icon-x' : 'icon-search'} isLink={false} linkComponent={undefined} size='large' isTransparent onClick={onClickSearchIcon ? ()=>onClickSearchIcon() : ()=>{}}></IconButton>\n                      <IconButton icon={'icon-heart'} isLink={false} linkComponent={undefined} size='large' isTransparent></IconButton>\n                      <IconButton icon={'icon-shopping-cart'} isLink={false} linkComponent={undefined} onClick={onClickCartIcon ? ()=>onClickCartIcon() : ()=>{}} size='large' isTransparent></IconButton>\n                    </GroupWrapper>\n                  </SearchNavBarLinks>}\n                </Below>\n                <Above breakpoint=\"lg\">{(matches: any) => matches && \n                  <SearchNavBarLinks>\n                    <GroupWrapper position='apart' align='center'>\n                    <IconButton icon={'icon-heart'} isLink={false} linkComponent={undefined} size='medium' isTransparent></IconButton>\n                    <IconButton icon={'icon-shopping-cart'} isLink={false} linkComponent={undefined} onClick={onClickCartIcon ? ()=>onClickCartIcon() : ()=>{}} size='medium' isTransparent></IconButton>\n                    </GroupWrapper>\n                    <GroupWrapper position='apart'>\n                        <UiDatePicker {...UiDatePickerStory.args} onDateSelected={setSelectedDate}></UiDatePicker>\n                        <UserProfileDropdown  {...UserProfileDropdownStory.args}></UserProfileDropdown>\n                    </GroupWrapper>\n                  </SearchNavBarLinks>}\n                </Above>\n            </GridArea>\n            }\n            <GridArea area=\"btn\">\n              <MenuButton onClick={handleOnClick} />\n            </GridArea>\n            <GridArea area=\"nav\">\n              <Below breakpoint=\"lg\">{(matches: any) => matches &&  <>\n                {header.isLoggedIn \n                  ? \n                  <Tabs {...header.navigationTabs} isOpen={isOpen}></Tabs>\n                :\n                  <Navigation {...header.navigation} isOpen={isOpen} />\n                }\n              </>}</Below>\n              <Above breakpoint=\"lg\">{(matches: any) => matches && <Navigation {...header.navigation} isOpen={isOpen} />}</Above>\n            </GridArea>\n          </Wrapper>\n        )}\n      </Header>\n      <DrawerSidebar onClose={onClickCloseCartSidebar} isOpen={isCartSidebarOpen}>\n          <CartSidebar classNames={['light']}>\n              <GroupWrapper position='apart'>\n                  <Heading order={3}>Kundvagn</Heading>\n                  <Heading order={3}>1378,00 kr</Heading>\n              </GroupWrapper>\n              <GroupWrapper>\n                  <Button type={'button'} surface={'secondary'} children={'Hämta inköpslista'} iconRight={{icon:'icon-layers'}} rounded onClick={()=>{}}/>\n                  <Button type={'button'} surface={'secondary'} children={'Senaste order'} iconRight={{icon:'icon-package'}} rounded onClick={()=>{}}/>\n              </GroupWrapper>\n              <CartProductList>\n                  { header.cartSidebar?.children?.map( (product: ICartProduct) => <CartProduct key={Math.random()} {...product}></CartProduct>) }\n              </CartProductList>\n              <GroupWrapper>\n                  <LinkButton surface={'primary'} isExternal={true} href={'?path=/story/design-system-organisms-cart--cart-story'}>Go to cart</LinkButton>\n              <FormGroup label={'Spara som inköpslista'} formElementId={'toggle-save-shopping-list'}>\n                  <ToggleSwitch id={'toggle-save-shopping-list'} onChangeToggle={()=>{}}></ToggleSwitch>\n              </FormGroup>\n              </GroupWrapper>\n          </CartSidebar>\n      </DrawerSidebar>\n      <ContentWrapper>\n        <MaxWidth contentMaxWidth={'narrow'}>\n          <BoxWrapper spacing={'xl'}>\n            <Heading order={3}>Vårfesten</Heading>\n            <Text>Senast sparad:</Text>\n            <DeliveryDateInfo dateLabel={'2022-06-10'}/>\n            <MessagePopup isOpen={isMessagePopupOpen} onClose={()=>setIsMessagePopupOpen(!isMessagePopupOpen)} {...MessagePopupStory.args} icon={'icon-info'} arrowPosition='center'></MessagePopup>\n            <InfoSummaryBox {...InfoSummaryBoxStory_ShoppingList.args}/>\n            <Heading order={4} align='center'>Populära produkter som vi tror passar dig</Heading>\n            <ScrollableList {...ScrollableListListStory_WithFade_2_products.args}>{ScrollableListListStory_WithFade_2_products.args.children}</ScrollableList> \n            <IconLink icon={'icon-plus'} href={'/to-somewhere'} isExternal={true} linkComponent={'a'}>Visa alla rekommenderade produkter</IconLink>\n            <OrderConfirmationDetails {...OrderConfirmationDetailsStory_Pricing.args} withBackground></OrderConfirmationDetails>\n            <OrderConfirmationDetails {...OrderConfirmationDetailsStory_TotalPayment.args} withBackground={false}></OrderConfirmationDetails>\n            <Button {...ButtonProductCardStory.args} type={'button'} surface={'primary'} size='small'></Button>\n          </BoxWrapper>\n        </MaxWidth>\n      </ContentWrapper>\n      <Footer {...footer} />\n    </>\n  )\n}\n\nexport { ShoppingListPage }\n\n"],"names":["ShoppingListPage","header","isOpen","setIsOpen","React","activeUser","setActiveUser","isAdminSearchbarOpen","setIsAdminSearchbarOpen","query","setQuery","adminSearchResults","setAdminSearchResults","isCartSidebarOpen","setIsCartSidebarOpen","isSearchbarOpen","setIsSearchbarOpen","handleOnClick","onClickCloseCartSidebar","onClickSearchIcon","onClickCartIcon","setSelectedDate","date","console","onClickLogout","onClickSearchButton","onClickSearchResultItem","customer","isMessagePopupOpen","setIsMessagePopupOpen","useEffect","pattern","_jsxs","_Fragment","_jsx","Header","Wrapper","MenuButton","GridArea","AdminSearch","adminSearch","SearchNavBarLinks","GroupWrapper","Below","matches","IconButton","undefined","Above","Button","name","TopNavBar","topNavBar","isAdmin","Logotype","logotype","SearchNavBar","searchNavBar","UiDatePicker","UiDatePickerStory","args","UserProfileDropdownStory","Tabs","navigationTabs","navigation","Navigation","DrawerSidebar","Heading","CartProductList","_b","_a","product","CartProduct","LinkButton","FormGroup","ToggleSwitch","ContentWrapper","MaxWidth","BoxWrapper","Text","DeliveryDateInfo","MessagePopup","MessagePopupStory","InfoSummaryBox","InfoSummaryBoxStory_ShoppingList","ScrollableList","ScrollableListListStory_WithFade_2_products","children","OrderConfirmationDetails","OrderConfirmationDetailsStory_Pricing","OrderConfirmationDetailsStory_TotalPayment","ButtonProductCardStory","Footer","footer"],"mappings":"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"}