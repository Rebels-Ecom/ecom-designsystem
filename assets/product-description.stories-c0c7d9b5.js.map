{"version":3,"file":"product-description.stories-c0c7d9b5.js","sources":["../../src/design-system/components/organisms/product-description/product-description.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport styles from './product-description.module.css'\nimport { Button } from '../../atoms/button/button'\nimport { IProductDetail } from '../product-details/product-details'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport cx from 'classnames'\nimport { IIcon, Icon, TIcon } from '../../atoms/icon/icon'\n\nexport interface IProductDescriptionItem {\n  id: string\n  btnLabel: string\n  btnIcon: TIcon\n  onClick?: CallableFunction\n  descriptionContent?: IProductDetail\n}\n\nexport interface IProductDescription {\n  productDescriptionItems: Array<IProductDescriptionItem>\n}\n\nconst contentBoxAnimation = {\n  key: 'contentAnimation',\n  initial: { y: '-90%', opacity: 0 },\n  animate: { y: 0, opacity: 1, zIndex: 1 },\n  transition: { duration: 0.5, ease: 'easeOut' },\n  exit: { y: '-90%', opacity: 0, transition: { duration: 0.5 } },\n}\n\nfunction ProductDescription({ productDescriptionItems }: IProductDescription) {\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n  const [currentTab, setCurrentTab] = useState('')\n\n  const handleTabClick = (e: React.MouseEvent<HTMLButtonElement>, onClick?: CallableFunction) => {\n    if (onClick) {\n      setIsOpen(false)\n      setCurrentTab(e.currentTarget.id)\n      onClick()\n    } else if (currentTab === e.currentTarget.id) {\n      setIsOpen(false)\n      setCurrentTab('')\n    } else {\n      setIsOpen(true)\n      setCurrentTab(e.currentTarget.id)\n    }\n  }\n\n  return (\n    <div className={styles.productDescription}>\n      <div className={styles.buttonsWrapper}>\n        {productDescriptionItems.map((item, i) => (\n          <Button\n            key={i}\n            id={item.id}\n            className={cx(styles.btn, currentTab === `${item.id}` && styles.active)}\n            iconRight={{ icon: item.btnIcon }}\n            onClick={(e) => handleTabClick(e, item.onClick && item.onClick)}\n            type={'button'}\n            surface={'secondary'}\n            size={'large'}\n            rounded\n          >\n            {item.btnLabel}\n          </Button>\n        ))}\n      </div>\n      <ul className={styles.contentOuterWrapper}>\n        {productDescriptionItems.map((item, i) => (\n          <li key={i}>\n            <AnimatePresence>\n              {item.descriptionContent && isOpen && (\n                <motion.div className={styles.contentWrapper} {...contentBoxAnimation}>\n                  {currentTab === `${item.id}` && (\n                    <div className={styles.content}>\n                      {item.descriptionContent?.invisibleDescription && <p className={styles.description}> {item.descriptionContent.invisibleDescription}</p>}\n                      {Array.isArray(item.descriptionContent.invisibleSpecs) &&\n                        item.descriptionContent.invisibleSpecs.length > 0 &&\n                        item.descriptionContent.invisibleSpecs.map((spec, index) => (\n                          <p key={index} className={cx(styles.specsText, 'bodyS')}>\n                            <span className={styles.specTitle}>{spec.name}</span>\n                            {` : ${spec.value}`}\n                          </p>\n                        ))}\n                    </div>\n                  )}\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport { ProductDescription }\n"],"names":["contentBoxAnimation","ProductDescription","productDescriptionItems","isOpen","setIsOpen","useState","currentTab","setCurrentTab","handleTabClick","e","onClick","_jsxs","styles","productDescription","buttonsWrapper","item","id","btnIcon","btnLabel","_jsx","contentOuterWrapper","AnimatePresence","motion","contentWrapper","content","description","spec","index","cx","specTitle","name","i"],"mappings":"uqBAoBAA,EAAA,CAA4B,IAAA,mBACrB,QAAA,CACI,EAAA,OAAK,QAAA,CAAiB,EAAE,QAAA,CACxB,EAAA,EAAK,QAAA,EAAY,OAAA,CAAW,EAAE,WAAA,CAC3B,SAAA,GAAY,KAAA,SAAW,EAAU,KAAA,CACvC,EAAA,OAAK,QAAA,EAAiB,WAAA,CAAe,SAAA,EAAY,CAAI,CAC7D,EAEA,SAAAC,EAAA,CAA4B,wBAAAC,CAA+C,EAAA,CACzE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,EAAA,EAEAG,EAAA,CAAAC,EAAAC,IAAA,CACEA,GACEN,EAAAA,EAAAA,EACAG,EAAAA,EAAAA,cAAAA,EAAAA,EACAG,KAAQJ,IAAAG,EAAA,cAAA,IAERL,EAAAA,EAAAA,EACAG,EAAAA,EAAAA,IAEAH,EAAAA,EAAAA,EACAG,EAAAA,EAAAA,cAAAA,EAAAA,EACF,EAGF,OAAAI,EAAA,MAAA,CACE,UAAAC,EAAA,mBAAuBC,SAAAA,CAAAA,EAAAA,MAAAA,CACrB,UAAAD,EAAA,eAAuBE,SAAAA,EAAAA,IAAAA,CAAAA,EAAAA,IAAAA,EAAAA,EAAAA,CAEZ,GAAAC,EAAA,GAEIC,UAAAA,EAAAA,EAAAA,IAAAA,IAAAA,GAAAA,EAAAA,MAAAA,EAAAA,MAAAA,EAC6D,UAAA,CAC3D,KAAAD,EAAA,OAAaE,EAAQ,QAAAR,GAAAD,EAAAC,EAAAM,EAAA,SAAAA,EAAA,OAAA,EAC8B,KAAA,SACxD,QAAA,YACG,KAAA,QACH,QAAA,GACC,SAAAA,EAAA,QAEDG,EAAAA,CAAAA,CAAAA,CAET,CAAA,EAAAC,EAAA,KAAA,CAEH,UAAAP,EAAA,oBAAsBQ,SAAAA,EAAAA,IAAAA,CAAAA,EAAAA,IAAAA,OAAAA,OAAAA,EAAAA,KAAAA,CAElB,SAAAD,EAAAE,EAAA,CACkB,SAAAN,EAAA,oBAAAZ,GAAAgB,EAAAG,EAAA,IAAA,CAED,UAAAV,EAAA,eAAmBW,GAAAA,EAAoBvB,SAAAA,IAAAA,GAAAA,EAAAA,MAAAA,EAAAA,MAAAA,CAE9C,UAAAY,EAAA,QAAuBY,SAAAA,GAAAA,EAAAA,EAAAA,qBAAAA,YAAAA,EAAAA,uBAAAA,EAAAA,IAAAA,CAC6B,UAAAZ,EAAA,YAAqBa,SAAAA,CAAAA,IAAAA,EAAAA,mBAAAA,oBAAAA,CAA2D,CAAA,EAAA,MAAA,QAAAV,EAAA,mBAAA,cAAA,GAAAA,EAAA,mBAAA,eAAA,OAAA,GAAAA,EAAA,mBAAA,eAAA,IAAA,CAAAW,EAAAC,IAAAhB,EAAA,IAAA,CAI9H,UAAAiB,EAAAhB,EAAA,UAAA,OAAA,EAAsD,SAAA,CAAAO,EAAA,OAAA,CACpD,UAAAP,EAAA,UAAwBiB,SAAAA,EAAAA,IAAiBC,CAAAA,EAAAA,MAAAA,EAAAA,OAAAA,CACtB,EAAAH,CAAA,CAAA,CAAA,CAErB,CAAA,CACD,CAAA,CAEG,CAAA,CAEC,EAAAI,CAAA,EAAA,CAEpB,CAAA,CAAA,CACE,CAAA,CAGX;;;;;"}