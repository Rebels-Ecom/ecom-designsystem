{"version":3,"file":"heading-1b9cc643.js","sources":["../../src/design-system/components/atoms/heading/heading.tsx"],"sourcesContent":["import React, { useMemo } from 'react'\nimport styles from './heading.module.css'\nimport cx from 'classnames'\n\nexport type THeadingAlignment = 'left' | 'center' | 'right'\nexport type TOrder = 1 | 2 | 3 | 4 | 5\n\nexport interface IHeading {\n  children: string\n  order: TOrder\n  align?: THeadingAlignment\n  noMargin?: boolean\n  className?: string\n  /**\n   * Sets the margin prop in rem\n   * Takes either a single number, e.g. 1 or an array of numbers, e.g. [1, 0] or [1, 0, 0, 1] (top, right, bottom, left)\n   * TODO: maybe remove this property after a proper design has been applied for our headings?\n   * @default '0'\n  */\n  margin?: Array<number> | number;\n  color?: 'error'; // TODO: add more options if needed\n}\n\nfunction getHeadingSize(size: TOrder) {\n  switch (size) {\n    case 1:\n      return 'h1'\n    case 2:\n      return 'h2'\n    case 3:\n      return 'h3'\n    case 4:\n      return 'h4'\n    case 5:\n    default:\n      return 'h5'\n  }\n}\n\nfunction getHeadingAlignment(alignment: THeadingAlignment) {\n  switch (alignment) {\n    case 'left':\n      return 'leftAlignment'\n    case 'right':\n      return 'rightAlignment'\n    case 'center':\n    default:\n      return 'centerAlignment'\n  }\n}\n\nfunction Heading({ children, order = 3, align = 'left', noMargin, className = '', margin, color }: IHeading) {\n  const marginValue = useMemo(() => {\n    if (!margin && margin !== 0) {\n      return \"\";\n    }\n\n    if (typeof margin === \"number\") {\n      return `${margin}rem`;\n    }\n\n    return margin.map(p => `${p}rem`).join(' ');\n\n  }, [margin]);\n\n  const Tag  = getHeadingSize(order);\n\n  return (\n    <Tag\n      className={cx(\n        styles.heading,\n        styles[getHeadingAlignment(align)],\n        getHeadingSize(order),\n        {\n          [styles.noMargin]: noMargin,\n          [styles[color ?? '']]: color\n        },\n        className\n      )}\n      style={{ margin: marginValue }}\n    >\n      {children}\n    </Tag>\n  )\n}\n\nexport { Heading }\n"],"names":["getHeadingSize","size","getHeadingAlignment","alignment","Heading","children","align","noMargin","margin","marginValue","useMemo","p","Tag","order","_jsx","cx","styles","color"],"mappings":"0WAuBA,SAAAA,EAAAC,EAAA,CACE,OAAAA,EAAA,CAAY,IAAA,GAER,MAAA,KAAO,IAAA,GAEP,MAAA,KAAO,IAAA,GAEP,MAAA,KAAO,IAAA,GAEP,MAAA,KAAO,IAAA,GACJ,QAEH,MAAA,IAAO,CAEb,CAEA,SAAAC,EAAAC,EAAA,CACE,OAAAA,EAAA,CAAiB,IAAA,OAEb,MAAA,gBAAO,IAAA,QAEP,MAAA,iBAAO,IAAA,SACJ,QAEH,MAAA,iBAAO,CAEb,CAEA,SAAAC,EAAA,CAAiB,SAAAC,EAAEA,MAAAA,EAAAA,EAAkB,MAAAC,EAAA,OAAW,SAAAC,EAAQA,UAAAA,EAAAA,GAAsB,OAAAC,EAAIA,MAAAA,CAAwB,EAAA,CACxG,MAAAC,EAAAC,EAAAA,QAAA,IACE,CAAAF,GAAAA,IAAA,EACE,GAGF,OAAAA,GAAA,SACE,GAAAA,OAGFA,EAAA,IAAAG,GAAA,GAAAA,MAAA,EAAA,KAAA,GAAA,EAA0C,CAAAH,CAAA,CAAA,EAI5CI,EAAAZ,EAAAa,CAAA,EAEA,OAAAC,EAAAF,EAAA,CACM,UAAAG,EAAAC,EAAA,QAAAA,EAAAd,EAAAI,CAAA,CAAA,EAAAN,EAAAa,CAAA,EAAA,CAKA,CAAAG,EAAA,QAAA,EAAAT,EACqBA,CAAAA,EAAAA,GAAAA,EAAAA,CAAAA,EAAAA,CACIU,EAAAA,CAAAA,EAG3B,MAAA,CACO,OAAAR,CAAUA,EAAY,SAAAJ,CAAEA,CAAAA,CAKrC;;"}