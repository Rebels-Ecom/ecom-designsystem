{"version":3,"file":"radio-button-group.stories-2e0bbe66.js","sources":["../../src/design-system/components/molecules/radio-button-group/radio-button-group.tsx","../../src/design-system/components/molecules/radio-button-group/radio-button-group.stories.tsx"],"sourcesContent":["import cx from 'classnames'\r\nimport { RadioButton, IRadioButton } from '../../atoms/inputs/radio-button/radio-button'\r\nimport styles from './radio-button-group.module.css'\r\n\r\nexport type TypeInputs = {\r\n  label: string\r\n} & IRadioButton\r\n\r\ntype TAlign = 'horizontal' | 'vertical'\r\n\r\nexport interface IRadioButtonGroup {\r\n  className?: string\r\n  classNameHeading?: string\r\n  classNameList?: string\r\n  classNameListItem?: string\r\n  classNameLabel?: string\r\n  classNameRadio?: string\r\n  classNameRadioWrapper?: string\r\n  inputs: TypeInputs[]\r\n  align?: TAlign\r\n}\r\n\r\nconst RadioButtonGroup = ({\r\n  className,\r\n  classNameList,\r\n  classNameListItem,\r\n  classNameLabel,\r\n  classNameRadio,\r\n  classNameRadioWrapper,\r\n  inputs,\r\n  align = 'horizontal',\r\n}: IRadioButtonGroup) => {\r\n  return (\r\n    <div className={cx(className)}>\r\n      <ul className={classNameList ? cx(classNameList) : cx(styles.defaultStyleList, styles[align])}>\r\n        {inputs.map((input) => (\r\n          <li key={input.id} className={cx(classNameListItem ? classNameListItem : styles.defaultStyleListItem)}>\r\n            <div className={cx(classNameRadioWrapper ? classNameRadioWrapper : styles.defaultStyleRadioWrapper)}>\r\n              <RadioButton key={input.id} {...input} className={classNameRadio ? classNameRadio : styles.defaultStyleRadio} />\r\n              <label className={cx('body', classNameLabel ? classNameLabel : styles.defaultStyleLabel, input.disabled && styles.disabled)} htmlFor={input.id}>\r\n                {input.label}\r\n              </label>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { RadioButtonGroup }\r\n","import React, { useState } from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { RadioButtonGroup, TypeInputs } from './radio-button-group';\nimport { RadioButtonStory } from '../../atoms/inputs/radio-button/radio-button.stories';\nexport default ({\n  title: 'Design System/Molecules/RadioButtonGroup',\n  component: RadioButtonGroup\n} as ComponentMeta<typeof RadioButtonGroup>);\nconst Template: ComponentStory<typeof RadioButtonGroup> = args => {\n  const [radioBtnsGroupOne, setRadioBtnsGroupOne] = useState<Array<TypeInputs>>(args.inputs.map((radioBtn: any) => {\n    return {\n      ...radioBtn,\n      onChange: onChangeRadioGroupOne\n    };\n  }));\n  function onChangeRadioGroupOne(e: React.FormEvent<HTMLInputElement>) {\n    const value = e.currentTarget.value;\n    setRadioBtnsGroupOne((prevRadios: Array<TypeInputs>) => {\n      return prevRadios.map((radio: TypeInputs) => {\n        return {\n          ...radio,\n          checked: radio.value === value ? true : false\n        };\n      });\n    });\n  }\n  return <>\n      <div style={{\n      margin: '0 0 2rem 0',\n      maxWidth: '616px'\n    }}>\n        <RadioButtonGroup inputs={radioBtnsGroupOne} align={args.align} />\n      </div>\n    </>;\n};\nexport const RadioButtonGroupStory = Template.bind({});\nRadioButtonGroupStory.storyName = 'Radio Button Group';\nRadioButtonGroupStory.args = {\n  inputs: [{\n    ...RadioButtonStory.args,\n    label: 'Liten popcorn'\n  }, {\n    ...RadioButtonStory.args,\n    id: `${RadioButtonStory.args.id}_2`,\n    value: `${RadioButtonStory.args.value}_2`,\n    checked: false,\n    label: 'Mellan popcorn'\n  }]\n};\nexport const RadioButtonGroupStoryError = Template.bind({});\nRadioButtonGroupStoryError.storyName = 'Radio Button Group Error';\nRadioButtonGroupStoryError.args = {\n  inputs: [{\n    ...RadioButtonStory.args,\n    label: 'Liten popcorn',\n    isErroneous: true\n  }, {\n    ...RadioButtonStory.args,\n    id: `${RadioButtonStory.args.id}_2`,\n    value: `${RadioButtonStory.args.value}_2`,\n    checked: false,\n    label: 'Mellan popcorn',\n    isErroneous: true\n  }]\n};\nexport const RadioButtonGroupStoryDisabled = Template.bind({});\nRadioButtonGroupStoryDisabled.storyName = 'Radio Button Group Disabled';\nRadioButtonGroupStoryDisabled.args = {\n  inputs: [{\n    ...RadioButtonStory.args,\n    label: 'Liten popcorn',\n    disabled: true\n  }, {\n    ...RadioButtonStory.args,\n    id: `${RadioButtonStory.args.id}_2`,\n    value: `${RadioButtonStory.args.value}_2`,\n    checked: false,\n    label: 'Mellan popcorn',\n    disabled: true\n  }]\n};\nRadioButtonGroupStory.parameters = {\n  ...RadioButtonGroupStory.parameters,\n  docs: {\n    ...RadioButtonGroupStory.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  const [radioBtnsGroupOne, setRadioBtnsGroupOne] = useState<Array<TypeInputs>>(args.inputs.map((radioBtn: any) => {\\n    return {\\n      ...radioBtn,\\n      onChange: onChangeRadioGroupOne\\n    };\\n  }));\\n  function onChangeRadioGroupOne(e: React.FormEvent<HTMLInputElement>) {\\n    const value = e.currentTarget.value;\\n    setRadioBtnsGroupOne((prevRadios: Array<TypeInputs>) => {\\n      return prevRadios.map((radio: TypeInputs) => {\\n        return {\\n          ...radio,\\n          checked: radio.value === value ? true : false\\n        };\\n      });\\n    });\\n  }\\n  return <>\\n      <div style={{\\n      margin: '0 0 2rem 0',\\n      maxWidth: '616px'\\n    }}>\\n        <RadioButtonGroup inputs={radioBtnsGroupOne} align={args.align} />\\n      </div>\\n    </>;\\n}\",\n      ...RadioButtonGroupStory.parameters?.docs?.source\n    }\n  }\n};\nRadioButtonGroupStoryError.parameters = {\n  ...RadioButtonGroupStoryError.parameters,\n  docs: {\n    ...RadioButtonGroupStoryError.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  const [radioBtnsGroupOne, setRadioBtnsGroupOne] = useState<Array<TypeInputs>>(args.inputs.map((radioBtn: any) => {\\n    return {\\n      ...radioBtn,\\n      onChange: onChangeRadioGroupOne\\n    };\\n  }));\\n  function onChangeRadioGroupOne(e: React.FormEvent<HTMLInputElement>) {\\n    const value = e.currentTarget.value;\\n    setRadioBtnsGroupOne((prevRadios: Array<TypeInputs>) => {\\n      return prevRadios.map((radio: TypeInputs) => {\\n        return {\\n          ...radio,\\n          checked: radio.value === value ? true : false\\n        };\\n      });\\n    });\\n  }\\n  return <>\\n      <div style={{\\n      margin: '0 0 2rem 0',\\n      maxWidth: '616px'\\n    }}>\\n        <RadioButtonGroup inputs={radioBtnsGroupOne} align={args.align} />\\n      </div>\\n    </>;\\n}\",\n      ...RadioButtonGroupStoryError.parameters?.docs?.source\n    }\n  }\n};\nRadioButtonGroupStoryDisabled.parameters = {\n  ...RadioButtonGroupStoryDisabled.parameters,\n  docs: {\n    ...RadioButtonGroupStoryDisabled.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  const [radioBtnsGroupOne, setRadioBtnsGroupOne] = useState<Array<TypeInputs>>(args.inputs.map((radioBtn: any) => {\\n    return {\\n      ...radioBtn,\\n      onChange: onChangeRadioGroupOne\\n    };\\n  }));\\n  function onChangeRadioGroupOne(e: React.FormEvent<HTMLInputElement>) {\\n    const value = e.currentTarget.value;\\n    setRadioBtnsGroupOne((prevRadios: Array<TypeInputs>) => {\\n      return prevRadios.map((radio: TypeInputs) => {\\n        return {\\n          ...radio,\\n          checked: radio.value === value ? true : false\\n        };\\n      });\\n    });\\n  }\\n  return <>\\n      <div style={{\\n      margin: '0 0 2rem 0',\\n      maxWidth: '616px'\\n    }}>\\n        <RadioButtonGroup inputs={radioBtnsGroupOne} align={args.align} />\\n      </div>\\n    </>;\\n}\",\n      ...RadioButtonGroupStoryDisabled.parameters?.docs?.source\n    }\n  }\n};"],"names":["RadioButtonGroup","className","classNameList","classNameListItem","classNameLabel","classNameRadio","classNameRadioWrapper","inputs","_jsx","cx","styles","align","input","_jsxs","RadioButton","defaultStyleRadio","id","label","radioButtonGroup_stories","title","component","Template","args","radioBtnsGroupOne","setRadioBtnsGroupOne","useState","map","radioBtn","onChange","onChangeRadioGroupOne","e","value","currentTarget","prevRadios","radio","checked","_Fragment","children","style","margin","maxWidth","RadioButtonGroupStory","bind","storyName","RadioButtonStory","RadioButtonGroupStoryError","isErroneous","RadioButtonGroupStoryDisabled","disabled","parameters","docs","source","originalSource"],"mappings":"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"}