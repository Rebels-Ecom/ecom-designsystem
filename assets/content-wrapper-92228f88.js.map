{"version":3,"file":"content-wrapper-92228f88.js","sources":["../../src/design-system/components/layouts/content-wrapper/content-wrapper.tsx"],"sourcesContent":["import { PropsWithChildren, useMemo } from 'react';\nimport styles from './content-wrapper.module.css'\nimport cx from 'classnames';\n\ntype TContentWrapper = {\n  /**\n   * Sets the padding prop in rem\n   * Takes either a single number, e.g. 1 or an array of numbers, e.g. [1, 0] or [1, 0, 0, 1] (top, right, bottom, left)\n   * @default '0'\n  */\n  padding?: Array<number> | number;\n}\n\n// TODO: rename to ResponsiveWrapper?\nconst ContentWrapper = ({ padding = 0, children, ...props}: PropsWithChildren<TContentWrapper>) => {\n    const paddingValue = useMemo(() => {\n        if (!padding && padding !== 0) {\n          return \"\";\n        }\n    \n        if (typeof padding === \"number\") {\n          return `${padding}rem`;\n        }\n    \n        return padding.map(p => `${p}rem`).join(' ');\n\n      }, [padding]);\n\n    return(\n        <div className={cx(styles.contentWrapper)} style={{ padding: paddingValue}}>\n            {children}\n        </div>\n    )\n}\n\nexport { ContentWrapper }"],"names":["ContentWrapper","padding","children","paddingValue","useMemo","p","_jsx","cx","styles"],"mappings":"qLAcAA,EAAA,CAAA,CAAwB,QAAAC,EAAA,EAAY,SAAAC,EAAGA,GAAAA,CAAsD,IAAA,CACzF,MAAAC,EAAAC,EAAAA,QAAA,IACI,CAAAH,GAAAA,IAAA,EACE,GAGF,OAAAA,GAAA,SACE,GAAAA,OAGFA,EAAA,IAAAI,GAAA,GAAAA,MAAA,EAAA,KAAA,GAAA,EAA2C,CAAAJ,CAAA,CAAA,EAI/C,OAAAK,EAAA,MAAA,CACI,UAAAC,EAAAC,EAAA,cAAA,EAAwC,MAAA,CAAU,QAAAL,CAAWA,EAAY,SAAAD,CAAEA,CAAAA,CAInF;"}