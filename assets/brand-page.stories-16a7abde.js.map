{"version":3,"file":"brand-page.stories-16a7abde.js","sources":["../../src/design-system/components/templates/brand-page/brand-page.tsx","../../src/design-system/components/templates/brand-page/brand-page.stories.tsx"],"sourcesContent":["import React from 'react'\nimport { Navigation } from '../../molecules/navigation/navigation'\nimport { Header } from '../../organisms'\nimport { Logotype, NavLinks, SearchNavBar, TopNavBar } from '../../molecules'\nimport { IFooter, Footer } from '../../organisms/footer/footer'\nimport { ContentWrapper, MaxWidth } from '../../layouts'\nimport { BlogCard, IBlogCard } from '../../molecules/blog-card/blog-card'\nimport { Hero, IHero } from '../../molecules/hero/hero'\n\nexport interface ICampaign {\n  header: any\n  hero: IHero\n  blogFullwidth: IBlogCard\n  footer: IFooter\n}\n\nconst BrandPage = ({ header, hero, blogFullwidth, footer }: ICampaign) => {\n  const [isOpen, setIsOpen] = React.useState(false)\n  const handleOnClick = () => setIsOpen(!isOpen)\n  return (\n    <>\n      <Header isOpen={isOpen}>\n        {({ Wrapper, Button, GridArea }) => (\n          <Wrapper isOpen={isOpen}>\n            <GridArea area=\"top\">\n              <TopNavBar {...header.topNavBar} />\n            </GridArea>\n            <GridArea area=\"logo\">\n              <Logotype {...header.logotype} />\n            </GridArea>\n            <GridArea area=\"search\">\n              <SearchNavBar {...header.searchNavBar} />\n            </GridArea>\n            <GridArea area=\"searchNavLinks\">\n              <NavLinks />\n            </GridArea>\n            <GridArea area=\"btn\">\n              <Button onClick={handleOnClick} />\n            </GridArea>\n            <GridArea area=\"nav\">\n              <Navigation {...header.navigation} isOpen={isOpen} />\n            </GridArea>\n          </Wrapper>\n        )}\n      </Header>\n      <ContentWrapper>\n        <Hero {...hero} />\n        <MaxWidth contentMaxWidth={'narrow'}>\n          <BlogCard {...blogFullwidth} />\n        </MaxWidth>\n      </ContentWrapper>\n      <Footer {...footer} />\n    </>\n  )\n}\n\nexport { BrandPage }\n","import React from 'react';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { BrandPage } from './brand-page';\nimport { HeaderStory } from '../../organisms/header/header.stories';\nimport { FooterStory } from '../../organisms/footer/footer.stories';\nimport { BlogCardStoryPistonhead } from '../../molecules/blog-card/blog-card.stories';\nimport { HeroStoryPistonhead } from '../../molecules/hero/hero.stories';\nconst meta: Meta<typeof BrandPage> = {\n  title: 'Design System/Templates/BrandPage',\n  component: BrandPage\n};\nexport default meta;\ntype Story = StoryObj<typeof BrandPage>;\nconst BrandPageStoryTemplate: Story = {\n  render: ({\n    ...args\n  }) => <BrandPage {...args} />\n};\nexport const BrandPageTemplateStory = {\n  ...BrandPageStoryTemplate,\n  args: {\n    header: HeaderStory.args,\n    hero: HeroStoryPistonhead.args,\n    blogFullwidth: BlogCardStoryPistonhead.args,\n    footer: FooterStory.args\n  }\n};\nBrandPageTemplateStory.parameters = {\n  ...BrandPageTemplateStory.parameters,\n  docs: {\n    ...BrandPageTemplateStory.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  ...BrandPageStoryTemplate,\\n  args: {\\n    header: HeaderStory.args,\\n    hero: HeroStoryPistonhead.args,\\n    blogFullwidth: BlogCardStoryPistonhead.args,\\n    footer: FooterStory.args\\n  }\\n}\",\n      ...BrandPageTemplateStory.parameters?.docs?.source\n    }\n  }\n};"],"names":["BrandPage","header","hero","blogFullwidth","isOpen","setIsOpen","React","handleOnClick","_jsxs","_Fragment","_jsx","Header","Wrapper","Button","GridArea","TopNavBar","topNavBar","Logotype","logotype","SearchNavBar","searchNavBar","NavLinks","Navigation","navigation","ContentWrapper","Hero","BlogCard","Footer","footer","meta","title","component","BrandPageStoryTemplate","render","args","BrandPageTemplateStory","HeaderStory","HeroStoryPistonhead","BlogCardStoryPistonhead","FooterStory","parameters","docs","source","originalSource"],"mappings":"w2CAgBA,MAAAA,EAAA,CAAA,CAAmB,OAAAC,EAAEA,KAAAA,EAAQC,cAAAA,EAAMC,OAAAA,CAAiC,IAAA,CAClE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACAC,EAAA,IAAAF,EAAA,CAAAD,CAAA,EACA,OAAAI,EAAAC,EAAA,CACE,SAAA,CAAAC,EAAAC,EAAA,CACS,OAAAP,EAACA,SAAAA,CAAAA,CACJ,QAAAQ,EAAEA,OAAAA,EAASC,SAAAA,CAAQC,IAAAA,EAAAA,EAAAA,CACX,OAAAV,EAACA,SAAAA,CAAAA,EAAAA,EAAAA,CACE,KAAA,MAAM,SAAAM,EAAAK,EAAA,CACH,GAAAd,EAAA,SAAYe,CAAAA,CAAS,CAAA,EAAAN,EAAAI,EAAA,CAExB,KAAA,OAAM,SAAAJ,EAAAO,EAAA,CACJ,GAAAhB,EAAA,QAAYiB,CAAAA,CAAQ,CAAA,EAAAR,EAAAI,EAAA,CAEtB,KAAA,SAAM,SAAAJ,EAAAS,EAAA,CACA,GAAAlB,EAAA,YAAYmB,CAAAA,CAAY,CAAA,EAAAV,EAAAI,EAAA,CAE9B,KAAA,iBAAM,SAAAJ,EAAAW,EAAA,EAAA,CACJ,CAAA,EAAAX,EAAAI,EAAA,CAEF,KAAA,MAAM,SAAAJ,EAAAG,EAAA,CACN,QAAAN,CAAUA,CAAAA,CAAc,CAAA,EAAAG,EAAAI,EAAA,CAExB,KAAA,MAAM,SAAAJ,EAAAY,EAAA,CACF,GAAArB,EAAA,WAAYsB,OAAAA,CAAYnB,CAAAA,CAAe,CAAA,CAAA,CACzC,CAAA,CAAA,CAAA,EAAAI,EAAAgB,EAAA,CAIF,SAAA,CAAAd,EAAAe,EAAA,CACR,GAAAvB,CAAKA,CAAAA,EAAAA,EAAAA,EAAAA,CACD,gBAAA,SAAkB,SAAAQ,EAAAgB,EAAA,CAChB,GAAAvB,CAAKA,CAAAA,CAAa,CAAA,CAAA,CAClB,CAAA,EAAAO,EAAAiB,EAAA,CAEN,GAAAC,CAAKA,CAAAA,CAAAA,CAAU,CAAA,CAG5B,qdC/CA,MAAMC,GAA+B,CACnCC,MAAO,oCACPC,UAAW/B,CACb,EAGMgC,EAAgC,CACpCC,OAAQA,CAAC,CACP,GAAGC,CAAAA,MACElC,EAAS,CAAA,GAAKkC,CAAAA,CAAI,CAC3B,EACaC,EAAyB,CACpC,GAAGH,EACHE,KAAM,CACJjC,OAAQmC,EAAYF,KACpBhC,KAAMmC,EAAoBH,KAC1B/B,cAAemC,EAAwBJ,KACvCN,OAAQW,EAAYL,IACtB,CACF,YACAC,EAAuBK,WAAa,CAClC,GAAGL,EAAuBK,WAC1BC,KAAM,CACJ,IAAGN,EAAAA,EAAuBK,aAAvBL,YAAAA,EAAmCM,KACtCC,OAAQ,CACNC,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGR,GAAAA,EAAAA,EAAuBK,aAAvBL,YAAAA,EAAmCM,OAAnCN,YAAAA,EAAyCO,MAC9C,CACF,CACF"}