{"version":3,"file":"select.stories-f741101b.js","sources":["../../src/design-system/components/atoms/select/select.tsx","../../src/design-system/components/atoms/select/select.stories.tsx"],"sourcesContent":["import { forwardRef } from 'react'\r\nimport cx from 'classnames'\r\nimport styles from './select.module.css'\r\nimport { TOther } from '../../../../types/other'\r\nimport { getisErroneousStyle } from '../../../../helpers/form-helper'\r\n\r\nexport interface ISelect {\r\n  id: string\r\n  options: Array<ISelectOption>\r\n  onChange?: CallableFunction\r\n  selectedIndex?: number\r\n  value?: string\r\n  disabled?: boolean\r\n  isErroneous?: boolean\r\n  required?: boolean\r\n  other?: TOther\r\n}\r\n\r\nexport interface ISelectOption {\r\n  name: string\r\n  value: string\r\n}\r\n\r\nconst Select = forwardRef<HTMLSelectElement, ISelect>(\r\n  ({ id, options, onChange, value, selectedIndex, disabled, isErroneous, required, other }: ISelect, ref) => {\r\n    function handleOnChange(e: React.FormEvent<HTMLSelectElement>) {\r\n      if (onChange) {\r\n        onChange(e)\r\n      }\r\n    }\r\n\r\n    function isOptionsPopulated() {\r\n      return options instanceof Array && options.length\r\n    }\r\n\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        {isOptionsPopulated() && (\r\n          <>\r\n            <select\r\n              className={cx('body', styles.select, getisErroneousStyle(styles, isErroneous))}\r\n              onChange={handleOnChange}\r\n              disabled={disabled}\r\n              required={required}\r\n              id={id}\r\n              value={selectedIndex ? options[selectedIndex].value : value}\r\n              ref={ref}\r\n              {...other}\r\n            >\r\n              {options?.map((option: ISelectOption, i: number) => (\r\n                <option key={`option_${i}`} value={option.value}>\r\n                  {option.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <div className={styles.icon} />\r\n          </>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport { Select }\r\n","import React, { useState } from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { Select } from './select';\nexport default ({\n  title: 'Design System/Atoms/Selects',\n  component: Select\n} as ComponentMeta<typeof Select>);\nconst Template: ComponentStory<typeof Select> = args => {\n  const [selectedOptionValue, setSelectedOptionValue] = useState('2');\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(1);\n  function onChangeSelect1(e: React.FormEvent<HTMLSelectElement>) {\n    setSelectedOptionValue(e.currentTarget.value);\n  }\n  function onChangeSelect2(e: React.FormEvent<HTMLSelectElement>) {\n    setSelectedOptionIndex(e.currentTarget.selectedIndex);\n  }\n  return <>\n      <div style={{\n      margin: '0 0 1rem 0',\n      maxWidth: '616px'\n    }}>\n        <Select {...args} onChange={onChangeSelect1} value={selectedOptionValue} id={'select_1'} />\n      </div>\n      <div style={{\n      margin: '0 0 1rem 0',\n      maxWidth: '616px'\n    }}>\n        <Select {...args} onChange={onChangeSelect1} disabled={true} id={'select_2'} />\n      </div>\n      <div style={{\n      margin: '0 0 1rem 0',\n      maxWidth: '616px'\n    }}>\n        <Select {...args} onChange={onChangeSelect2} selectedIndex={selectedOptionIndex} isErroneous id={'select_3'} />\n      </div>\n    </>;\n};\nexport const SelectStory = Template.bind({});\nSelectStory.storyName = 'Select';\nSelectStory.args = {\n  id: 'select',\n  options: [{\n    name: 'VÃ¤lj en film',\n    value: ''\n  }, {\n    name: 'Shrek',\n    value: '1'\n  }, {\n    name: 'Sing',\n    value: '2'\n  }, {\n    name: 'Sing 2',\n    value: '3'\n  }]\n};\nSelectStory.parameters = {\n  ...SelectStory.parameters,\n  docs: {\n    ...SelectStory.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  const [selectedOptionValue, setSelectedOptionValue] = useState('2');\\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(1);\\n  function onChangeSelect1(e: React.FormEvent<HTMLSelectElement>) {\\n    setSelectedOptionValue(e.currentTarget.value);\\n  }\\n  function onChangeSelect2(e: React.FormEvent<HTMLSelectElement>) {\\n    setSelectedOptionIndex(e.currentTarget.selectedIndex);\\n  }\\n  return <>\\n      <div style={{\\n      margin: '0 0 1rem 0',\\n      maxWidth: '616px'\\n    }}>\\n        <Select {...args} onChange={onChangeSelect1} value={selectedOptionValue} id={'select_1'} />\\n      </div>\\n      <div style={{\\n      margin: '0 0 1rem 0',\\n      maxWidth: '616px'\\n    }}>\\n        <Select {...args} onChange={onChangeSelect1} disabled={true} id={'select_2'} />\\n      </div>\\n      <div style={{\\n      margin: '0 0 1rem 0',\\n      maxWidth: '616px'\\n    }}>\\n        <Select {...args} onChange={onChangeSelect2} selectedIndex={selectedOptionIndex} isErroneous id={'select_3'} />\\n      </div>\\n    </>;\\n}\",\n      ...SelectStory.parameters?.docs?.source\n    }\n  }\n};"],"names":["Select","forwardRef","id","options","onChange","value","selectedIndex","disabled","isErroneous","required","ref","handleOnChange","e","isOptionsPopulated","length","_jsx","styles","wrapper","cx","getisErroneousStyle","other","option","name","icon","select_stories","title","component","Template","args","selectedOptionValue","setSelectedOptionValue","useState","selectedOptionIndex","setSelectedOptionIndex","onChangeSelect1","currentTarget","onChangeSelect2","_Fragment","children","style","margin","maxWidth","SelectStory","bind","storyName","parameters","docs","source","originalSource"],"mappings":"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"}