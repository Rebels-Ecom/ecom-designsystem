{"version":3,"file":"user-profile-dropdown.stories-496d1060.js","sources":["../../src/design-system/components/molecules/user-profile-dropdown/user-profile-dropdown-controlled.tsx"],"sourcesContent":["import React, { useRef } from 'react'\nimport styles from './user-profile-dropdown.module.css'\nimport useOnClickOutside from '../../../hooks/useOnClickOutside'\nimport { IconButton } from '../../atoms';\n\nexport interface IUserProfileDropdown {\n    children: React.ReactNode;\n    isDropdownOpen?: boolean;\n    isOpen: boolean;\n    onClick: () => void;\n}\n\n// TODO: delete UserProfileDropdown and use this one instead\nfunction UserProfileDropdownControlled({ children, isOpen, onClick} : IUserProfileDropdown) {\n    const dropdownElement = useRef<HTMLDivElement | null>(null)  \n    const handleClose = () => isOpen ? onClick() : undefined\n    useOnClickOutside({ ref: dropdownElement, onClose: handleClose }) \n\n    return (\n        <div className={styles.userProfileDropdown} ref={dropdownElement}>\n            <IconButton type='button' icon='icon-user' onClick={onClick} size='medium' />\n            {isOpen && <div className={styles.dropdown}>{children}</div>}\n        </div>\n    )\n}\n\nexport { UserProfileDropdownControlled }"],"names":["UserProfileDropdownControlled","children","isOpen","dropdownElement","useRef","useOnClickOutside","onClick","handleClose","_jsxs","styles","userProfileDropdown","_jsx","dropdown"],"mappings":"kcAaA,SAAAA,EAAA,CAAuC,SAAAC,EAAEA,OAAAA,EAAUC,QAAAA,CAAsC,EAAA,CACrF,MAAAC,EAAAC,SAAA,IAAA,EAEAC,OAAAA,EAAAA,CAAkB,IAAAF,EAAOA,QADzB,IAAAD,EAAAI,EAAA,EAAA,MACmDC,CAAAA,EAEnDC,EAAA,MAAA,CACI,UAAAC,EAAA,oBAAuBC,IAAAA,EAA0BP,SAAAA,CAAAA,EAAAA,EAAAA,CAClC,KAAA,SAAM,KAAA,YAAc,QAAAG,EAAYA,KAAAA,QAAuB,CAAA,EAAAJ,GAAAS,EAAA,MAAA,CACvD,UAAAF,EAAA,SAAuBG,SAAAA,CAASX,CAAAA,CAAAA,CAAiB,CAAA,CAGxE;;;;;;;;;;;;"}