{"version":3,"file":"multi-select.stories-47a9ab7d.js","sources":["../../src/design-system/components/atoms/multi-select/multi-select.tsx"],"sourcesContent":["import { useState } from 'react'\nimport styles from './multi-select.module.css'\nimport { Button } from '../button/button'\nimport { IIcon } from '../icon/icon'\n\nexport interface IMultiSelect {\n  id?: string\n  name: string\n  options: Array<ISelectOption>\n  selectedOptions: Array<string>\n  onToggleOption: CallableFunction\n  icon?: IIcon\n}\n\nexport interface ISelectOption {\n  name: string\n  value: string\n}\n\nconst MultiSelect = (\n  ({ name, options, selectedOptions, onToggleOption, icon } : IMultiSelect) => {\n    \n    const[isDropdownOpen, setIsDropdownOpen] = useState(false)\n\n    function handleClickOnDropdown() {\n        setIsDropdownOpen(!isDropdownOpen)\n    }\n\n    function isOptionsPopulated() {\n      return options instanceof Array && options.length\n    }\n\n    function getSelectedOptionName(options: Array<ISelectOption>, selectedOptionValue: string) {\n      const selectedOption = options.find(option => option.value===selectedOptionValue);\n      return selectedOption?.name;\n    }\n\n    return (\n      <div className={styles.wrapper}>\n        {isOptionsPopulated() && (\n          <Button \n            type={'button'} \n            surface={'secondary'} \n            className={styles.multiSelectDropdown} onClick={()=>handleClickOnDropdown()}\n            iconRight={icon}\n            rounded >\n                {(!selectedOptions || selectedOptions.length===0) ? name : (selectedOptions.length===1 ? `${name} (${getSelectedOptionName(options, selectedOptions[0])})` :`${name} (${selectedOptions.length} valda)`)}\n                {isDropdownOpen ? \n                    <ul className={styles.multiSelectDropdownOptions}>\n                        {options.map(option => {\n                            const isSelected = selectedOptions && selectedOptions.some(item=>item===option.value)\n                            return (\n                                    <li key={option.value} className={styles.multiSelectDropdownOption}>\n                                    <input type=\"checkbox\" checked={isSelected} onChange={() => onToggleOption(option)} className={styles.multiSelectDropdownOptionCheckbox}></input>\n                                    <span>{option.name}</span>\n                                </li>\n                            )\n                        })}\n                    </ul> : null}\n            </Button>\n        )}\n      </div>\n    )\n  }\n)\n\nexport { MultiSelect }\n"],"names":["MultiSelect","name","options","selectedOptions","onToggleOption","isDropdownOpen","setIsDropdownOpen","useState","handleClickOnDropdown","isOptionsPopulated","length","getSelectedOptionName","options2","selectedOptionValue","selectedOption","option","_jsx","styles","wrapper","multiSelectDropdown","icon","multiSelectDropdownOptions","isSelected","item","_jsxs","multiSelectDropdownOption","multiSelectDropdownOptionCheckbox"],"mappings":"maAmBAA,EAAA,CAAA,CACG,KAAAC,EAAEA,QAAAA,EAAMC,gBAAAA,EAASC,eAAAA,EAAiBC,KAAAA,CAAoC,IAAA,CAErE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EAEA,SAAAC,GAAA,CACIF,EAAAA,CAAAA,CAAAA,CAAiC,CAGrC,SAAAG,GAAA,CACE,OAAAP,aAAA,OAAAA,EAAA,MAA2CQ,CAG7C,SAAAC,EAAAC,EAAAC,EAAA,CACE,MAAAC,EAAAF,EAAA,KAAAG,GAAAA,EAAA,QAAAF,CAAA,EACA,OAAAC,GAAA,YAAAA,EAAA,IAAuBb,CAGzB,OAAAe,EAAA,MAAA,CACE,UAAAC,EAAA,QAAuBC,SAAAA,EAAAA,GAAAA,EAAAA,EAAAA,CAEZ,KAAA,SACC,QAAA,YACG,UAAAD,EAAA,oBACSE,QAAAA,IAAAA,EAAAA,EAA0D,UAAAC,EACjEA,QAAAA,GACJ,SAAA,CAAA,CAAAjB,GAAAA,EAAA,SAAA,EAAAF,EAAAE,EAAA,SAAA,EAAA,GAAAF,MAAAU,EAAAT,EAAAC,EAAA,CAAA,CAAA,KAAA,GAAAF,MAAAE,EAAA,gBAAAE,EAAAW,EAAA,KAAA,CAGC,UAAAC,EAAA,2BAAsBI,SAAAA,EAAAA,IAAAA,GAAAA,CAEd,MAAAC,EAAAnB,GAAAA,EAAA,KAAAoB,GAAAA,IAAAR,EAAA,KAAA,EACA,OAAAS,EAAA,KAAA,CACQ,UAAAP,EAAA,0BAAyCQ,SAAAA,CAAAA,EAAAA,QAAAA,CACzC,KAAA,WAAY,QAAAH,EAAoBA,SAAAA,IAAAA,EAAAA,CAAAA,EAAiD,UAAAL,EAAA,iCAAqBS,CAAAA,EAAAA,EAAAA,OAAAA,CACtG,SAAAX,EAAA,IAAcd,CAAAA,CAAAA,CAAY,EAAAc,EAAA,KAAA,CAFL,CAAA,CAKhC,CAAA,EAAA,IAAA,CACO,CAAA,CAAA,CAAA,CAK9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}