{"version":3,"file":"icon-button-da898f55.js","sources":["../../src/design-system/components/atoms/icon-button/icon-button.tsx"],"sourcesContent":["import styles from './icon-button.module.css'\nimport cx from 'classnames'\nimport { motion } from 'framer-motion'\nimport { LinkComponent } from '../ui-link/ui-link'\nimport { Icon, TIcon } from '../icon/icon'\n\nexport type TIconButtonSize = 'small' | 'medium' | 'large'\n\ntype TWithLink = {\n    type: 'link';\n    linkUrl: string;\n    linkComponent?: any;\n    isExternal?: boolean;\n}\ntype TWithoutLink = {\n    type: 'button';\n    onClick: (data?: any) => void;\n}\n\nexport type TIconButton = {\n    type: 'link' | 'button';\n    icon: TIcon;\n    size?: TIconButtonSize\n    isTransparent?: boolean\n    className?: string\n    noPadding?: boolean;\n    noBorder?: boolean;\n    /**\n     * If a positive number (1-99) has been provided a number  will be displayed in a notification format\n     * @default undefined\n     */\n    notification?: number;\n} & (TWithLink | TWithoutLink); \n\nexport function getIconButtonSize(surface: TIconButtonSize, hasChildren: boolean) {\n    if(hasChildren)\n        return 'buttonRectangular'\n    switch (surface) {\n      case 'medium':\n        return 'buttonMedium'\n      case 'large':\n        return 'buttonLarge'\n      case 'small':\n      default:\n        return 'buttonSmall'\n    }\n  }\n\nconst IconButton = (props: TIconButton) => {\n  const renderLink = () => {\n    if (props.type === 'button') {\n      return;\n    }\n\n    if (props.isExternal) {\n      return (\n        <a\n          className={cx(styles.iconButton, props.className, styles[props.size ?? 'small'], {\n            [styles.noPadding]: props.noPadding,\n            [styles.transparent]: props.isTransparent,\n            [styles.noBorder]: props.noBorder,\n          })}\n          href={props.linkUrl}\n          target='_blank'\n        >\n          <Icon icon={props.icon} />\n          {props.notification && props.notification < 100 && <motion.span initial={{ scale: 0 }} animate={{ scale: 1 }} className={styles.notification}>{props.notification}</motion.span>}\n        </a>\n      )\n    } else {\n      const Link = props.linkComponent ?? LinkComponent;\n\n      return (\n        <Link\n          to={props.linkUrl}\n          className={cx(styles.iconButton, props.className, styles[props.size ?? 'small'], {\n            [styles.noPadding]: props.noPadding,\n            [styles.transparent]: props.isTransparent,\n            [styles.noBorder]: props.noBorder,\n          })}\n        >\n          <Icon icon={props.icon} />\n          {props.notification && props.notification < 100 && <motion.span initial={{ scale: 0 }} animate={{ scale: 1 }} className={styles.notification}>{props.notification}</motion.span>}\n        </Link>\n      )\n    }\n  }\n\n  const renderButton = () => {\n    if (props.type === 'link') {\n      return;\n    }\n\n    return (\n      <button\n        className={cx(styles.iconButton, props.className, styles[props.size ?? 'small'], {\n          [styles.noPadding]: props.noPadding,\n          [styles.transparent]: props.isTransparent,\n          [styles.noBorder]: props.noBorder,\n        })}\n        onClick={props.onClick}\n      >\n        <Icon icon={props.icon} />\n        {!!props.notification && props.notification < 100 && <motion.span initial={{ scale: 0 }} animate={{ scale: 1 }} className={styles.notification}>{props.notification}</motion.span>}\n      </button>\n    )\n  }\n\n  return (\n    <>\n      {props.type === 'link' ? renderLink() : renderButton()}\n    </>\n  )\n}\n\nexport { IconButton }\n"],"names":["IconButton","props","renderLink","_jsxs","cx","styles","noPadding","isTransparent","noBorder","linkUrl","_jsx","Icon","icon","notification","Link","LinkComponent","renderButton","onClick","_Fragment"],"mappings":"0dAgDAA,EAAAC,GAAA,CACE,MAAAC,EAAA,IAAA,CACE,GAAAD,EAAA,OAAA,SAIA,IAAAA,EAAA,WACE,OAAAE,EAAA,IAAA,CACE,UAAAC,EAAAC,EAAA,WAAAJ,EAAA,UAAAI,EAAAJ,EAAA,MAAA,OAAA,EAAA,CACmF,CAAAI,EAAA,SAAA,EAAAJ,EAAA,UACrDK,CAAAA,EAAAA,WAAAA,EAAAA,EAAAA,cACEC,CAAAA,EAAAA,QAAAA,EAAAA,EAAAA,QACHC,CAAAA,EAC1B,KAAAP,EAAA,QACWQ,OAAAA,SACL,SAAA,CAAAC,EAAAC,EAAA,CAEF,KAAAV,EAAA,IAAaW,CAAAA,EAAAA,EAAAA,cAAAA,EAAAA,aAAAA,KAAAA,EAAAA,EAAAA,KAAAA,CAC6C,QAAA,CAAU,MAAA,CAAS,EAAE,QAAA,CAAY,MAAA,CAAS,EAAE,UAAAP,EAAA,aAAqBQ,SAAAA,EAAAA,YAAqBA,CAAAA,CAAAA,CAA2B,CAAA,EAC/K,CAGL,MAAAC,EAAAb,EAAA,eAAAc,EAEA,OAAAZ,EAAAW,EAAA,CACO,GAAAb,EAAA,QACOQ,UAAAA,EAAAA,EAAAA,WAAAA,EAAAA,UAAAA,EAAAA,EAAAA,MAAAA,OAAAA,EAAAA,CACuE,CAAAJ,EAAA,SAAA,EAAAJ,EAAA,UACrDK,CAAAA,EAAAA,WAAAA,EAAAA,EAAAA,cACEC,CAAAA,EAAAA,QAAAA,EAAAA,EAAAA,QACHC,CAAAA,EAC1B,SAAA,CAAAE,EAAAC,EAAA,CAEI,KAAAV,EAAA,IAAaW,CAAAA,EAAAA,EAAAA,cAAAA,EAAAA,aAAAA,KAAAA,EAAAA,EAAAA,KAAAA,CAC6C,QAAA,CAAU,MAAA,CAAS,EAAE,QAAA,CAAY,MAAA,CAAS,EAAE,UAAAP,EAAA,aAAqBQ,SAAAA,EAAAA,YAAqBA,CAAAA,CAAAA,CAA2B,CAAA,GAGtL,EAGFG,EAAA,IAAA,CACE,GAAAf,EAAA,OAAA,OAIA,OAAAE,EAAA,SAAA,CACE,UAAAC,EAAAC,EAAA,WAAAJ,EAAA,UAAAI,EAAAJ,EAAA,MAAA,OAAA,EAAA,CACmF,CAAAI,EAAA,SAAA,EAAAJ,EAAA,UACrDK,CAAAA,EAAAA,WAAAA,EAAAA,EAAAA,cACEC,CAAAA,EAAAA,QAAAA,EAAAA,EAAAA,QACHC,CAAAA,EAC1B,QAAAP,EAAA,QACcgB,SAAAA,CAAAA,EAAAA,EAAAA,CAEV,KAAAhB,EAAA,IAAaW,CAAAA,EAAAA,CAAAA,CAAAA,EAAAA,cAAAA,EAAAA,aAAAA,KAAAA,EAAAA,EAAAA,KAAAA,CAC+C,QAAA,CAAU,MAAA,CAAS,EAAE,QAAA,CAAY,MAAA,CAAS,EAAE,UAAAP,EAAA,aAAqBQ,SAAAA,EAAAA,YAAqBA,CAAAA,CAAAA,CAA2B,CAAA,CAC5K,EAIZ,OAAAH,EAAAQ,EAAA,CACE,SAAAjB,EAAA,OAAA,OAAAC,EAAA,EAAAc,EAAA,CACuD,CAAA,CAG3D"}