{"version":3,"file":"newsletter-8e9fb900.js","sources":["../../src/design-system/components/molecules/newsletter/newsletter.tsx"],"sourcesContent":["import React, { useCallback, useRef } from 'react'\nimport styles from './newsletter.module.css'\nimport { InputText } from '../../atoms/inputs/input-text/input-text'\nimport { Button } from '../../atoms/button/button'\nimport cx from 'classnames'\n\nexport interface INewsletter {\n  id: string\n  inputValue: string\n  setInputValue: (inputValue:string) => void\n  setIsFocused: (isFocused: boolean) => void\n  isErroneous: boolean\n  setIsErroneous: (isErroneous: boolean) => void\n  placeholder?: string\n  className?: string\n  signupForNewsletter: (inputValue:string) => void\n}\n\nfunction Newsletter({ className, id, inputValue, setInputValue, setIsFocused, isErroneous, setIsErroneous, placeholder, signupForNewsletter }: INewsletter) {\n  const newsletterWrapperElement = useRef<HTMLDivElement | null>(null)\n  const newsletterInputField = useRef<HTMLInputElement | null>(null)\n\n  const onFocus = useCallback(() => {\n    setIsFocused(true)\n  }, [setIsFocused])\n\n  const onBlur = useCallback(() => {\n    setIsFocused(false)\n  }, [setIsFocused])\n\n  const onChange = useCallback(\n    (e: React.FocusEvent<HTMLInputElement>) => {\n      setInputValue(e.target.value)\n      setIsErroneous(false)\n    },\n    [setInputValue]\n  )\n\n  function onClear() {\n    setInputValue('')\n    return newsletterInputField?.current && newsletterInputField.current.focus()\n  }\n\n  function handleSubmit() {\n    const error = !/^[A-Za-z0-9._%+-]{1,64}@(?:[A-Za-z0-9-]{1,63}\\.){1,125}[A-Za-z]{2,63}$/.test(inputValue);\n    if (error) {\n      setIsErroneous(true);\n    } else {\n      signupForNewsletter(inputValue);\n      onClear();\n    }\n  }\n\n  return (\n    <div ref={newsletterWrapperElement} className={cx(styles.newsletter, className)}>\n      <InputText\n        ref={newsletterInputField}\n        type=\"text\"\n        id={id}\n        value={inputValue}\n        className={styles.newsletterInputField}\n        onChange={onChange}\n        onBlur={onBlur}\n        isErroneous={isErroneous}\n        other={{ autoComplete: 'off' }}\n        placeholder={placeholder}\n      />\n      <Button className={styles.submitButton} type='submit' surface='tertiary' size='large' onClick={handleSubmit}>Nyhetsbrev</Button>\n    </div>\n  )\n}\n\nexport { Newsletter }\n"],"names":["Newsletter","className","id","inputValue","setInputValue","setIsFocused","isErroneous","setIsErroneous","placeholder","newsletterWrapperElement","useRef","newsletterInputField","useCallback","onBlur","onChange","e","onClear","handleSubmit","signupForNewsletter","_jsxs","_jsx","InputText","styles","submitButton"],"mappings":"6WAkBA,SAAAA,EAAA,CAAoB,UAAAC,EAAEA,GAAAA,EAAWC,WAAAA,EAAIC,cAAAA,EAAYC,aAAAA,EAAeC,YAAAA,EAAcC,eAAAA,EAAaC,YAAAA,EAAgBC,oBAAAA,CAA8C,EAAA,CACvJ,MAAAC,EAAAC,SAAA,IAAA,EACAC,EAAAD,SAAA,IAAA,EAEAE,EAAAA,YAAA,IAAA,CACEP,EAAAA,EAAAA,CAAiB,EAAA,CAAAA,CAAA,CAAA,EAGnB,MAAAQ,EAAAD,EAAAA,YAAA,IAAA,CACEP,EAAAA,EAAAA,CAAkB,EAAA,CAAAA,CAAA,CAAA,EAGpBS,EAAAF,cAAAG,GAAA,CAEIX,EAAAA,EAAAA,OAAAA,KAAAA,EACAG,EAAAA,EAAAA,CAAoB,EAAA,CAAAH,CAAA,CAAA,EAKxB,SAAAY,GAAA,CACEZ,OAAAA,EAAAA,EAAAA,GACAO,GAAA,YAAAA,EAAA,UAAAA,EAAA,QAAA,MAAA,CAA2E,CAG7E,SAAAM,GAAA,CACE,CAAA,yEAAA,KAAAd,CAAA,EAEEI,EAAAA,EAAAA,GAEAW,EAAAA,CAAAA,EACAF,IACF,CAGF,OAAAG,EAAA,MAAA,CACE,IAAAV,EAAUA,UAAAA,EAAAA,EAAAA,WAAAA,CAAAA,EAAoE,SAAA,CAAAW,EAAAC,EAAA,CAClE,IAAAV,EACHA,KAAAA,OACA,GAAAT,EACLA,MAAAA,EACOC,UAAAA,EAAAA,qBACWQ,SAAAA,EAClBG,OAAAA,EACAD,YAAAA,EACAP,MAAAA,CACO,aAAA,KAAgB,EAAM,YAAAE,CAC7BA,CAAAA,EAAAA,EAAAA,EAAAA,CAEK,UAAAc,EAAA,aAAmBC,KAAAA,SAAmB,QAAA,WAAiB,KAAA,QAAgB,QAAAN,EAAiBA,SAAAA,YAAc,CAAA,CAAA,CAAmB,CAAA,CAGtI"}