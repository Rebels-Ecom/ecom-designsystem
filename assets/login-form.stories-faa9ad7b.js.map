{"version":3,"file":"login-form.stories-faa9ad7b.js","sources":["../../src/design-system/components/organisms/login-form/login-form.tsx"],"sourcesContent":["import styles from './login-form.module.css'\nimport cx from 'classnames'\nimport { Form, FormGroup } from '../../molecules'\nimport { Button, Icon, InputText, Loader, UILink } from '../../atoms'\nimport { LoadingOverlay } from '../../molecules/loading-overlay/loading-overlay'\nimport { Logotype, TLogotype } from '../../molecules/logotype/logotype'\nimport { useMemo } from 'react'\nimport { IButton, TButtonType } from '../../atoms/button/button'\nimport { validateField } from '../../molecules/form/helpers'\nimport { TFormFieldType } from '../../molecules/form/types'\n\nexport interface ILoginForm {\n  title: string;\n  description?: string;\n  usernameLabel: string;\n  username?: string;\n  passwordLabel: string;\n  password?: string;\n  forgotPasswordLabel: string;\n  primarySubmitLabel: string;\n  secondarySubmitLabel?: string;\n  offerLinkLabel?: string;\n  errorMessage?: any;\n  usernameError?: string;\n  passwordError?: string;\n  onSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n  onPasswordChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onUsernameChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  loading?: boolean;\n  logo: TLogotype;\n}\n\nconst LoginForm = ({\n  title,\n  description,\n  usernameLabel,\n  username,\n  passwordLabel,\n  password,\n  forgotPasswordLabel,\n  onSubmit,\n  primarySubmitLabel,\n  secondarySubmitLabel,\n  offerLinkLabel,\n  errorMessage,\n  usernameError,\n  passwordError,\n  onPasswordChange,\n  onUsernameChange,\n  loading,\n  logo\n}: ILoginForm) => {\n  const actions: IButton[] = useMemo(() => {\n    const x: IButton[] = [{\n      children: primarySubmitLabel,\n      surface: 'primary',\n      type: 'submit',\n      size: 'small'\n    }];\n\n    if (secondarySubmitLabel) {\n      x.push({\n        children: secondarySubmitLabel,\n        surface: 'secondary',\n        type: 'button',\n        size: 'small'\n      })\n    }\n\n    return x;\n  }, [secondarySubmitLabel])\n\n  const fields: TFormFieldType[] = useMemo(() => [{\n    fieldType: 'input',\n    name: 'email',\n    label: usernameLabel,\n    originalValue: username ?? '',\n    type: 'text',\n    pattern: 'email',\n    onControlledChange: onUsernameChange,\n    required: true,\n    error: usernameError ?? 'Ange en korrekt e-post e.g. mail@mail.com', // TODO: store backup copy somewhere?\n    size: 'full'\n  }, {\n    fieldType: 'input',\n    name: 'password',\n    label: passwordLabel,\n    originalValue: password ?? '',\n    type: 'password',\n    pattern: 'password',\n    onControlledChange: onPasswordChange,\n    required: true,\n    error: passwordError ?? 'Lösenord måste vara minst x tecken...', // TODO: store backup copy somewhere?\n    size: 'full'\n  }], [])\n\n  // TODO: remove second part of ternary when tested properly\n  return 1 > 0 ? (\n    <div className={styles.loginForm}>\n      {logo && <Logotype {...logo} classNamePicture={styles.logo} />}\n      <Form\n        formTitle={title}\n        formSubtitle={description}\n        fields={fields.map(field => {\n          return ({...field, valid: validateField(field)})})}\n        loading={!!loading}\n        onControlledSubmit={onSubmit}\n        actions={actions}\n        generalErrorMessage={errorMessage}\n        links={forgotPasswordLabel ? [{ name: forgotPasswordLabel, href: '#' }] : undefined}\n      />\n    </div>\n  ) : (\n    <form className={styles.loginForm} onSubmit={onSubmit}>\n      {loading && <LoadingOverlay isVisible={loading} position='absolute' className={styles.overlay} loaderSize='md'></LoadingOverlay>}\n      {logo && <Logotype {...logo} classNamePicture={styles.logo} />}\n      <h1 className=\"h3\">{title}</h1>\n      {description && <p>{description}</p>}\n      <FormGroup label={usernameLabel} formElementId=\"email\" errorText={usernameError}>\n        <InputText id=\"email\" value={username} autocomplete=\"username\" onChange={onUsernameChange} />\n      </FormGroup>\n      <FormGroup label={passwordLabel} formElementId=\"password\" errorText={passwordError}>\n        <InputText id=\"password\" type=\"password\" autocomplete=\"current-password\" value={password} onChange={onPasswordChange} />\n      </FormGroup>\n      <UILink onSurface=\"transparent\" size=\"default\" href=\"#\">\n        {forgotPasswordLabel}\n      </UILink>\n      <Button type=\"submit\" surface=\"primary\" size=\"small\" fullWidth>\n        {primarySubmitLabel}\n      </Button>\n      {secondarySubmitLabel && (\n        <Button type=\"submit\" surface=\"secondary\" size=\"small\" fullWidth>\n          {secondarySubmitLabel}\n        </Button>\n      )}\n      {offerLinkLabel && (\n        <UILink onSurface=\"transparent\" size=\"default\" href=\"#\">\n          {offerLinkLabel}\n        </UILink>\n      )}\n    </form>\n  )\n}\n\nexport { LoginForm }\n"],"names":["LoginForm","title","description","usernameLabel","username","passwordLabel","password","forgotPasswordLabel","onSubmit","primarySubmitLabel","secondarySubmitLabel","offerLinkLabel","errorMessage","usernameError","passwordError","onPasswordChange","onUsernameChange","loading","actions","useMemo","x","fields","_jsxs","styles","loginForm","logo","field","undefined"],"mappings":"4XAgCAA,EAAA,CAAA,CAAmB,MAAAC,EACjBA,YAAAA,EACAC,cAAAA,EACAC,SAAAA,EACAC,cAAAA,EACAC,SAAAA,EACAC,oBAAAA,EACAC,SAAAA,EACAC,mBAAAA,EACAC,qBAAAA,EACAC,eAAAA,EACAC,aAAAA,EACAC,cAAAA,EACAC,cAAAA,EACAC,iBAAAA,EACAC,iBAAAA,EACAC,QAAAA,EACAC,KAAAA,CAEU,IAAA,CACV,MAAAC,EAAAC,EAAAA,QAAA,IAAA,CACE,MAAAC,EAAA,CAAA,CAAsB,SAAAX,EACVA,QAAAA,UACD,KAAA,SACH,KAAA,OACA,CAAA,EAGR,OAAAC,GACEU,EAAAA,KAAAA,CAAO,SAAAV,EACKA,QAAAA,YACD,KAAA,SACH,KAAA,OACA,CAAA,EAIVU,CAAOA,EAAAA,CAAAA,CAAAA,CAAAA,EAGTC,EAAAF,EAAA,QAAA,IAAA,CAAA,CAAgD,UAAA,QACnC,KAAA,QACL,MAAAhB,EACCA,cAAAA,GAAAA,GACoB,KAAA,OACrB,QAAA,QACG,mBAAAa,EACWA,SAAAA,GACV,MAAAH,GAAA,4CACc,KAAA,MAClB,EAAA,CACL,UAAA,QACU,KAAA,WACL,MAAAR,EACCA,cAAAA,GAAAA,GACoB,KAAA,WACrB,QAAA,WACG,mBAAAU,EACWA,SAAAA,GACV,MAAAD,GAAA,wCACc,KAAA,MAClB,CAAA,EAAA,CAAA,CAAA,EAIR,OAAAQ,EAAA,MAAA,CACE,UAAAC,EAAA,UAAuBC,SAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CACH,GAAAC,EAAKA,iBAAAA,EAAAA,IAA+BA,CAAAA,EAAAA,EAAAA,EAAAA,CACjD,UAAAxB,EACQA,aAAAA,EACGC,OAAAA,EAAAA,IAAAA,IAEZ,CAAQ,GAAAwB,EAAIA,MAAAA,EAAAA,CAAAA,CAAiC,EAAC,EAAG,QAAA,CAAA,CAAAT,EACxCA,mBAAAA,EACST,QAAAA,EACpBU,oBAAAA,EACqBN,MAAAA,EAAAA,CAAAA,CACS,KAAAL,EAAQA,KAAAA,GAA2B,CAAA,EAAA,MAASoB,CAAAA,CAAAA,CAC1E,CAAA,CAgCR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}