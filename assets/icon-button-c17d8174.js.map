{"version":3,"file":"icon-button-c17d8174.js","sources":["../../src/design-system/components/atoms/icon-button/icon-button.tsx"],"sourcesContent":["import styles from './icon-button.module.css'\nimport cx from 'classnames'\nimport { motion } from 'framer-motion'\nimport { LinkComponent } from '../ui-link/ui-link'\nimport { Icon, TIcon } from '../icon/icon'\n\nexport type TIconButtonSize = 'small' | 'medium' | 'large'\n\ntype TWithLink = {\n  type: 'link'\n  linkUrl: string\n  linkComponent?: any\n  isExternal?: boolean\n}\ntype TWithoutLink = {\n  type: 'button'\n  onClick: (data?: any) => void\n}\n\nexport type TIconButton = {\n  type: 'link' | 'button'\n  icon: TIcon\n  size?: TIconButtonSize\n  isTransparent?: boolean\n  className?: string\n  noPadding?: boolean\n  noBorder?: boolean\n  round?: boolean\n  /**\n   * If a positive number (1-99) has been provided a number  will be displayed in a notification format\n   * @default undefined\n   */\n  notification?: number\n} & (TWithLink | TWithoutLink)\n\nconst IconButton = (props: TIconButton) => {\n  if (!props.type) {\n    throw new Error('type must be assigned')\n  }\n\n  const renderLink = () => {\n    if (props.type === 'button') {\n      return\n    }\n\n    if (props.isExternal) {\n      return (\n        <a\n          className={cx(styles.iconButton, props.className, styles[props.size ?? 'small'], {\n            [styles.noPadding]: props.noPadding,\n            [styles.transparent]: props.isTransparent,\n            [styles.noBorder]: props.noBorder,\n            [styles.round]: props.round,\n          })}\n          href={props.linkUrl}\n          target=\"_blank\"\n        >\n          <Icon icon={props.icon} />\n          {props.notification && props.notification < 100 && (\n            <motion.span initial={{ scale: 0 }} animate={{ scale: 1 }} className={styles.notification}>\n              {props.notification < 100 ? props.notification : '99+'}\n            </motion.span>\n          )}\n        </a>\n      )\n    } else {\n      const Link = props.linkComponent ?? LinkComponent\n\n      return (\n        <Link\n          to={props.linkUrl}\n          className={cx(styles.iconButton, props.className, styles[props.size ?? 'small'], {\n            [styles.noPadding]: props.noPadding,\n            [styles.transparent]: props.isTransparent,\n            [styles.noBorder]: props.noBorder,\n            [styles.round]: props.round,\n          })}\n        >\n          <Icon icon={props.icon} />\n          {props.notification && (\n            <motion.span initial={{ scale: 0 }} animate={{ scale: 1 }} className={styles.notification}>\n              {props.notification < 100 ? props.notification : '99+'}\n            </motion.span>\n          )}\n        </Link>\n      )\n    }\n  }\n\n  const renderButton = () => {\n    if (props.type === 'link') {\n      return\n    }\n\n    return (\n      <button\n        className={cx(styles.iconButton, props.className, styles[props.size ?? 'small'], {\n          [styles.noPadding]: props.noPadding,\n          [styles.transparent]: props.isTransparent,\n          [styles.noBorder]: props.noBorder,\n          [styles.round]: props.round,\n        })}\n        onClick={props.onClick}\n      >\n        <Icon icon={props.icon} />\n        {!!props.notification && (\n          <motion.span initial={{ scale: 0 }} animate={{ scale: 1 }} className={styles.notification}>\n            {props.notification < 100 ? props.notification : '99+'}\n          </motion.span>\n        )}\n      </button>\n    )\n  }\n\n  return <>{props.type === 'link' ? renderLink() : renderButton()}</>\n}\n\nexport { IconButton }\n"],"names":["IconButton","props","renderLink","_jsxs","cx","styles","noPadding","isTransparent","noBorder","round","linkUrl","_jsx","Icon","icon","notification","Link","LinkComponent","renderButton","onClick","_Fragment"],"mappings":"khBAmCAA,EAAAC,GAAA,CACE,GAAA,CAAAA,EAAA,KACE,MAAA,IAAA,MAAA,uBAAA,EAGF,MAAAC,EAAA,IAAA,CACE,GAAAD,EAAA,OAAA,SAIA,IAAAA,EAAA,WACE,OAAAE,EAAA,IAAA,CACE,UAAAC,EAAAC,EAAA,WAAAJ,EAAA,UAAAI,EAAAJ,EAAA,MAAA,OAAA,EAAA,CACmF,CAAAI,EAAA,SAAA,EAAAJ,EAAA,UACrDK,CAAAA,EAAAA,WAAAA,EAAAA,EAAAA,cACEC,CAAAA,EAAAA,QAAAA,EAAAA,EAAAA,SACHC,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KACHC,CAAAA,EACvB,KAAAR,EAAA,QACWS,OAAAA,SACL,SAAA,CAAAC,EAAAC,EAAA,CAEF,KAAAX,EAAA,IAAaY,CAAAA,EAAAA,EAAAA,cAAAA,EAAAA,aAAAA,KAAAA,EAAAA,EAAAA,KAAAA,CAEJ,QAAA,CAAU,MAAA,CAAS,EAAE,QAAA,CAAY,MAAA,CAAS,EAAE,UAAAR,EAAA,aAAqBS,SAAAA,EAAAA,aAAAA,IAAAA,EAAAA,aAAAA,KAC1B,CAAA,CAAA,CAEpD,CAAA,EACA,CAGL,MAAAC,EAAAd,EAAA,eAAAe,EAEA,OAAAb,EAAAY,EAAA,CACO,GAAAd,EAAA,QACOS,UAAAA,EAAAA,EAAAA,WAAAA,EAAAA,UAAAA,EAAAA,EAAAA,MAAAA,OAAAA,EAAAA,CACuE,CAAAL,EAAA,SAAA,EAAAJ,EAAA,UACrDK,CAAAA,EAAAA,WAAAA,EAAAA,EAAAA,cACEC,CAAAA,EAAAA,QAAAA,EAAAA,EAAAA,SACHC,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KACHC,CAAAA,EACvB,SAAA,CAAAE,EAAAC,EAAA,CAEI,KAAAX,EAAA,IAAaY,CAAAA,EAAAA,EAAAA,cAAAA,EAAAA,EAAAA,KAAAA,CAEJ,QAAA,CAAU,MAAA,CAAS,EAAE,QAAA,CAAY,MAAA,CAAS,EAAE,UAAAR,EAAA,aAAqBS,SAAAA,EAAAA,aAAAA,IAAAA,EAAAA,aAAAA,KAC1B,CAAA,CAAA,CAEpD,CAAA,GAGP,EAGFG,EAAA,IAAA,CACE,GAAAhB,EAAA,OAAA,OAIA,OAAAE,EAAA,SAAA,CACE,UAAAC,EAAAC,EAAA,WAAAJ,EAAA,UAAAI,EAAAJ,EAAA,MAAA,OAAA,EAAA,CACmF,CAAAI,EAAA,SAAA,EAAAJ,EAAA,UACrDK,CAAAA,EAAAA,WAAAA,EAAAA,EAAAA,cACEC,CAAAA,EAAAA,QAAAA,EAAAA,EAAAA,SACHC,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KACHC,CAAAA,EACvB,QAAAR,EAAA,QACciB,SAAAA,CAAAA,EAAAA,EAAAA,CAEV,KAAAjB,EAAA,IAAaY,CAAAA,EAAAA,CAAAA,CAAAA,EAAAA,cAAAA,EAAAA,EAAAA,KAAAA,CAEJ,QAAA,CAAU,MAAA,CAAS,EAAE,QAAA,CAAY,MAAA,CAAS,EAAE,UAAAR,EAAA,aAAqBS,SAAAA,EAAAA,aAAAA,IAAAA,EAAAA,aAAAA,KAC1B,CAAA,CAAA,CAEpD,CAAA,CACK,EAIZ,OAAAH,EAAAQ,EAAA,CAAO,SAAAlB,EAAA,OAAA,OAAAC,EAAA,EAAAe,EAAA,CAAuD,CAAA,CAChE"}