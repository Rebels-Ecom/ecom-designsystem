{"version":3,"file":"message-popup.stories-0a77e68c.js","sources":["../../src/design-system/components/atoms/message-popup/message-popup.tsx"],"sourcesContent":["import React from 'react'\nimport styles from './message-popup.module.css'\nimport { TIcon, Icon } from '../icon/icon'\nimport cx from 'classnames'\nimport { IconButton } from '../icon-button/icon-button'\n\nexport type TPopupPosition = 'relative' | 'absolute'\nexport type TArrowPosition = 'left' | 'right' | 'center'\n\nexport interface IMessagePopup {\n    children: React.ReactNode\n    isOpen: boolean\n    onClose: () => void\n    position?: TPopupPosition\n    icon?: TIcon\n    arrowPosition?: TArrowPosition\n}\n\nfunction MessagePopup({ children, isOpen, icon, position='relative', arrowPosition='left', onClose } : IMessagePopup) {\n  if(!isOpen) return null\n  return (\n    <div className={cx(styles.messagePopup, styles[arrowPosition], styles[position])}>\n      {icon && <Icon icon={icon} className={styles.icon}></Icon>}\n      {children}\n      <IconButton className={styles.iconBtnClose} onClick={onClose} icon={'icon-x'} size=\"large\" isTransparent isLink={false} linkComponent={undefined}></IconButton>\n    </div>\n  )\n}\n\nexport { MessagePopup }"],"names":["MessagePopup","children","isOpen","icon","arrowPosition","onClose","_jsxs","cx","styles","position","_jsx","Icon","iconBtnClose","undefined"],"mappings":"whBAkBA,SAAAA,EAAA,CAAsB,SAAAC,EAAEA,OAAAA,EAAUC,KAAAA,EAAQC,SAAAA,EAAAA,WAAe,cAAAC,EAAA,OAA0B,QAAAC,CAAgC,EAAA,CACjH,OAAAH,EACAI,EAAA,MAAA,CACE,UAAAC,EAAAC,EAAA,aAAAA,EAAAJ,CAAA,EAAAI,EAAAC,CAAA,CAAA,EAA+E,SAAA,CAAAN,GAAAO,EAAAC,EAAA,CAC/D,KAAAR,EAACA,UAAAA,EAAAA,IAA8BA,CAAAA,EAAAA,EAAAA,EAAAA,EAAAA,CAElC,UAAAK,EAAA,aAAmBI,QAAAA,EAAuBP,KAAAA,SAAe,KAAA,QAAe,cAAA,GAAqB,OAAA,GAAS,cAAA,MAAsBQ,CAAAA,CAAAA,CAAwB,CAAA,EALvJ,IAQd;;;;;;"}