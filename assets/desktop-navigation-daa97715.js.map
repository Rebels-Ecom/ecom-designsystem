{"version":3,"file":"desktop-navigation-daa97715.js","sources":["../../src/design-system/components/molecules/navigation/desktop-navigation/desktop-navigation.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { INavigation, TNavCategory, TNavLink } from \"../types\";\nimport { motion } from \"framer-motion\";\nimport { Icon } from \"../../../atoms\";\nimport styles from './desktop-navigation.module.css'\nimport cx from 'classnames'\nimport { ContentWrapper } from \"../../../layouts\";\n\nconst DesktopNavigation = ({ categories, currentSlug, initial }: INavigation) => {\n  const [activeTopLevel, setActiveTopLevel] = useState<TNavCategory | TNavLink>();\n  const [hoveredTopLevel, setHoveredTopLevel] = useState<TNavCategory | TNavLink>();\n  const [activeSecondLevel, setActiveSecondLevel] = useState<TNavCategory | TNavLink | undefined>();\n  const [hoveredSecondLevel, setHoveredSecondLevel] = useState<TNavCategory | TNavLink | undefined>();\n  const [hoveredThirdLevel, setHoveredThirdLevel] = useState<string | undefined>(undefined);\n\n  const setActiveTabs = () => {\n    const activeTab =\n      categories.find((cat) => {\n        if (cat.href === currentSlug) {\n          return cat;\n        }\n        return isCategory(cat)\n          ? cat.links.find((link) => {\n              if (isLink(link)) {\n                if (link.href === currentSlug) {\n                  setActiveSecondLevel(link);\n                }\n                return link.href === currentSlug;\n              }\n              if (isCategory(link)) {\n                return link.href === currentSlug ?? link.links.find((subLink) => {\n                  if (isLink(subLink)) {\n                    if (subLink.href === currentSlug) {\n                      setActiveSecondLevel(activeSecondLevel);\n                      setHoveredSecondLevel(activeSecondLevel ?? link);\n                    }\n                    return subLink.href === currentSlug;\n                  }\n                });\n              }\n            })\n          : cat.href === currentSlug;\n      }) ??\n      categories.find((x) => x.name === initial) ??\n      undefined;\n\n    setActiveTopLevel(activeTab);\n    setHoveredTopLevel(activeTab);\n  };\n\n  useEffect(() => {\n    setActiveTabs();\n  }, []);\n\n  const getActiveSecondLevel = (tLevel?: TNavCategory | TNavLink) => {\n    const top = tLevel ?? activeTopLevel;\n    return isCategory(top)\n      ? top.links.find((l) => (isCategory(l) ? l.links.find((sl) => (isLink(sl) ? sl.href === currentSlug : undefined)) : l.href === currentSlug))\n      : undefined;\n  };\n\n  useEffect(() => {\n    const el = document.body;\n\n    if (el) {\n      if (activeSecondLevel) {\n        el.classList.add('overflow-hidden');\n      } else {\n        el.classList.remove('overflow-hidden');\n      }\n    }\n  }, [activeSecondLevel]);\n\n  const activeTop = hoveredTopLevel ?? activeTopLevel;\n\n  return (\n    <nav className={styles.desktopNavigation}>\n      <ContentWrapper padding={0}>\n        <motion.div className={styles.topLevel} onHoverEnd={() => setHoveredTopLevel(activeTopLevel)}>\n          <div className={styles.topLevelLinks}>\n            <motion.ul className={styles.topLevelLinkList}>\n              {categories.map((cat, i) => (\n                <motion.li\n                  key={`${cat.name}-${i}`}\n                  className={styles.topLevelLinkInner}\n                  onHoverStart={() => {\n                    setHoveredTopLevel(cat);\n                    setHoveredSecondLevel(getActiveSecondLevel(cat));\n                  }}\n                >\n                  {hoveredTopLevel?.name === cat.name && (\n                    <motion.div\n                      className={styles.topLevelLinkActive}\n                      layoutId=\"activeLink\"\n                      transition={{\n                        type: 'spring',\n                        stiffness: 200,\n                        damping: 20,\n                      }}\n                    />\n                  )}\n                    <motion.a\n                      key={`${cat.name}-${i}`}\n                      className={cx(styles.topLevelLink, {[styles.active]: activeTopLevel?.name === cat.name})}\n                      href={cat.href}\n                      target={cat.openInNewTab ? '_blank' : '_self'}\n                    >\n                      {cat.name}\n                      {cat.links?.length ?\n                        <Icon icon=\"icon-chevron-down\" /> : null\n                      }\n                    </motion.a>\n                  {/* {isLink(cat) && (\n                    <motion.a\n                      key={`${cat.name}-${i}`}\n                      className={cx(styles.topLevelLink, {[styles.active]: activeTopLevel === cat})}\n                      href={cat.href}\n                      target={cat.openInNewTab ? '_blank' : '_self'}\n                    >\n                      {cat.name}\n                    </motion.a>\n                  )}\n                  {isCategory(cat) && (\n                    <motion.button\n                      key={`${cat.name}-${i}`}\n                      className={cx(styles.topLevelLink, {[styles.active]: activeTopLevel === cat})}\n                      onClick={() => {\n                        setActiveTopLevel(cat);\n                        setHoveredSecondLevel(getActiveSecondLevel(cat));\n                      }}\n                    >\n                      {cat.name}\n                      <Icon icon=\"icon-chevron-down\" />\n                    </motion.button>\n                  )} */}\n                </motion.li>\n              ))}\n            </motion.ul>\n          </div>\n          <motion.div initial={{ height: 0 }} animate={{ height: activeTop?.links?.length ? 'auto' : 0 }} className={styles.secondLevel}>\n            <ContentWrapper padding={0}>\n              <div className={styles.secondLevelInner}>\n                <motion.ul className={styles.secondLevelLinkList}>\n                  {isCategory(activeTop) ? (\n                    activeTop.links.map((link, i) => (\n                      <motion.li\n                        className={styles.secondLevelLinkItem}\n                        key={`${link.name}-${i}`}\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                        onHoverStart={() => {\n                          setHoveredSecondLevel(link);\n                        }}\n                        onHoverEnd={() => {\n                          const fallBackSecondLevel = getActiveSecondLevel();\n                          setHoveredSecondLevel(activeSecondLevel ?? fallBackSecondLevel);\n                        }}\n                      >\n                        {hoveredSecondLevel?.name === link.name && (\n                          <motion.div\n                            className={styles.secondLevelLinkActive}\n                            layoutId=\"activeChildLinkX\"\n                            transition={{\n                              type: 'spring',\n                              stiffness: 200,\n                              damping: 20,\n                            }}\n                          />\n                        )}\n                        {isLink(link) && (\n                          <motion.a\n                            key={`${link.name}-${i}`}\n                            className={cx(styles.secondLevelLink, {[styles.active]: activeSecondLevel === link})}\n                            href={link.href}\n                            target={link.openInNewTab ? '_blank' : '_self'}\n                            onClick={() => {\n                              setActiveSecondLevel(link);\n                            }}\n                          >\n                            {link.name}\n                          </motion.a>\n                        )}\n                        {isCategory(link) && (\n                          <motion.button\n                            key={`${link.name}-${i}`}\n                            className={cx(styles.secondLevelLink, {[styles.active]: activeSecondLevel === link})}\n                            onClick={() => {\n                              setActiveSecondLevel(link);\n                              setActiveTopLevel(hoveredTopLevel);\n                            }}\n                          >\n                            {link.name}\n                            <Icon icon=\"icon-chevron-down\" />\n                          </motion.button>\n                        )}\n                      </motion.li>\n                    ))\n                  ) : (\n                    // <div style={{ height: '48px' }} />\n                    null\n                  )}\n                </motion.ul>\n              </div>\n            </ContentWrapper>\n          </motion.div>\n        </motion.div>\n        {isCategory(activeSecondLevel) ? (\n          <div className={styles.thirdLevel}>\n            <ContentWrapper padding={0}>\n              <motion.div\n                className={styles.thirdLevelInner}\n                initial={{ opacity: 0, height: 0 }}\n                animate={{ opacity: 1, height: 'auto' }}\n                exit={{ opacity: 0, height: 0  }}\n              >\n                {isCategory(activeSecondLevel) && (\n                  <div className={styles.thirdLevelTextWrapper}>\n                    <div className={activeSecondLevel?.subtitle ? styles.titleWrapper : undefined}>\n                      <h1 className={styles.title}>{activeSecondLevel?.name}</h1>\n                    </div>\n                  </div>\n                )}\n                <button\n                  className={styles.closeButton}\n                  onClick={() => {\n                    // setActiveTopLevel(undefined)\n                    // setHoveredTopLevel(undefined)\n                    setActiveSecondLevel(undefined);\n                    setHoveredSecondLevel(getActiveSecondLevel());\n                  }}\n                >\n                  <Icon icon='icon-plus' className={styles.closeButtonIcon} />\n                </button>\n                <motion.ul className={styles.thirdLevelLinkList} onHoverEnd={() => setHoveredThirdLevel(undefined)}>\n                  {activeSecondLevel.links.map((thirdLevelLink, i) => {\n                    return isLink(thirdLevelLink) ? (\n                      <motion.li\n                        onHoverStart={() => setHoveredThirdLevel(thirdLevelLink.name)}\n                        key={`${thirdLevelLink.href}-${i}`}\n                        className={styles.thirdLevelLinkItem}\n                      >\n                        {hoveredThirdLevel === thirdLevelLink.name && (\n                          <motion.div\n                            layoutId=\"activeThirdLevel\"\n                            className={styles.thirdLevelLinkActive}\n                            transition={{\n                              type: 'spring',\n                              stiffness: 200,\n                              damping: 20,\n                            }}\n                          />\n                        )}\n                        <a href={thirdLevelLink.href} className={styles.thirdLevelLinkWrapper}>\n                          <p className={styles.name}>{thirdLevelLink.name}</p>\n                        </a>\n                      </motion.li>\n                    ) : undefined;\n                  })}\n                </motion.ul>\n              </motion.div>\n            </ContentWrapper>\n          </div>\n        ) : undefined}\n      </ContentWrapper>\n    </nav>\n  );\n};\n\n// TODO: extract helperss\n\nconst isLink = (obj: any): obj is TNavLink => {\n  return obj && !isCategory(obj);\n};\n\nconst isCategory = (obj: any): obj is TNavCategory => {\n  return obj && 'links' in obj;\n};\n\nexport {\n  DesktopNavigation\n}\n"],"names":["DesktopNavigation","categories","currentSlug","activeTopLevel","setActiveTopLevel","useState","hoveredTopLevel","setHoveredTopLevel","activeSecondLevel","setActiveSecondLevel","hoveredSecondLevel","setHoveredSecondLevel","hoveredThirdLevel","setHoveredThirdLevel","setActiveTabs","activeTab","cat","isCategory","link","isLink","useEffect","getActiveSecondLevel","tLevel","top","l","sl","undefined","el","activeTop","_jsx","styles","desktopNavigation","_jsxs","motion","topLevel","topLevelLinks","topLevelLinkList","topLevelLinkInner","topLevelLinkActive","cx","name","href","_a","Icon","secondLevel","secondLevelInner","secondLevelLinkList","secondLevelLinkItem","fallBackSecondLevel","secondLevelLinkActive","thirdLevel","thirdLevelInner","thirdLevelTextWrapper","title","closeButton","closeButtonIcon","thirdLevelLinkList","thirdLevelLink","thirdLevelLinkItem","thirdLevelLinkActive","thirdLevelLinkWrapper","obj"],"mappings":"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"}