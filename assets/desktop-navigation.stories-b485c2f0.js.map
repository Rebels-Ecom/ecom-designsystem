{"version":3,"file":"desktop-navigation.stories-b485c2f0.js","sources":["../../src/design-system/components/molecules/navigation/desktop-navigation/desktop-navigation.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { INavigation, TNavCategory, TNavLink } from \"../types\";\nimport { motion } from \"framer-motion\";\nimport { Icon, IconButton } from \"../../../atoms\";\nimport styles from './desktop-navigation.module.css'\nimport cx from 'classnames'\nimport { ContentWrapper } from \"../../../layouts\";\n\nconst DesktopNavigation = ({ categories, currentSlug, initial }: INavigation) => {\n  const [activeTopLevel, setActiveTopLevel] = useState<TNavCategory | TNavLink>();\n  const [hoveredTopLevel, setHoveredTopLevel] = useState<TNavCategory | TNavLink>();\n  const [activeSecondLevel, setActiveSecondLevel] = useState<TNavCategory | TNavLink | undefined>();\n  const [thirdLevelHeight, setThirdLevelHeight] = useState<'auto' | number>('auto');\n  const secondLevelRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const x = window.innerHeight - (secondLevelRef?.current?.getBoundingClientRect()?.top ?? 0)\n    setThirdLevelHeight(x);\n  }, [hoveredTopLevel])\n\n  useEffect(() => {\n    const el = document.body;\n\n    if (el) {\n      if (activeTopLevel) {\n        el.classList.add('no-scroll');\n      } else {\n        el.classList.remove('no-scroll');\n      }\n    }\n\n    return () => el?.classList?.remove('no-scroll')\n  }, [activeTopLevel]);\n\n\n  const setActiveTabs = () => {\n    const activeTab = categories.find(cat => {\n      return !!currentSlug?.includes(cat.href)\n    })\n\n    setHoveredTopLevel(activeTab);\n  };\n\n  useEffect(() => {\n    setActiveTabs();\n  }, []);\n\n  return (\n    <nav className={styles.desktopNavigation}>\n      <ContentWrapper padding={0}>\n        <motion.div\n          className={styles.topLevel}\n          onHoverEnd={() => setActiveTabs()}\n        >\n          <div className={styles.topLevelLinks}>\n            <motion.ul className={styles.topLevelLinkList}>\n              {categories.map((cat, i) => (\n                <motion.li\n                  key={`${cat.name}-${i}`}\n                  className={styles.topLevelLinkInner}\n                  onClick={() => setHoveredTopLevel(cat)}\n                  onHoverStart={() => {\n                    setHoveredTopLevel(cat);\n                  }}\n                >\n                  {hoveredTopLevel?.name === cat.name && (\n                    <motion.div\n                      className={styles.topLevelLinkActive}\n                      layoutId=\"activeLink\"\n                      transition={{\n                        type: 'spring',\n                        stiffness: 200,\n                        damping: 20,\n                      }}\n                    />\n                  )}\n                  {isLink(cat) && (\n                    <motion.a\n                      key={`${cat.name}-${i}`}\n                      className={cx(styles.topLevelLink, {[styles.active]: activeTopLevel === cat})}\n                      href={cat.href}\n                      target={cat.openInNewTab ? '_blank' : '_self'}\n                    >\n                      {cat.name}\n                    </motion.a>\n                  )}\n                  {isCategory(cat) && (\n                    <motion.button\n                      key={`${cat.name}-${i}`}\n                      className={cx(styles.topLevelLink, {[styles.active]: activeTopLevel === cat})}\n                      onClick={() => {\n                        if (activeTopLevel?.name === cat.name) {\n                          setActiveTopLevel(undefined)\n                        } else {\n                          setActiveTopLevel(cat);\n                        }\n                      }}\n                    >\n                      {cat.name}\n                      <Icon icon={activeTopLevel?.name === cat.name ? \"icon-chevron-up\" : \"icon-chevron-down\"} />\n                    </motion.button>\n                  )}\n                </motion.li>\n              ))}\n              <motion.div\n                className={styles.closeButton}\n                initial={{ scale: 0, opacity: 0 }}\n                animate={activeTopLevel ? { scale: 1, opacity: 1 } : undefined}\n                exit={{ transition: { delay: 0 }}}\n              >\n                <IconButton\n                  className={styles.iconButton}\n                  icon=\"icon-plus\"\n                  type=\"button\"\n                  onClick={() => setActiveTopLevel(undefined)}\n                />\n              </motion.div>\n            </motion.ul>\n          </div>\n          <motion.div\n            initial={{ height: 0 }}\n            animate={{ height: activeTopLevel?.links?.length ? 'auto' : 0 }}\n            className={styles.secondLevel}\n            ref={secondLevelRef}\n          >\n            <ContentWrapper padding={0}>\n              <motion.div\n                className={styles.secondLevelInner}\n                style={{ height: `${thirdLevelHeight}px` }}\n                initial={{ y: '-100%', opacity: 0 }}\n                animate={activeTopLevel?.links?.length ? {y: '0', opacity: 1 } : { y: '-100%', opacity: 0, transition: { delay: 0.3 } } }\n              >\n                <motion.ul className={styles.secondLevelLinkList}>\n                  {isCategory(activeTopLevel) ? (\n                    activeTopLevel.links.map((link, i) => (\n                      <motion.li\n                        className={styles.secondLevelLinkItem}\n                        key={`${link.name}-${i}`}\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                      >\n                        <>\n                          <motion.a\n                            className={cx(styles.secondLevelLink, {[styles.active]: activeSecondLevel === link})}\n                            href={link.href}\n                            target={link.openInNewTab ? '_blank' : '_self'}\n                            onClick={() => {\n                              setActiveSecondLevel(link);\n                            }}\n                            >\n                            {link.name}\n                          </motion.a>\n                          <ul className={styles.thirdLevelList}>\n                            {link.links?.map((thirdLevelLink, i) => (\n                              <li key={`${thirdLevelLink.href}-${i}`} className={styles.thirdLeveListItem}>\n                                <a\n                                  href={thirdLevelLink.href}\n                                  target={thirdLevelLink.openInNewTab ? '_blank' : '_self'}\n                                  className={styles.thirdLevelLink}\n                                >\n                                  {thirdLevelLink.name}\n                                </a>\n                              </li>\n                            ))}\n                          </ul>\n                        </>\n                      </motion.li>\n                    ))\n                  ) : (\n                    null\n                  )}\n                </motion.ul>\n                <motion.div className={styles.endOfList} initial={{ opacity: 0 }} animate={{ opacity: activeTopLevel ? 1 : 0 }} />\n              </motion.div>\n            </ContentWrapper>\n          </motion.div>\n        </motion.div>\n      </ContentWrapper>\n    </nav>\n  );\n};\n\n// TODO: extract helperss\n\nconst isLink = (obj: any): obj is TNavLink => {\n  return obj && !isCategory(obj);\n};\n\nconst isCategory = (obj: any): obj is TNavCategory => {\n  return obj && 'links' in obj;\n};\n\nexport {\n  DesktopNavigation\n}\n"],"names":["DesktopNavigation","categories","currentSlug","activeTopLevel","setActiveTopLevel","useState","hoveredTopLevel","setHoveredTopLevel","activeSecondLevel","setActiveSecondLevel","thirdLevelHeight","setThirdLevelHeight","secondLevelRef","useRef","useEffect","x","_b","_a","el","setActiveTabs","activeTab","cat","_jsx","styles","desktopNavigation","_jsxs","motion","topLevel","topLevelLinks","topLevelLinkList","topLevelLinkInner","topLevelLinkActive","isLink","cx","href","name","Icon","i","closeButton","undefined","IconButton","iconButton","secondLevel","secondLevelInner","secondLevelLinkList","secondLevelLinkItem","_Fragment","link","thirdLevelList","thirdLeveListItem","thirdLevelLink","i2","endOfList","obj","isCategory"],"mappings":"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"}