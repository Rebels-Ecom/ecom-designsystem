{"version":3,"file":"blog-card-list.stories-1f64caf9.js","sources":["../../src/design-system/components/organisms/blog-card-list/blog-card-list.tsx"],"sourcesContent":["import { useRef, useState} from 'react'\nimport cx from 'classnames'\nimport { motion } from 'framer-motion'\nimport { BlogCard, IBlogCard } from '../../molecules/blog-card/blog-card'\nimport { Button } from '../../atoms'\nimport styles from './blog-card-list.module.css'\nimport { SwipeList, SwipeListItem } from '../swipe-list/swipe-list'\nimport { Above, Below, ContentWrapper } from '../../layouts'\n\nexport interface IBlogCardList {\n  title?: string\n  blogCards: Array<IBlogCard>\n}\n\nfunction getColumnsNumber(columnsNumber: number) {\n  return columnsNumber === 1 ? styles.fullWidth : (columnsNumber === 3 ? styles.maxColumnsThree : styles.maxColumnsFour);\n}\n\nconst BlogCardList = ({ title, blogCards }: IBlogCardList) => {\n  if (!Array.isArray(blogCards) || !blogCards.length) {\n    return null;\n  }\n  const [list, setList] = useState<Array<IBlogCard>>(blogCards.slice(0, 4))\n\n  const buttonRef = useRef<HTMLButtonElement>(null)\n\n  const scrollToButton = () => {\n    if (!buttonRef?.current) {\n      return;\n    }\n\n    buttonRef.current?.scrollIntoView({ behavior: 'smooth', block: 'end' });\n  }\n\n  const handleShowMore = () => {\n    if (list.length === blogCards.length) {\n      setList(blogCards.slice(0,4))\n    } else {\n      setList(blogCards.slice(0, list.length + 4))\n    }\n    \n    setTimeout(() => scrollToButton(), 100)\n  }\n\n  return (\n    <div className={styles.blogCardList}>\n      {title && <h3 className={styles.title}>{title}</h3>}\n      \n      <Below breakpoint='md'>\n        {(matches: any) => matches && (\n          <SwipeList>\n            {list.map((card: IBlogCard, i: number) => list.length > 1 ? (\n              <SwipeListItem key={i}>\n                  <BlogCard\n                    {...card}\n                    fullWidth={list.length === 1}\n                    maxChar={list.length === 3 ? card.maxChar ?? 200 : undefined}\n                  />\n                </SwipeListItem>\n              ) : (\n                <BlogCard\n                  key={i}\n                  {...card}\n                  fullWidth={list.length === 1}\n                  maxChar={list.length === 3 ? card.maxChar ?? 200 : undefined}\n                />\n              ))}\n          </SwipeList>\n        )}\n      </Below>\n      <Above breakpoint='md'>\n        {(matches) => matches && (\n          <ContentWrapper>\n            <ul className={styles.list}>\n              {list.map((card: IBlogCard, i: number) => (\n                <motion.li\n                  key={i}\n                  className={cx(styles.listItem, getColumnsNumber(list.length))}\n                  initial={{ y: '-10%', opacity: 0 }}\n                  animate={{ y: 0, opacity: 1 }}\n                >\n                  <BlogCard\n                    {...card}\n                    fullWidth={list.length === 1}\n                    maxChar={list.length === 3 ? card.maxChar ?? 200 : undefined}\n                  />\n                </motion.li>\n              ))}\n            </ul>\n\n            {blogCards.length > 4 && (\n              <Button\n              ref={buttonRef}\n              className={styles.showMoreButton}\n              type=\"button\"\n              surface='primary'\n              onClick={handleShowMore}\n              >\n                {list.length === blogCards.length ? \"Visa f√§rre\" : \"Visa fler\"}\n              </Button>\n            )}\n          </ContentWrapper>\n        )}\n      </Above>\n    </div>\n  )\n}\n\nexport { BlogCardList }\n"],"names":["getColumnsNumber","columnsNumber","styles","BlogCardList","title","blogCards","list","setList","useState","buttonRef","useRef","scrollToButton","handleShowMore","setTimeout","_jsxs","blogCardList","matches","_jsx","SwipeList","card","i","SwipeListItem","BlogCard","undefined","Above","ContentWrapper","cx","Button","showMoreButton"],"mappings":"4zBAcA,SAAAA,GAAAC,EAAA,CACE,OAAAA,IAAA,EAAAC,EAAA,UAAAD,IAAA,EAAAC,EAAA,gBAAAA,EAAA,cACF,CAEA,MAAAC,EAAA,CAAA,CAAsB,MAAAC,EAAEA,UAAAA,CAAgC,IAAA,CACtD,GAAA,CAAA,MAAA,QAAAC,CAAA,GAAA,CAAAA,EAAA,OACE,OAAA,KAEF,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAH,EAAA,MAAA,EAAA,CAAA,CAAA,EAEAI,EAAAC,SAAA,IAAA,EAEAC,EAAA,IAAA,OACEF,GAAA,MAAAA,EAAA,WAIAA,EAAAA,EAAAA,UAAAA,MAAAA,EAAAA,eAAAA,CAAkC,SAAA,SAAY,MAAA,KAAiB,GAAO,EAGxEG,EAAA,IAAA,CACEN,EAAA,SAAAD,EAAA,OACEE,EAAAA,EAAAA,MAAAA,EAAAA,CAAAA,CAAAA,EAEAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,OAAAA,CAAAA,CAAAA,EAGFM,WAAAA,IAAAA,IAAAA,GAAAA,CAAsC,EAGxC,OAAAC,EAAA,MAAA,CACE,UAAAZ,EAAA,aAAuBa,SAAAA,CAAAA,GAAAA,EAAAA,KAAAA,CACX,UAAAb,EAAA,MAAsBE,SAAAA,CAAQA,CAAAA,EAAAA,EAAAA,GAAAA,CAElC,WAAA,KAAY,SAAAY,GAAAA,GAAAC,EAAAC,GAAA,CAEJ,SAAAZ,EAAA,IAAA,CAAAa,EAAAC,IAAAd,EAAA,OAAA,EAAAW,EAAAI,GAAA,CAEQ,SAAAJ,EAAAK,EAAA,CACD,GAAAH,EACHA,UAAAA,EAAAA,SAAAA,EACuB,QAAAb,EAAA,SAAA,EAAAa,EAAA,SAAA,IAAA,MACwBI,CAAAA,CACpD,EAAAH,CAAA,EAAAH,EAAAK,EAAA,CAGM,GAAAH,EAEHA,UAAAA,EAAAA,SAAAA,EACuB,QAAAb,EAAA,SAAA,EAAAa,EAAA,SAAA,IAAA,MACwBI,EAAAA,CAAAA,CAAAA,CAEtD,CAAA,CACM,CAAA,EAAAN,EAAAO,GAAA,CAGT,WAAA,KAAY,SAAAR,GAAAA,GAAAF,EAAAW,GAAA,CAEC,SAAA,CAAAR,EAAA,KAAA,CACb,UAAAf,EAAA,KAAsBI,SAAAA,EAAAA,IAAAA,CAAAA,EAAAA,IAAAA,EAAAA,GAAAA,GAAAA,CAER,UAAAoB,GAAAxB,EAAA,SAAAF,GAAAM,EAAA,MAAA,CAAA,EAEoD,QAAA,CACnD,EAAA,OAAK,QAAA,CAAiB,EAAE,QAAA,CACxB,EAAA,EAAK,QAAA,CAAY,EAAE,SAAAW,EAAAK,EAAA,CAEnB,GAAAH,EACHA,UAAAA,EAAAA,SAAAA,EACuB,QAAAb,EAAA,SAAA,EAAAa,EAAA,SAAA,IAAA,MACwBI,CAAAA,CACpD,EAAAH,CAAA,CAAA,CAEJ,CAAA,EAAAf,EAAA,OAAA,GAAAY,EAAAU,GAAA,CAIM,IAAAlB,EACFA,UAAAA,EAAAA,eACamB,KAAAA,SACb,QAAA,UACG,QAAAhB,EACCA,SAAAA,EAAAA,SAAAA,EAAAA,OAAAA,aAAAA,WAE4C,CAAA,CAAA,CAEtD,CAAA,CACa,CAAA,CAAA,CAEZ,CAAA,CAGd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}