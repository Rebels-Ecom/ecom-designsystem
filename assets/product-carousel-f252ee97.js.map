{"version":3,"file":"product-carousel-f252ee97.js","sources":["../../src/design-system/hooks/useCalculateSize.ts","../../src/design-system/components/molecules/product-carousel/product-carousel.tsx"],"sourcesContent":["import { useState, useLayoutEffect } from 'react'\nimport useResizeObserver from '@react-hook/resize-observer'\n\nfunction useCalculateSize(target: any){\n    const [size, setSize] = useState()\n  \n    useLayoutEffect(() => {\n      setSize(target?.current?.getBoundingClientRect())\n    }, [target])\n  \n    useResizeObserver(target, (entry: any) => setSize(entry.contentRect))\n    \n    return size\n}\n\nexport { useCalculateSize }","import { useEffect, useState, useRef } from 'react'\nimport styles from './product-carousel.module.css'\nimport cx from 'classnames'\nimport useSwipe from '../../../hooks/useSwipe'\nimport { IProductCard, ProductCard } from '../product-card/product-card'\nimport { useCalculateSize } from '../../../hooks/useCalculateSize'\n\nexport interface IProductCarousel { \n    productCards: Array<IProductCard>\n    addToCart: CallableFunction\n}\n\nconst ProductCarousel = ({ productCards, addToCart }: IProductCarousel) => {\n  const [currentIndex, setCurrent] = useState(0)\n  const [autoPlay, setAutoPlay] = useState(true)\n  const carouselRef = useRef<HTMLDivElement>(null)\n  const carouselSize = useCalculateSize(carouselRef) || { width: 0, height: 0 }\n  const cardWidth: number = 270\n  const numberOfSlides: number = carouselSize?.width && Math.ceil((productCards.length * cardWidth)/carouselSize.width)\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (autoPlay) {\n        slideRight()\n      }\n    }, 3000)\n\n    return () => {\n      if (interval) {\n        clearInterval(interval)\n      }\n    }\n  })\n\n  const slideRight = () => {\n    setCurrent(numberOfSlides && currentIndex === numberOfSlides - 1 ? 0 : currentIndex + 1)\n  }\n\n  const slideLeft = () => {\n    setCurrent(numberOfSlides && currentIndex === 0 ? numberOfSlides - 1 : currentIndex - 1)\n  }\n\n  const swipeHandlers = useSwipe({ onSwipedLeft: () => slideRight(), onSwipedRight: () => slideLeft() })\n\n  return (\n     <div ref={carouselRef} className={styles.productCarousel} onMouseEnter={() => setAutoPlay(false)} onMouseLeave={() => setAutoPlay(true)}>\n        <div className={styles.carouselContentWrapper} {...swipeHandlers}>\n          <div className={styles.carouselContent} style={{ transform: `translateX(-${currentIndex * 100}%)` }}>\n            {productCards.map((productCard: IProductCard, index: number) => {\n              return <ProductCard key={index} {...productCard} addToCart={addToCart} />\n            })}\n          </div>\n        </div>\n      <div className={styles.carouselPagination}>\n        {Array.from(Array(numberOfSlides), (_: any, index: number) => {\n          return(\n            <div\n              key={index}\n              className={index === currentIndex ? cx(styles.paginationIndicator, styles.paginationIndicatorActive) : cx(styles.paginationIndicator)}\n              onClick={() => setCurrent(index)}\n            />\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport { ProductCarousel }\n"],"names":["useCalculateSize","target","size","setSize","useState","useLayoutEffect","_a","useResizeObserver","entry","ProductCarousel","productCards","currentIndex","setCurrent","autoPlay","setAutoPlay","carouselRef","useRef","carouselSize","cardWidth","numberOfSlides","useEffect","interval","slideRight","clearInterval","slideLeft","swipeHandlers","useSwipe","_jsxs","productCarousel","_jsx","styles","carouselContentWrapper","carouselContent","productCard","index","ProductCard","addToCart","carouselPagination","cx"],"mappings":"imBAGA,SAASA,EAAiBC,EAAY,CAClC,KAAM,CAACC,EAAMC,CAAO,EAAIC,EAAS,SAAA,EAEjCC,OAAAA,EAAAA,gBAAgB,IAAM,OACZF,GAAAG,EAAAL,GAAA,YAAAA,EAAQ,UAAR,YAAAK,EAAiB,uBAAuB,CAAA,EAC/C,CAACL,CAAM,CAAC,EAEXM,EAAkBN,EAASO,GAAeL,EAAQK,EAAM,WAAW,CAAC,EAE7DN,CACX,CCDA,MAAAO,EAAA,CAAA,CAAyB,aAAAC,EAAEA,UAAAA,CAA0C,IAAA,CACnE,KAAA,CAAAC,EAAAC,CAAA,EAAAR,EAAA,SAAA,CAAA,EACA,CAAAS,EAAAC,CAAA,EAAAV,EAAA,SAAA,EAAA,EACAW,EAAAC,SAAA,IAAA,EACAC,EAAAjB,EAAAe,CAAA,GAAA,CAAsD,MAAA,EAAS,OAAA,CAAW,EAC1EG,EAAA,IACAC,GAAAF,GAAA,YAAAA,EAAA,QAAA,KAAA,KAAAP,EAAA,OAAAQ,EAAAD,EAAA,KAAA,EAEAG,EAAAA,UAAAA,IAAAA,CACE,MAAAC,EAAA,YAAA,IAAA,CACER,GACES,GACF,EAAA,GAAA,EAGF,MAAA,IAAA,CACED,GACEE,cAAAA,CAAAA,CACF,CACF,CAAA,EAGF,MAAAD,EAAA,IAAA,CACEV,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,CAAAA,CAAuF,EAGzFY,EAAA,IAAA,CACEZ,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,CAAAA,CAAuF,EAGzFa,EAAAC,EAAA,CAA+B,aAAA,IAAAJ,EAAA,EAAkC,cAAA,IAAAE,EAAA,CAAgC,CAAA,EAEjG,OAAAG,EAAA,MAAA,CACG,IAAAZ,EAAUA,UAAAA,EAAAA,gBAA+Ba,aAAAA,IAAAA,EAAAA,EAAAA,EAAsD,aAAA,IAAAd,EAAA,EAAA,EAAuC,SAAA,CAAAe,EAAA,MAAA,CACnI,UAAAC,EAAA,uBAAuBC,GAAAA,EAA4BN,SAAAA,EAAAA,MAAAA,CACjD,UAAAK,EAAA,gBAAuBE,MAAAA,CAAwB,UAAA,eAAArB,EAAA,OAA2C,EAAQ,SAAAD,EAAA,IAAA,CAAAuB,EAAAC,IAE9FL,EAAAM,EAAA,CAAmB,GAAAF,EAAiBA,UAAAA,CAAaG,EAAAA,CAAAA,CAAnB,CAC/B,CAAA,CAAC,CAAA,EAAAP,EAAA,MAAA,CAGR,UAAAC,EAAA,mBAAuBO,SAAAA,MAAAA,KAAAA,MAAAA,CAAAA,EAAAA,CAAAA,EAAAA,IAEnBR,EAAA,MAAA,CACE,UAAAK,IAAAvB,EAAA2B,EAAAR,EAAA,oBAAAA,EAAA,yBAAA,EAAAQ,EAAAR,EAAA,mBAAA,EAEsI,QAAA,IAAAlB,EAAAsB,CAAA,CACrG,EAAAA,CAAA,CAFrB,CAKf,CAAA,CAAA,CACG,CAAA,CAGZ"}