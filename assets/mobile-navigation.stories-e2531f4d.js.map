{"version":3,"file":"mobile-navigation.stories-e2531f4d.js","sources":["../../src/design-system/components/molecules/navigation/mobile-navigation/mobile-navigation.tsx"],"sourcesContent":["import { AnimatePresence, motion } from 'framer-motion';\nimport { Fragment, useContext, useEffect, useRef, useState } from 'react';\nimport { Button, Icon } from '../../../atoms';\nimport styles from './mobile-navigation.module.css';\nimport cx from 'classnames';\nimport { INavigation, TNavCategory, TNavLink } from '../types';\n\n// TODO: extract list item\ninterface IListItemWithLinks extends TNavCategory {\n  delay?: number;\n  link?: never;\n}\ntype TListItemWithoutLinks = {\n  name: string;\n  link: TNavLink;\n  links?: never;\n  delay?: number;\n};\n\nconst ListItem = ({ name, link, links, delay }: IListItemWithLinks | TListItemWithoutLinks) => {\n  const [open, setOpen] = useState(false);\n  const [height, setHeight] = useState<'auto' | number | `${number}%`>(0);\n  const [activeSecondLevel, setActiveSecondLevel] = useState<string | undefined>();\n\n  return (\n    <motion.div\n      key={name}\n      initial={{ opacity: 0, translateX: '10vw' }}\n      whileInView={{ opacity: 1, translateX: 0, transition: { delay: delay ?? 0.3 } }}\n      viewport={{ once: true }}\n      className={styles.menuListItem}\n    >\n      {isLink(link) ? (\n        <a className={styles.menuListItemLink} href={link.href} target={link.openInNewTab ? '_blank' : '_self'}>\n          {name}\n        </a>\n      ) : (\n        <button\n          className={styles.menuListItemLink}\n          onClick={() => {\n            setHeight(height === 0 ? 'auto' : 0);\n            setOpen(!open);\n          }}\n        >\n          <span className={`${open ? styles.menuListItemLinkActive : ''}`}>{name}</span>\n          {/* <Plus className={`stroke-black ${open ? 'rotate-45' : 'rotate-0'} transition-transform`} /> */}\n          <Icon className={styles.itemIcon} icon={open ? 'icon-chevron-up' : 'icon-chevron-down'} />\n        </button>\n      )}\n      {!!links?.length ? (\n        <motion.div className={styles.subMenuList} initial={{ height: 0 }} animate={{ height }}>\n          {links.map((secondLink) => (\n            <Fragment key={secondLink.name}>\n              {isLink(secondLink) ? (\n                <a className={styles.subMenuListItemLink} href={secondLink.href} target={secondLink.openInNewTab ? '_blank' : '_self'}>\n                  {secondLink.name}\n                  <Icon  className={styles.itemIcon} icon='icon-chevron-right' />\n                </a>\n              ) : (\n                <button\n                  className={styles.subMenuListItemLink}\n                  onClick={() => {\n                    setActiveSecondLevel(activeSecondLevel === secondLink.name ? '' : secondLink.name);\n                  }}\n                >\n                  <span className={`${activeSecondLevel === secondLink.name ? styles.subMenuListItemLinkActive : ''}`}>{secondLink.name}</span>\n                  <Icon className={styles.itemIcon} icon={activeSecondLevel === secondLink.name ? 'icon-chevron-up' : 'icon-chevron-down'} />\n                </button>\n              )}\n              {isCategory(secondLink) && secondLink.links?.length ? (\n                <motion.div\n                  className={styles.subMenuList}\n                  initial={{ height: 0 }}\n                  animate={{ height: activeSecondLevel === secondLink.name ? 'auto' : 0 }}\n                >\n                  {secondLink.links.map((thirdLink) => (\n                    <Fragment key={thirdLink.name}>\n                      {isLink(thirdLink) ? (\n                        <a className={styles.subMenuListItemLink} href={thirdLink.href} target={thirdLink.openInNewTab ? '_blank' : '_self'}>\n                          {thirdLink.name}\n                          <Icon className={styles.itemIcon} icon='icon-chevron-right' />\n                        </a>\n                      ) : // TODO: add support for another level if needed\n                      undefined}\n                    </Fragment>\n                  ))}\n                </motion.div>\n              ) : undefined}\n            </Fragment>\n          ))}\n        </motion.div>\n      ) : undefined}\n    </motion.div>\n  );\n};\n\nconst MobileNavigation = ({ categories, isAuthenticated, signOutLabel, onSignOut, actions, isOpen: open, setIsOpen: setOpen }: INavigation) => {\n  const [distanceTop, setDistanceTop] = useState(0);\n  const mobileNavRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    setDistanceTop((mobileNavRef.current?.getBoundingClientRect().y ?? 0) + (((mobileNavRef.current?.clientHeight ?? 0) + 16) ?? 0));\n  }, [open])\n\n  useEffect(() => {\n    const el = document.body;\n\n    if (el) {\n      if (open) {\n        el.classList.add('no-scroll');\n      } else {\n        el.classList.remove('no-scroll');\n      }\n    }\n  }, [open]);\n\n  return (\n    <div className={styles.mobileNavigation} ref={mobileNavRef}>\n      <div className={styles.top}>\n        {actions && (\n          <div className={styles.actions}>{actions}</div>\n        )}\n        <div className={styles.topInner}>\n          {/* mode=\"wait\" */}\n          <AnimatePresence initial={false} exitBeforeEnter>\n            {!open && (\n              <motion.button\n                key=\"menu-btn\"\n                initial={{ scale: 0.2 }}\n                animate={{ scale: open ? 0 : 1 }}\n                exit={{ scale: 0.2 }}\n                onClick={() => setOpen(true)}\n                className={styles.menuButton}\n              >\n                <Icon className={styles.menuIcon} icon='icon-menu' />\n              </motion.button>\n            )}\n\n            {open && (\n              <motion.button\n                key=\"close-btn\"\n                initial={{ scale: 0.2 }}\n                animate={{ scale: open ? 1 : 0 }}\n                exit={{ scale: 0.2 }}\n                onClick={() => setOpen(false)}\n                className={styles.menuButton}\n              >\n                <Icon className={cx(styles.menuIcon, styles.menuCloseIcon)} icon='icon-plus' />\n              </motion.button>\n            )}\n          </AnimatePresence>\n        </div>\n      </div>\n      <motion.nav\n        className={styles.content}\n        initial={{ x: '100vw' }}\n        animate={{ x: open ? '0' : '100vw' }}\n        transition={{ type: 'tween' }}\n        style={{ paddingTop: `${distanceTop}px` }}\n      >\n        <div className={styles.menuListWrapper}>\n          <ul className={styles.menuList}>\n            {categories.map((cat, i) => {\n              if (isCategory(cat)) {\n                return <ListItem key={cat.name} name={cat.name} links={cat.links} delay={i * 0.1} href={cat.href} />;\n              } else if (isLink(cat)) {\n                return <ListItem key={cat.name} name={cat.name} link={cat} delay={i * 0.1} />;\n              }\n            })}\n          </ul>\n          {isAuthenticated && signOutLabel && onSignOut && (\n            <div className={styles.signOut}>\n              <Button children={signOutLabel} onClick={onSignOut} surface='x' type='button' />\n            </div>\n          )}\n        </div>\n      </motion.nav>\n      <AnimatePresence>\n        {open && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 0.75 }}\n            exit={{ opacity: 0 }}\n            className={styles.backDrop}\n          />\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nconst isLink = (obj: any): obj is TNavLink => {\n  return obj && !isCategory(obj);\n};\n\nconst isCategory = (obj: any): obj is TNavCategory => {\n  return obj && 'links' in obj;\n};\n\nexport {\n  MobileNavigation\n};\n"],"names":["ListItem","name","link","links","open","setOpen","useState","height","setHeight","activeSecondLevel","setActiveSecondLevel","_jsxs","motion","delay","styles","menuListItem","menuListItemLink","href","_jsx","itemIcon","subMenuList","secondLink","Fragment","isLink","subMenuListItemLink","Icon","isCategory","_a","thirdLink","undefined","MobileNavigation","categories","isAuthenticated","signOutLabel","onSignOut","actions","distanceTop","setDistanceTop","mobileNavRef","useRef","useEffect","el","mobileNavigation","top","topInner","menuButton","menuIcon","cx","content","menuListWrapper","menuList","cat","signOut","AnimatePresence","backDrop","obj"],"mappings":"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"}