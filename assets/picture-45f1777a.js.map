{"version":3,"file":"picture-45f1777a.js","sources":["../../src/design-system/components/atoms/picture/picture.tsx"],"sourcesContent":["import styles from './picture.module.css'\r\nimport cx from 'classnames'\r\n\r\nexport type TPictureLoading = 'eager' | 'lazy'\r\nexport type TPictureDecoding = 'sync' | 'async' | 'auto'\r\nexport type TPictureFetchPriority = 'high' | 'low' | 'auto'\r\n\r\nexport interface IPicture {\r\n  id: string\r\n  sources: Array<IPictureSource>\r\n  src: string\r\n  width?: number\r\n  height?: number\r\n  loading?: TPictureLoading\r\n  decoding?: TPictureDecoding\r\n  alt?: string\r\n  fetchPriority?: TPictureFetchPriority\r\n  classNamePicture?: string\r\n  classNameImg?: string\r\n  pictureWithOpacity?: string\r\n}\r\n\r\nexport interface IPictureSource {\r\n  srcset?: string\r\n  type?: string\r\n  media?: string\r\n  sizes?: string\r\n}\r\n\r\nconst Picture = ({\r\n  id,\r\n  sources,\r\n  src,\r\n  width,\r\n  height,\r\n  loading = 'lazy',\r\n  decoding = 'auto',\r\n  alt = '',\r\n  fetchPriority = 'auto',\r\n  classNamePicture,\r\n  classNameImg,\r\n  pictureWithOpacity\r\n}: IPicture) => {\r\n  function isValidPicture() {\r\n    return sources instanceof Array && src && id\r\n  }\r\n\r\n  if (!isValidPicture()) return null\r\n  return (\r\n    <>\r\n      <picture className={classNamePicture ? classNamePicture : styles.picture} id={id}>\r\n        {sources.map((source, i) => (\r\n          <source key={`${id}_source_${i}`} srcSet={source.srcset} type={source.type} media={source.media} sizes={source.sizes} />\r\n        ))}\r\n        <img\r\n          src={src}\r\n          className={classNameImg ? classNameImg : styles.image}\r\n          loading={loading}\r\n          decoding={decoding}\r\n          alt={alt}\r\n          width={width}\r\n          height={height}\r\n          fetchpriority={fetchPriority}\r\n        />\r\n      </picture>\r\n      {pictureWithOpacity && <div className={cx(styles.opacityLayer, pictureWithOpacity==='light' ? styles.withLightBackground : styles.withDarkBackground)}/>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport { Picture }\r\n"],"names":["Picture","id","sources","src","width","height","decoding","alt","fetchPriority","classNamePicture","classNameImg","isValidPicture","_jsxs","_Fragment","styles","picture","source","srcset","type","media","sizes","image","loading","pictureWithOpacity","_jsx","cx"],"mappings":"gUA6BAA,EAAA,CAAA,CAAiB,GAAAC,EACfA,QAAAA,EACAC,IAAAA,EACAC,MAAAA,EACAC,OAAAA,EACAC,QAAAA,EAAAA,OACU,SAAAC,EAAA,OACC,IAAAC,EAAA,GACL,cAAAC,EAAA,OACU,iBAAAC,EAChBA,aAAAA,EACAC,mBAAAA,CAEQ,IAAA,CACR,SAAAC,GAAA,CACE,OAAAT,aAAA,OAAAC,GAAAF,CAA0CA,CAG5C,OAAAU,EAAA,EACAC,EAAAC,EAAA,CACE,SAAA,CAAAD,EAAA,UAAA,CACE,UAAAH,GAAAK,EAAA,QAAiEC,GAAAA,EAASd,SAAAA,CAAAA,EAAAA,IAAAA,CAAAA,EAAAA,IAAAA,EAAAA,SAAAA,CAEtE,OAAAe,EAAA,OAAiDC,KAAAA,EAAAA,KAAqBC,MAAAA,EAAAA,MAAoBC,MAAAA,EAAAA,KAAqBC,EAAAA,GAAAA,YAAAA,GAAAA,CAAAA,EAAAA,EAAAA,MAAAA,CAEjH,IAAAjB,EACEA,UAAAA,GAAAA,EAAAA,MACgDkB,QAAAA,EAChDC,SAAAA,EACAhB,IAAAA,EACAC,MAAAA,EACAH,OAAAA,EACAC,cAAAA,CACeG,CAAAA,CAAAA,CACf,CAAA,EAAAe,GAAAC,EAAA,MAAA,CAEmB,UAAAC,EAAAX,EAAA,aAAAS,IAAA,QAAAT,EAAA,oBAAAA,EAAA,kBAAA,CAA6H,CAAA,CAAA,CAAI,CAAA,EAlBrI,IAqBzB"}